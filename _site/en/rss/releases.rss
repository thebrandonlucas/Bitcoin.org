<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
	<title>Bitcoin Core releases</title>
	<link>https://bitcoin.org/en/version-history</link>
	<description>This RSS feed allows to follow Bitcoin Core new releases.</description>
	<image>
		<title>Bitcoin Core releases</title>
		<url>https://bitcoin.org/img/icons/logo_rss.png?1528322191</url>
		<link>https://bitcoin.org/en/version-history</link>
	</image>
        
	
        <item>
            <title>Bitcoin Core 27.0</title>
            <link>https://bitcoin.org/en/releases/27.0/</link>
            <guid>https://bitcoin.org/en/releases/27.0/</guid>
          
            <pubDate>Thu, 17 Oct 2024 00:00:00 GMT</pubDate>
            
          
          
            <description><![CDATA[Bitcoin Core version 27.0 is now available]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core 25.0</title>
            <link>https://bitcoin.org/en/releases/25.0/</link>
            <guid>https://bitcoin.org/en/releases/25.0/</guid>
          
            <pubDate>Thu, 17 Oct 2024 00:00:00 GMT</pubDate>
            
          
          
            <description><![CDATA[Bitcoin Core version 25.0 is now available]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core 22.0</title>
            <link>https://bitcoin.org/en/releases/22.0/</link>
            <guid>https://bitcoin.org/en/releases/22.0/</guid>
          
            <pubDate>Thu, 17 Oct 2024 00:00:00 GMT</pubDate>
            
          
          
            <description><![CDATA[Bitcoin Core version 22.0 is now available]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core 0.21.1 released</title>
            <link>https://bitcoin.org/en/releases/0.21.1/</link>
            <guid>https://bitcoin.org/en/releases/0.21.1/</guid>
          
            <pubDate>Thu, 17 Oct 2024 00:00:00 GMT</pubDate>
            
          
          
            <description><![CDATA[Bitcoin Core version 0.21.1 is now available]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.21.0 released</title>
            <link>https://bitcoin.org/en/release/v0.21.0</link>
            <guid>https://bitcoin.org/en/release/v0.21.0</guid>
          
            <pubDate>Thu, 14 Jan 2021 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <h1 id="release-notes">0.21.0 Release Notes</h1>

  <p>Bitcoin Core version 0.21.0 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.21.0/">https://bitcoincore.org/bin/bitcoin-core-0.21.0/</a></p>

  <p>For the full release notes refer to:</p>

  <p><a href="https://bitcoincore.org/en/releases/0.21.0/">https://bitcoincore.org/en/releases/0.21.0/</a></p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.20.1 released</title>
            <link>https://bitcoin.org/en/release/v0.20.1</link>
            <guid>https://bitcoin.org/en/release/v0.20.1</guid>
          
            <pubDate>Sat, 01 Aug 2020 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <h1 id="release-notes">0.20.1 Release Notes</h1>

  <p>Bitcoin Core version 0.20.1 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.20.1/">https://bitcoincore.org/bin/bitcoin-core-0.20.1/</a></p>

  <p>This minor release includes various bug fixes and performance
improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes in some cases), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>Upgrading directly from a version of Bitcoin Core that has reached its EOL is
possible, but it might take some time if the data directory needs to be migrated. Old
wallet versions of Bitcoin Core are generally supported.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is supported and extensively tested on operating systems
using the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin
Core should also work on most other Unix-like systems but is not as
frequently tested on them.  It is not recommended to use Bitcoin Core on
unsupported systems.</p>

  <p>From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no
longer supported. Additionally, Bitcoin Core does not yet change appearance
when macOS “dark mode” is activated.</p>

  <h1 id="known-bugs">Known Bugs</h1>

  <p>The process for generating the source code release (“tarball”) has changed in an
effort to make it more complete, however, there are a few regressions in
this release:</p>

  <ul>
    <li>
      <p>The generated <code class="language-text highlighter-rouge">configure</code> script is currently missing, and you will need to
install autotools and run <code class="language-text highlighter-rouge">./autogen.sh</code> before you can run
<code class="language-text highlighter-rouge">./configure</code>. This is the same as when checking out from git.</p>
    </li>
    <li>
      <p>Instead of running <code class="language-text highlighter-rouge">make</code> simply, you should instead run
<code class="language-text highlighter-rouge">BITCOIN_GENBUILD_NO_GIT=1 make</code>.</p>
    </li>
  </ul>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="changes-regarding-misbehaving-peers">Changes regarding misbehaving peers</h2>

  <p>Peers that misbehave (e.g. send us invalid blocks) are now referred to as
discouraged nodes in log output, as they’re not (and weren’t) strictly banned:
incoming connections are still allowed from them, but they’re preferred for
eviction.</p>

  <p>Furthermore, a few additional changes are introduced to how discouraged
addresses are treated:</p>

  <ul>
    <li>
      <p>Discouraging an address does not time out automatically after 24 hours
(or the <code class="language-text highlighter-rouge">-bantime</code> setting). Depending on traffic from other peers,
discouragement may time out at an indeterminate time.</p>
    </li>
    <li>
      <p>Discouragement is not persisted over restarts.</p>
    </li>
    <li>
      <p>There is no method to list discouraged addresses. They are not returned by
the <code class="language-text highlighter-rouge">listbanned</code> RPC. That RPC also no longer reports the <code class="language-text highlighter-rouge">ban_reason</code>
field, as <code class="language-text highlighter-rouge">"manually added"</code> is the only remaining option.</p>
    </li>
    <li>
      <p>Discouragement cannot be removed with the <code class="language-text highlighter-rouge">setban remove</code> RPC command.
If you need to remove a discouragement, you can remove all discouragements by
stop-starting your node.</p>
    </li>
  </ul>

  <h2 id="notification-changes">Notification changes</h2>

  <p><code class="language-text highlighter-rouge">-walletnotify</code> notifications are now sent for wallet transactions that are
removed from the mempool because they conflict with a new block. These
notifications were sent previously before the v0.19 release, but had been
broken since that release (bug #18325)</p>

  <h2 id="psbt-changes">PSBT changes</h2>

  <p>PSBTs will contain both the non-witness utxo and the witness utxo for segwit
inputs in order to restore compatibility with wallet software that are now
requiring the full previous transaction for segwit inputs. The witness utxo
is still provided to maintain compatibility with software which relied on its
existence to determine whether an input was segwit.</p>

  <h1 id="change-log">0.20.1 change log</h1>

  <h3 id="mining">Mining</h3>
  <ul>
    <li>#19019 Fix GBT: Restore “!segwit” and “csv” to “rules” key (luke-jr)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#19219 Replace automatic bans with discouragement filter (sipa)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#19300 Handle concurrent wallet loading (promag)</li>
    <li>#18982 Minimal fix to restore conflicted transaction notifications (ryanofsky)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#19524 Increment input value sum only once per UTXO in decodepsbt (fanquake)</li>
    <li>#19517 psbt: Increment input value sum only once per UTXO in decodepsbt (achow101)</li>
    <li>#19215 psbt: Include and allow both non_witness_utxo and witness_utxo for segwit inputs (achow101)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#19097 Add missing QPainterPath include (achow101)</li>
    <li>#19059 update Qt base translations for macOS release (fanquake)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#19152 improve build OS configure output (skmcontrib)</li>
    <li>#19536 qt, build: Fix QFileDialog for static builds (hebasto)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#19444 Remove cached directories and associated script blocks from appveyor config (sipsorcery)</li>
    <li>#18640 appveyor: Remove clcache (MarcoFalke)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#19194 util: Don’t reference errno when pthread fails (miztake)</li>
    <li>#18700 Fix locking on WSL using flock instead of fcntl (meshcollider)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Aaron Clauson</li>
    <li>Andrew Chow</li>
    <li>fanquake</li>
    <li>Hennadii Stepanov</li>
    <li>João Barbosa</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>MIZUTA Takeshi</li>
    <li>Pieter Wuille</li>
    <li>Russell Yanofsky</li>
    <li>sachinkm77</li>
    <li>Samuel Dobson</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as to everyone that helped with translations on
<a href="https://www.transifex.com/bitcoin/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.20.0 released</title>
            <link>https://bitcoin.org/en/release/v0.20.0</link>
            <guid>https://bitcoin.org/en/release/v0.20.0</guid>
          
            <pubDate>Wed, 03 Jun 2020 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <h1 id="release-notes">0.20.0 Release Notes</h1>

  <p>Bitcoin Core version 0.20.0 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.20.0/">https://bitcoincore.org/bin/bitcoin-core-0.20.0/</a></p>

  <p>This release includes new features, various bug fixes and performance
improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes in some cases), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>Upgrading directly from a version of Bitcoin Core that has reached its EOL is
possible, but it might take some time if the data directory needs to be migrated. Old
wallet versions of Bitcoin Core are generally supported.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is supported and extensively tested on operating systems
using the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin
Core should also work on most other Unix-like systems but is not as
frequently tested on them.  It is not recommended to use Bitcoin Core on
unsupported systems.</p>

  <p>From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no
longer supported. Additionally, Bitcoin Core does not yet change appearance
when macOS “dark mode” is activated.</p>

  <h1 id="known-bugs">Known Bugs</h1>

  <p>The process for generating the source code release (“tarball”) has changed in an
effort to make it more complete, however, there are a few regressions in
this release:</p>

  <ul>
    <li>
      <p>The generated <code class="language-text highlighter-rouge">configure</code> script is currently missing, and you will need to
install autotools and run <code class="language-text highlighter-rouge">./autogen.sh</code> before you can run
<code class="language-text highlighter-rouge">./configure</code>. This is the same as when checking out from git.</p>
    </li>
    <li>
      <p>Instead of running <code class="language-text highlighter-rouge">make</code> simply, you should instead run
<code class="language-text highlighter-rouge">BITCOIN_GENBUILD_NO_GIT=1 make</code>.</p>
    </li>
  </ul>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="p2p-and-network-changes">P2P and network changes</h2>

  <h4 id="removal-of-bip61-reject-network-messages-from-bitcoin-core">Removal of BIP61 reject network messages from Bitcoin Core</h4>

  <p>The <code class="language-text highlighter-rouge">-enablebip61</code> command line option to enable BIP61 has been removed.
(#17004)</p>

  <p>This feature has been disabled by default since Bitcoin Core version 0.18.0.
Nodes on the network can not generally be trusted to send valid messages
(including reject messages), so this should only ever be used when
connected to a trusted node.  Please use the alternatives recommended
below if you rely on this removed feature:</p>

  <ul>
    <li>
      <p>Testing or debugging of implementations of the Bitcoin P2P network protocol
should be done by inspecting the log messages that are produced by a recent
version of Bitcoin Core. Bitcoin Core logs debug messages
(<code class="language-text highlighter-rouge">-debug=&lt;category&gt;</code>) to a stream (<code class="language-text highlighter-rouge">-printtoconsole</code>) or to a file
(<code class="language-text highlighter-rouge">-debuglogfile=&lt;debug.log&gt;</code>).</p>
    </li>
    <li>
      <p>Testing the validity of a block can be achieved by specific RPCs:</p>

      <ul>
        <li>
          <p><code class="language-text highlighter-rouge">submitblock</code></p>
        </li>
        <li>
          <p><code class="language-text highlighter-rouge">getblocktemplate</code> with <code class="language-text highlighter-rouge">'mode'</code> set to <code class="language-text highlighter-rouge">'proposal'</code> for blocks with
potentially invalid POW</p>
        </li>
      </ul>
    </li>
    <li>
      <p>Testing the validity of a transaction can be achieved by specific RPCs:</p>

      <ul>
        <li>
          <p><code class="language-text highlighter-rouge">sendrawtransaction</code></p>
        </li>
        <li>
          <p><code class="language-text highlighter-rouge">testmempoolaccept</code></p>
        </li>
      </ul>
    </li>
    <li>
      <p>Wallets should not assume a transaction has propagated to the network
just because there are no reject messages.  Instead, listen for the
transaction to be announced by other peers on the network.  Wallets
should not assume a lack of reject messages means a transaction pays
an appropriate fee.  Instead, set fees using fee estimation and use
replace-by-fee to increase a transaction’s fee if it hasn’t confirmed
within the desired amount of time.</p>
    </li>
  </ul>

  <p>The removal of BIP61 reject message support also has the following minor RPC
and logging implications:</p>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">testmempoolaccept</code> and <code class="language-text highlighter-rouge">sendrawtransaction</code> no longer return the P2P reject
code when a transaction is not accepted to the mempool. They still return the
verbal reject reason.</p>
    </li>
    <li>
      <p>Log messages that previously reported the reject code when a transaction was
not accepted to the mempool now no longer report the reject code. The reason
for rejection is still reported.</p>
    </li>
  </ul>

  <h2 id="updated-rpcs">Updated RPCs</h2>

  <ul>
    <li>
      <p>The RPCs which accept descriptors now accept the new <code class="language-text highlighter-rouge">sortedmulti(...)</code> descriptor
type which supports multisig scripts where the public keys are sorted
lexicographically in the resulting script.  (#17056)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">walletprocesspsbt</code> and <code class="language-text highlighter-rouge">walletcreatefundedpsbt</code> RPCs now include
BIP32 derivation paths by default for public keys if we know them.
This can be disabled by setting the <code class="language-text highlighter-rouge">bip32derivs</code> parameter to
<code class="language-text highlighter-rouge">false</code>.  (#17264)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">bumpfee</code> RPC’s parameter <code class="language-text highlighter-rouge">totalFee</code>, which was deprecated in
0.19, has been removed.  (#18312)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">bumpfee</code> RPC will return a PSBT when used with wallets that have
private keys disabled.  (#16373)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getpeerinfo</code> RPC now includes a <code class="language-text highlighter-rouge">mapped_as</code> field to indicate the
mapped Autonomous System used for diversifying peer selection. See the
<code class="language-text highlighter-rouge">-asmap</code> configuration option described below in <em>New Settings</em>.  (#16702)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">createmultisig</code> and <code class="language-text highlighter-rouge">addmultisigaddress</code> RPCs now return an
output script descriptor for the newly created address.  (#18032)</p>
    </li>
  </ul>

  <h2 id="build-system">Build System</h2>

  <ul>
    <li>
      <p>OpenSSL is no longer used by Bitcoin Core.  (#17265)</p>
    </li>
    <li>
      <p>BIP70 support has been fully removed from Bitcoin Core. The
<code class="language-text highlighter-rouge">--enable-bip70</code> option remains, but it will throw an error during configure.
(#17165)</p>
    </li>
    <li>
      <p>glibc 2.17 or greater is now required to run the release binaries. This
retains compatibility with RHEL 7, CentOS 7, Debian 8 and Ubuntu 14.04 LTS. (#17538)</p>
    </li>
    <li>
      <p>The source code archives that are provided with gitian builds no longer contain
any autotools artifacts. Therefore, to build from such source, a user
should run the <code class="language-text highlighter-rouge">./autogen.sh</code> script from the root of the unpacked archive.
This implies that <code class="language-text highlighter-rouge">autotools</code> and other required packages are installed on the
user’s system. (#18331)</p>
    </li>
  </ul>

  <h2 id="new-settings">New settings</h2>

  <ul>
    <li>
      <p>New <code class="language-text highlighter-rouge">rpcwhitelist</code> and <code class="language-text highlighter-rouge">rpcwhitelistdefault</code> configuration parameters
allow giving certain RPC users permissions to only some RPC calls.
(#12763)</p>
    </li>
    <li>
      <p>A new <code class="language-text highlighter-rouge">-asmap</code> configuration option has been added to diversify the
node’s network connections by mapping IP addresses Autonomous System
Numbers (ASNs) and then limiting the number of connections made to any
single ASN.  See issue #16599,
PR #16702, and the
<code class="language-text highlighter-rouge">bitcoind help</code> for more information.  This option is experimental and
subject to removal or breaking changes in future releases, so the
legacy /16 prefix mapping of IP addresses remains the default.  (#16702)</p>
    </li>
  </ul>

  <h2 id="updated-settings">Updated settings</h2>

  <ul>
    <li>
      <p>All custom settings configured when Bitcoin Core starts are now
written to the <code class="language-text highlighter-rouge">debug.log</code> file to assist troubleshooting.  (#16115)</p>
    </li>
    <li>
      <p>Importing blocks upon startup via the <code class="language-text highlighter-rouge">bootstrap.dat</code> file no longer
occurs by default. The file must now be specified with
<code class="language-text highlighter-rouge">-loadblock=&lt;file&gt;</code>.  (#17044)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">-debug=db</code> logging category has been renamed to
<code class="language-text highlighter-rouge">-debug=walletdb</code> to distinguish it from <code class="language-text highlighter-rouge">coindb</code>.  The <code class="language-text highlighter-rouge">-debug=db</code>
option has been deprecated and will be removed in the next major
release.  (#17410)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">-walletnotify</code> configuration parameter will now replace any <code class="language-text highlighter-rouge">%w</code>
in its argument with the name of the wallet generating the
notification.  This is not supported on Windows. (#13339)</p>
    </li>
  </ul>

  <h2 id="removed-settings">Removed settings</h2>

  <ul>
    <li>The <code class="language-text highlighter-rouge">-whitelistforcerelay</code> configuration parameter has been removed after
it was discovered that it was rendered ineffective in version 0.13 and
hasn’t actually been supported for almost four years.  (#17985)</li>
  </ul>

  <h2 id="gui-changes">GUI changes</h2>

  <ul>
    <li>
      <p>The “Start Bitcoin Core on system login” option has been removed on macOS.
(#17567)</p>
    </li>
    <li>
      <p>In the Peers window, the details for a peer now displays a <code class="language-text highlighter-rouge">Mapped AS</code>
field to indicate the mapped Autonomous System used for diversifying
peer selection. See the <code class="language-text highlighter-rouge">-asmap</code> configuration option in <em>New
Settings</em>, above.  (#18402)</p>
    </li>
    <li>
      <p>A “known bug” <a href="https://bitcoincore.org/en/releases/0.18.0/#wallet-gui">announced</a>
in the release notes of version 0.18 has been fixed.  The issue
affected anyone who simultaneously used multiple Bitcoin Core wallets
and the GUI coin control feature. (#18894)</p>
    </li>
    <li>
      <p>For watch-only wallets, creating a new transaction in the Send screen
or fee bumping an existing transaction in the Transactions screen will
automatically copy a Partially-Signed Bitcoin Transaction (PSBT) to
the system clipboard.  This can then be pasted into an external
program such as <a href="https://github.com/bitcoin-core/HWI">HWI</a> for
signing.  Future versions of Bitcoin Core should support a GUI option
for finalizing and broadcasting PSBTs, but for now the debug console
may be used with the <code class="language-text highlighter-rouge">finalizepsbt</code> and <code class="language-text highlighter-rouge">sendrawtransaction</code> RPCs.
(#16944, #17492)</p>
    </li>
  </ul>

  <h2 id="wallet">Wallet</h2>

  <ul>
    <li>
      <p>The wallet now by default uses bech32 addresses when using RPC, and
creates native segwit change outputs.  (#16884)</p>
    </li>
    <li>
      <p>The way that output trust was computed has been fixed, which affects
confirmed/unconfirmed balance status and coin selection.  (#16766)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">gettransaction</code>, <code class="language-text highlighter-rouge">listtransactions</code> and <code class="language-text highlighter-rouge">listsinceblock</code> RPC
responses now also include the height of the block that contains the
wallet transaction, if any.  (#17437)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getaddressinfo</code> RPC has had its <code class="language-text highlighter-rouge">label</code> field deprecated
(re-enable for this release using the configuration parameter
<code class="language-text highlighter-rouge">-deprecatedrpc=label</code>).  The <code class="language-text highlighter-rouge">labels</code> field is altered from returning
JSON objects to returning a JSON array of label names (re-enable
previous behavior for this release using the configuration parameter
<code class="language-text highlighter-rouge">-deprecatedrpc=labelspurpose</code>).  Backwards compatibility using the
deprecated configuration parameters is expected to be dropped in the
0.21 release.  (#17585, #17578)</p>
    </li>
  </ul>

  <h2 id="documentation-changes">Documentation changes</h2>

  <ul>
    <li>Bitcoin Core’s automatically-generated source code documentation is
now available at https://doxygen.bitcoincore.org.  (#17596)</li>
  </ul>

  <h1 id="low-level-changes">Low-level changes</h1>

  <h2 id="utilities">Utilities</h2>

  <ul>
    <li>
      <p>The <code class="language-text highlighter-rouge">bitcoin-cli</code> utility used with the <code class="language-text highlighter-rouge">-getinfo</code> parameter now
returns a <code class="language-text highlighter-rouge">headers</code> field with the number of downloaded block headers
on the best headers chain (similar to the <code class="language-text highlighter-rouge">blocks</code> field that is also
returned) and a <code class="language-text highlighter-rouge">verificationprogress</code> field that estimates how much
of the best block chain has been synced by the local node.  The
information returned no longer includes the <code class="language-text highlighter-rouge">protocolversion</code>,
<code class="language-text highlighter-rouge">walletversion</code>, and <code class="language-text highlighter-rouge">keypoololdest</code> fields.  (#17302, #17650)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">bitcoin-cli</code> utility now accepts a <code class="language-text highlighter-rouge">-stdinwalletpassphrase</code>
parameter that can be used when calling the <code class="language-text highlighter-rouge">walletpassphrase</code> and
<code class="language-text highlighter-rouge">walletpassphrasechange</code> RPCs to read the passphrase from standard
input without echoing it to the terminal, improving security against
anyone who can look at your screen.  The existing <code class="language-text highlighter-rouge">-stdinrpcpass</code>
parameter is also updated to not echo the passphrase. (#13716)</p>
    </li>
  </ul>

  <h2 id="command-line">Command line</h2>

  <ul>
    <li>Command line options prefixed with main/test/regtest network names like
<code class="language-text highlighter-rouge">-main.port=8333</code> <code class="language-text highlighter-rouge">-test.server=1</code> previously were allowed but ignored. Now
they trigger “Invalid parameter” errors on startup. (#17482)</li>
  </ul>

  <h2 id="new-rpcs">New RPCs</h2>

  <ul>
    <li>
      <p>The <code class="language-text highlighter-rouge">dumptxoutset</code> RPC outputs a serialized snapshot of the current
UTXO set.  A script is provided in the <code class="language-text highlighter-rouge">contrib/devtools</code> directory
for generating a snapshot of the UTXO set at a particular block
height.  (#16899)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">generatetodescriptor</code> RPC allows testers using regtest mode to
generate blocks that pay an arbitrary output script descriptor.
(#16943)</p>
    </li>
  </ul>

  <h2 id="updated-rpcs-1">Updated RPCs</h2>

  <ul>
    <li>
      <p>The <code class="language-text highlighter-rouge">verifychain</code> RPC default values are now static instead of
depending on the command line options or configuration file
(<code class="language-text highlighter-rouge">-checklevel</code>, and <code class="language-text highlighter-rouge">-checkblocks</code>). Users can pass in the RPC
arguments explicitly when they don’t want to rely on the default
values. (#18541)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getblockchaininfo</code> RPC’s <code class="language-text highlighter-rouge">verificationprogress</code> field will no
longer report values higher than 1.  Previously it would occasionally
report the chain was more than 100% verified.  (#17328)</p>
    </li>
  </ul>

  <h2 id="tests">Tests</h2>

  <ul>
    <li>
      <p>It is now an error to use an unqualified <code class="language-text highlighter-rouge">walletdir=path</code> setting in
the config file if running on testnet or regtest networks. The setting
now needs to be qualified as <code class="language-text highlighter-rouge">chain.walletdir=path</code> or placed in the
appropriate <code class="language-text highlighter-rouge">[chain]</code> section. (#17447)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">-fallbackfee</code> was 0 (disabled) by default for the main chain, but
0.0002 by default for the test chains. Now it is 0 by default for all
chains. Testnet and regtest users will have to add
<code class="language-text highlighter-rouge">fallbackfee=0.0002</code> to their configuration if they weren’t setting it
and they want it to keep working like before. (#16524)</p>
    </li>
  </ul>

  <h2 id="build-system-1">Build system</h2>

  <ul>
    <li>Support is provided for building with the Android Native Development
Kit (NDK).  (#16110)</li>
  </ul>

  <h1 id="change-log">0.20.0 change log</h1>

  <h3 id="mining">Mining</h3>
  <ul>
    <li>#18742 miner: Avoid stack-use-after-return in validationinterface (MarcoFalke)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#15283 log: Fix UB with bench on genesis block (instagibbs)</li>
    <li>#16507 feefilter: Compute the absolute fee rather than stored rate (instagibbs)</li>
    <li>#16688 log: Add validation interface logging (jkczyz)</li>
    <li>#16805 log: Add timing information to FlushStateToDisk() (jamesob)</li>
    <li>#16902 O(1) <code class="language-text highlighter-rouge">OP_IF/NOTIF/ELSE/ENDIF</code> script implementation (sipa)</li>
    <li>#16945 introduce CChainState::GetCoinsCacheSizeState (jamesob)</li>
    <li>#16974 Walk pindexBestHeader back to ChainActive().Tip() if it is invalid (TheBlueMatt)</li>
    <li>#17004 Remove REJECT code from CValidationState (jnewbery)</li>
    <li>#17080 Explain why <code class="language-text highlighter-rouge">fCheckDuplicateInputs</code> can not be skipped and remove it (MarcoFalke)</li>
    <li>#17328 GuessVerificationProgress: cap the ratio to 1 (darosior)</li>
    <li>#17399 Templatize ValidationState instead of subclassing (jkczyz)</li>
    <li>#17407 node: Add reference to mempool in NodeContext (MarcoFalke)</li>
    <li>#17708 prevector: Avoid misaligned member accesses (ajtowns)</li>
    <li>#17850,#17896,#17957,#18021,#18021,#18112 Serialization improvements (sipa)</li>
    <li>#17925 Improve UpdateTransactionsFromBlock with Epochs (JeremyRubin)</li>
    <li>#18002 Abstract out script execution out of <code class="language-text highlighter-rouge">VerifyWitnessProgram()</code> (sipa)</li>
    <li>#18388 Make VerifyWitnessProgram use a Span stack (sipa)</li>
    <li>#18433 serialization: prevent int overflow for big Coin::nHeight (pierreN)</li>
    <li>#18500 chainparams: Bump assumed valid hash (MarcoFalke)</li>
    <li>#18551 Do not clear validationinterface entries being executed (sipa)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#15437 Remove BIP61 reject messages (MarcoFalke)</li>
    <li>#16702 Supply and use asmap to improve IP bucketing in addrman (naumenkogs)</li>
    <li>#16851 Continue relaying transactions after they expire from mapRelay (ajtowns)</li>
    <li>#17164 Avoid allocating memory for addrKnown where we don’t need it (naumenkogs)</li>
    <li>#17243 tools: add PoissonNextSend method that returns mockable time (amitiuttarwar)</li>
    <li>#17251 SocketHandler logs peer id for close and disconnect (Sjors)</li>
    <li>#17573 Seed RNG with precision timestamps on receipt of net messages (TheBlueMatt)</li>
    <li>#17624 Fix an uninitialized read in ProcessMessage(…, “tx”, …) when receiving a transaction we already have (practicalswift)</li>
    <li>#17754 Don’t allow resolving of std::string with embedded NUL characters. Add tests (practicalswift)</li>
    <li>#17758 Fix CNetAddr::IsRFC2544 comment + tests (tynes)</li>
    <li>#17812 config, net, test: Asmap feature refinements and functional tests (jonatack)</li>
    <li>#17951 Use rolling bloom filter of recent block txs for AlreadyHave() check (sdaftuar)</li>
    <li>#17985 Remove forcerelay of rejected txs (MarcoFalke)</li>
    <li>#18023 Fix some asmap issues (sipa)</li>
    <li>#18054 Reference instead of copy in BlockConnected range loop (jonatack)</li>
    <li>#18376 Fix use-after-free in tests (vasild)</li>
    <li>#18454 Make addr relay mockable, add test (MarcoFalke)</li>
    <li>#18458 Add missing <code class="language-text highlighter-rouge">cs_vNodes</code> lock (MarcoFalke)</li>
    <li>#18506 Hardcoded seeds update for 0.20 (laanwj)</li>
    <li>#18808 Drop unknown types in getdata (jnewbery)</li>
    <li>#18962 Only send a getheaders for one block in an INV (jnewbery)</li>
  </ul>

  <h3 id="wallet-1">Wallet</h3>
  <ul>
    <li>#13339 Replace %w by wallet name in -walletnotify script (promag)</li>
    <li>#15931 Remove GetDepthInMainChain dependency on locked chain interface (ariard)</li>
    <li>#16373 bumpfee: Return PSBT when wallet has privkeys disabled (instagibbs)</li>
    <li>#16524 Disable -fallbackfee by default (jtimon)</li>
    <li>#16766 Make IsTrusted scan parents recursively (JeremyRubin)</li>
    <li>#16884 Change default address type to bech32 (instagibbs)</li>
    <li>#16911 Only check the hash of transactions loaded from disk (achow101)</li>
    <li>#16923 Handle duplicate fileid exception (promag)</li>
    <li>#17056 descriptors: Introduce sortedmulti descriptor (achow101)</li>
    <li>#17070 Avoid showing GUI popups on RPC errors (MarcoFalke)</li>
    <li>#17138 Remove wallet access to some node arguments (jnewbery)</li>
    <li>#17237 LearnRelatedScripts only if KeepDestination (promag)</li>
    <li>#17260 Split some CWallet functions into new LegacyScriptPubKeyMan (achow101)</li>
    <li>#17261 Make ScriptPubKeyMan an actual interface and the wallet to have multiple (achow101)</li>
    <li>#17290 Enable BnB coin selection for preset inputs and subtract fee from outputs (achow101)</li>
    <li>#17373 Various fixes and cleanup to keypool handling in LegacyScriptPubKeyMan and CWallet (achow101)</li>
    <li>#17410 Rename <code class="language-text highlighter-rouge">db</code> log category to <code class="language-text highlighter-rouge">walletdb</code> (like <code class="language-text highlighter-rouge">coindb</code>) (laanwj)</li>
    <li>#17444 Avoid showing GUI popups on RPC errors (take 2) (MarcoFalke)</li>
    <li>#17447 Make -walletdir network only (promag)</li>
    <li>#17537 Cleanup and move opportunistic and superfluous TopUp()s (achow101)</li>
    <li>#17553 Remove out of date comments for CalculateMaximumSignedTxSize (instagibbs)</li>
    <li>#17568 Fix when sufficient preset inputs and subtractFeeFromOutputs (achow101)</li>
    <li>#17677 Activate watchonly wallet behavior for LegacySPKM only (instagibbs)</li>
    <li>#17719 Document better -keypool as a look-ahead safety mechanism (ariard)</li>
    <li>#17843 Reset reused transactions cache (fjahr)</li>
    <li>#17889 Improve CWallet:MarkDestinationsDirty (promag)</li>
    <li>#18034 Get the OutputType for a descriptor (achow101)</li>
    <li>#18067 Improve LegacyScriptPubKeyMan::CanProvide script recognition (ryanofsky)</li>
    <li>#18115 Pass in transactions and messages for signing instead of exporting the private keys (achow101)</li>
    <li>#18192,#18546 Bugfix: Wallet: Safely deal with change in the address book (luke-jr)</li>
    <li>#18204 descriptors: Improve descriptor cache and cache xpubs (achow101)</li>
    <li>#18274 rpc/wallet: Initialize nFeeRequired to avoid using garbage value on failure (kallewoof)</li>
    <li>#18312 Remove deprecated fee bumping by totalFee (jonatack)</li>
    <li>#18338 Fix wallet unload race condition (promag)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#12763 Add RPC Whitelist Feature from #12248 (JeremyRubin)</li>
    <li>#13716 cli: <code class="language-text highlighter-rouge">-stdinwalletpassphrase</code> and non-echo stdin passwords (kallewoof)</li>
    <li>#16689 Add missing fields to wallet rpc help output (ariard)</li>
    <li>#16821 Fix bug where duplicate PSBT keys are accepted (erasmospunk)</li>
    <li>#16899 UTXO snapshot creation (dumptxoutset)</li>
    <li>#17156 psbt: Check that various indexes and amounts are within bounds (achow101)</li>
    <li>#17264 Set default bip32derivs to true for psbt methods (Sjors)</li>
    <li>#17283 improve getaddressinfo test coverage, help, code docs (jonatack)</li>
    <li>#17302 cli: Add “headers” and “verificationprogress” to -getinfo (laanwj)</li>
    <li>#17318 replace asserts in RPC code with <code class="language-text highlighter-rouge">CHECK_NONFATAL</code> and add linter (adamjonas)</li>
    <li>#17437 Expose block height of wallet transactions (promag)</li>
    <li>#17519 Remove unused <code class="language-text highlighter-rouge">COINBASE_FLAGS</code> (narula)</li>
    <li>#17578 Simplify getaddressinfo labels, deprecate previous behavior (jonatack)</li>
    <li>#17585 deprecate getaddressinfo label (jonatack)</li>
    <li>#17746 Remove vector copy from listtransactions (promag)</li>
    <li>#17809 Auto-format RPCResult (MarcoFalke)</li>
    <li>#18032 Output a descriptor in createmultisig and addmultisigaddress (achow101)</li>
    <li>#18122 Update validateaddress RPCExamples to bech32 (theStack)</li>
    <li>#18208 Change RPCExamples to bech32 (yusufsahinhamza)</li>
    <li>#18268 Remove redundant types from descriptions (docallag)</li>
    <li>#18346 Document an RPCResult for all calls; Enforce at compile time (MarcoFalke)</li>
    <li>#18396 Add missing HelpExampleRpc for getblockfilter (theStack)</li>
    <li>#18398 Fix broken RPCExamples for waitforblock(height) (theStack)</li>
    <li>#18444 Remove final comma for last entry of fixed-size arrays/objects in RPCResult (luke-jr)</li>
    <li>#18459 Remove unused getbalances() code (jonatack)</li>
    <li>#18484 Correctly compute redeemScript from witnessScript for signrawtransaction (achow101)</li>
    <li>#18487 Fix rpcRunLater race in walletpassphrase (promag)</li>
    <li>#18499 Make rpc documentation not depend on call-time rpc args (MarcoFalke)</li>
    <li>#18532 Avoid initialization-order-fiasco on static CRPCCommand tables (MarcoFalke)</li>
    <li>#18541 Make verifychain default values static, not depend on global args (MarcoFalke)</li>
    <li>#18809 Do not advertise dumptxoutset as a way to flush the chainstate (MarcoFalke)</li>
    <li>#18814 Relock wallet only if most recent callback (promag)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#15023 Restore RPC Console to non-wallet tray icon menu (luke-jr)</li>
    <li>#15084 Don’t disable the sync overlay when wallet is disabled (benthecarman)</li>
    <li>#15098 Show addresses for “SendToSelf” transactions (hebasto)</li>
    <li>#15756 Add shortcuts for tab tools (promag)</li>
    <li>#16944 create PSBT with watch-only wallet (Sjors)</li>
    <li>#16964 Change sendcoins dialogue Yes to Send (instagibbs)</li>
    <li>#17068 Always generate <code class="language-text highlighter-rouge">bitcoinstrings.cpp</code> on <code class="language-text highlighter-rouge">make translate</code> (D4nte)</li>
    <li>#17096 Rename debug window (Zero-1729)</li>
    <li>#17105 Make RPCConsole::TabTypes an enum class (promag)</li>
    <li>#17125 Add toolTip and placeholderText to sign message fields (dannmat)</li>
    <li>#17165 Remove BIP70 support (fanquake)</li>
    <li>#17180 Improved tooltip for send amount field (JeremyCrookshank)</li>
    <li>#17186 Add placeholder text to the sign message field (Danny-Scott)</li>
    <li>#17195 Send amount placeholder value (JeremyCrookshank)</li>
    <li>#17226 Fix payAmount tooltip in SendCoinsEntry (promag)</li>
    <li>#17360 Cleaning up hide button tool tip (Danny-Scott)</li>
    <li>#17446 Changed tooltip for ‘Label’ &amp; ‘Message’ text fields to be more clear (dannmat)</li>
    <li>#17453 Fix intro dialog labels when the prune button is toggled (hebasto)</li>
    <li>#17474 Bugfix: GUI: Recognise <code class="language-text highlighter-rouge">NETWORK_LIMITED</code> in formatServicesStr (luke-jr)</li>
    <li>#17492 Bump fee returns PSBT on clipboard for watchonly-only wallets (instagibbs)</li>
    <li>#17567 Remove macOS start on login code (fanquake)</li>
    <li>#17587 Show watch-only balance in send screen (Sjors)</li>
    <li>#17694 Disable 3rd-party tx-urls when wallet disabled (brakmic)</li>
    <li>#17696 Force set nPruneSize in QSettings after the intro dialog (hebasto)</li>
    <li>#17702 Move static placeholder texts to forms (laanwj)</li>
    <li>#17826 Log Qt related info (hebasto)</li>
    <li>#17886 Restore English translation option (achow101)</li>
    <li>#17906 Set CConnman byte counters earlier to avoid uninitialized reads (ryanofsky)</li>
    <li>#17935 Hide HD &amp; encryption icons when no wallet loaded (brakmic)</li>
    <li>#17998 Shortcut to close ModalOverlay (emilengler)</li>
    <li>#18007 Bugfix: GUI: Hide the HD/encrypt icons earlier so they get re-shown if another wallet is open (luke-jr)</li>
    <li>#18060 Drop PeerTableModel dependency to ClientModel (promag)</li>
    <li>#18062 Fix unintialized WalletView::progressDialog (promag)</li>
    <li>#18091 Pass clientmodel changes from walletframe to walletviews (jonasschnelli)</li>
    <li>#18101 Fix deprecated QCharRef usage (hebasto)</li>
    <li>#18121 Throttle GUI update pace when -reindex (hebasto)</li>
    <li>#18123 Fix race in WalletModel::pollBalanceChanged (ryanofsky)</li>
    <li>#18160 Avoid Wallet::GetBalance in WalletModel::pollBalanceChanged (promag)</li>
    <li>#18360 Bump transifex slug and update English translations for 0.20 (laanwj)</li>
    <li>#18402 Display mapped AS in peers info window (jonatack)</li>
    <li>#18492 Translations update pre-branch (laanwj)</li>
    <li>#18549 Fix Window -&gt; Minimize menu item (hebasto)</li>
    <li>#18578 Fix leak in CoinControlDialog::updateView (promag)</li>
    <li>#18894 Fix manual coin control with multiple wallets loaded (promag)</li>
  </ul>

  <h3 id="build-system-2">Build system</h3>
  <ul>
    <li>#16667 Remove mingw linker workaround from win gitian descriptor (fanquake)</li>
    <li>#16669 Use new fork of osslsigncode for windows gitian signing (fanquake)</li>
    <li>#16949 Only pass –disable-dependency-tracking to packages that understand it (fanquake)</li>
    <li>#17008 Bump libevent to 2.1.11 in depends (stefanwouldgo)</li>
    <li>#17029 gitian: Various improvements for windows descriptor (dongcarl)</li>
    <li>#17033 Disable _FORTIFY_SOURCE when enable-debug (achow101)</li>
    <li>#17057 Switch to upstream libdmg-hfsplus (fanquake)</li>
    <li>#17066 Remove workaround for ancient libtool (hebasto)</li>
    <li>#17074 Added double quotes (mztriz)</li>
    <li>#17087 Add variable printing target to Makefiles (dongcarl)</li>
    <li>#17118 depends macOS: point –sysroot to SDK (Sjors)</li>
    <li>#17231 Fix boost mac cross build with clang 9+ (theuni)</li>
    <li>#17265 Remove OpenSSL (fanquake)</li>
    <li>#17284 Update retry to current version (RandyMcMillan)</li>
    <li>#17308 nsis: Write to correct filename in first place (dongcarl)</li>
    <li>#17324,#18099 Update univalue subtree (MarcoFalke)</li>
    <li>#17398 Update leveldb to 1.22+ (laanwj)</li>
    <li>#17409 Avoid hardcoded libfaketime dir in gitian (MarcoFalke)</li>
    <li>#17466 Fix C{,XX} pickup (dongcarl)</li>
    <li>#17483 Set gitian arch back to amd64 (MarcoFalke)</li>
    <li>#17486 Make Travis catch unused variables (Sjors)</li>
    <li>#17538 Bump minimum libc to 2.17 for release binaries (fanquake)</li>
    <li>#17542 Create test utility library from src/test/util/ (brakmic)</li>
    <li>#17545 Remove libanl.so.1 from ALLOWED_LIBRARIES (fanquake)</li>
    <li>#17547 Fix configure report about qr (hebasto)</li>
    <li>#17569 Allow export of environ symbols and work around rv64 toolchain issue (laanwj)</li>
    <li>#17647 lcov: filter depends from coverage reports (nijynot)</li>
    <li>#17658 Add ability to skip building qrencode (fanquake)</li>
    <li>#17678 Support for S390X and POWER targets (MarcoFalke)</li>
    <li>#17682 util: Update tinyformat to upstream (laanwj)</li>
    <li>#17698 Don’t configure <code class="language-text highlighter-rouge">xcb_proto</code> (fanquake)</li>
    <li>#17730 Remove Qt networking features (fanquake)</li>
    <li>#17738 Remove linking librt for backwards compatibility (fanquake)</li>
    <li>#17740 Remove configure checks for win libraries we don’t link against (fanquake)</li>
    <li>#17741 Included <code class="language-text highlighter-rouge">test_bitcoin-qt</code> in msvc build (sipsorcery)</li>
    <li>#17756 Remove <code class="language-text highlighter-rouge">WINDOWS_BITS</code> from build system (fanquake)</li>
    <li>#17769 Set <code class="language-text highlighter-rouge">AC_PREREQ</code> to 2.69 (fanquake)</li>
    <li>#17880 Add -Wdate-time to Werror flags (fanquake)</li>
    <li>#17910 Remove double <code class="language-text highlighter-rouge">LIBBITCOIN_SERVER</code> linking (fanquake)</li>
    <li>#17928 Consistent use of package variable (Bushstar)</li>
    <li>#17933 guix: Pin Guix using <code class="language-text highlighter-rouge">guix time-machine</code> (dongcarl)</li>
    <li>#17948 pass -fno-ident in Windows gitian descriptor (fanquake)</li>
    <li>#18003 Remove –large-address-aware linker flag (fanquake)</li>
    <li>#18004 Don’t embed a build-id when building libdmg-hfsplus (fanquake)</li>
    <li>#18051 Fix behavior when <code class="language-text highlighter-rouge">ALLOW_HOST_PACKAGES</code> unset (hebasto)</li>
    <li>#18059 Add missing attributes to Win installer (fanquake)</li>
    <li>#18104 Skip i686 build by default in guix and gitian (MarcoFalke)</li>
    <li>#18107 Add <code class="language-text highlighter-rouge">cov_fuzz</code> target (MarcoFalke)</li>
    <li>#18135 Add –enable-determinism configure flag (fanquake)</li>
    <li>#18145 Add Wreturn-type to Werror flags, check on more Travis machines (Sjors)</li>
    <li>#18264 Remove Boost Chrono (fanquake)</li>
    <li>#18290 Set minimum Automake version to 1.13 (hebasto)</li>
    <li>#18320 guix: Remove now-unnecessary gcc make flag (dongcarl)</li>
    <li>#18331 Use git archive as source tarball (hebasto)</li>
    <li>#18397 Fix libevent linking for <code class="language-text highlighter-rouge">bench_bitcoin</code> binary (hebasto)</li>
    <li>#18426 scripts: <code class="language-text highlighter-rouge">Previous_release</code>: improve behaviour on failed download (theStack)</li>
    <li>#18429 Remove double <code class="language-text highlighter-rouge">LIBBITCOIN_SERVER</code> from bench-Makefile (brakmic)</li>
    <li>#18528 Create <code class="language-text highlighter-rouge">test_fuzz</code> library from src/test/fuzz/fuzz.cpp (brakmic)</li>
    <li>#18558 Fix boost detection for arch armv7l (hebasto)</li>
    <li>#18598 gitian: Add missing automake package to gitian-win-signer.yml (achow101)</li>
    <li>#18676 Check libevent minimum version in configure script (hebasto)</li>
    <li>#18945 Ensure source tarball has leading directory name (laanwj)</li>
  </ul>

  <h3 id="platform-support">Platform support</h3>
  <ul>
    <li>#16110 Add Android NDK support (icota)</li>
    <li>#16392 macOS toolchain update (fanquake)</li>
    <li>#16569 Increase init file stop timeout (setpill)</li>
    <li>#17151 Remove OpenSSL PRNG seeding (Windows, Qt only) (fanquake)</li>
    <li>#17365 Update README.md with working Android targets and API levels (icota)</li>
    <li>#17521 Only use D-Bus with Qt on linux (fanquake)</li>
    <li>#17550 Set minimum supported macOS to 10.12 (fanquake)</li>
    <li>#17592 Appveyor install libevent[thread] vcpkg (sipsorcery)</li>
    <li>#17660 Remove deprecated key from macOS Info.plist (fanquake)</li>
    <li>#17663 Pass <code class="language-text highlighter-rouge">-dead_strip_dylibs</code> to ld on macOS (fanquake)</li>
    <li>#17676 Don’t use OpenGL in Qt on macOS (fanquake)</li>
    <li>#17686 Add <code class="language-text highlighter-rouge">-bind_at_load</code> to macOS hardened LDFLAGS (fanquake)</li>
    <li>#17787 scripts: Add macho pie check to security-check.py (fanquake)</li>
    <li>#17800 random: don’t special case clock usage on macOS (fanquake)</li>
    <li>#17863 scripts: Add macho dylib checks to symbol-check.py (fanquake)</li>
    <li>#17899 msvc: Ignore msvc linker warning and update to msvc build instructions (sipsorcery)</li>
    <li>#17916 windows: Enable heap terminate-on-corruption (fanquake)</li>
    <li>#18082 logging: Enable <code class="language-text highlighter-rouge">thread_local</code> usage on macos (fanquake)</li>
    <li>#18108 Fix <code class="language-text highlighter-rouge">.gitignore</code> policy in <code class="language-text highlighter-rouge">build_msvc</code> directory (hebasto)</li>
    <li>#18295 scripts: Add macho lazy bindings check to security-check.py (fanquake)</li>
    <li>#18358 util: Fix compilation with mingw-w64 7.0.0 (fanquake)</li>
    <li>#18359 Fix sysctl() detection on macOS (fanquake)</li>
    <li>#18364 random: remove getentropy() fallback for macOS &lt; 10.12 (fanquake)</li>
    <li>#18395 scripts: Add pe dylib checking to symbol-check.py (fanquake)</li>
    <li>#18415 scripts: Add macho tests to test-security-check.py (fanquake)</li>
    <li>#18425 releases: Update with new Windows code signing certificate (achow101)</li>
    <li>#18702 Fix ASLR for bitcoin-cli on Windows (fanquake)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#12134 Build previous releases and run functional tests (Sjors)</li>
    <li>#13693 Add coverage to estimaterawfee and estimatesmartfee (Empact)</li>
    <li>#13728 lint: Run the ci lint stage on mac (Empact)</li>
    <li>#15443 Add getdescriptorinfo functional test (promag)</li>
    <li>#15888 Add <code class="language-text highlighter-rouge">wallet_implicitsegwit</code> to test the ability to transform keys between address types (luke-jr)</li>
    <li>#16540 Add <code class="language-text highlighter-rouge">ASSERT_DEBUG_LOG</code> to unit test framework (MarcoFalke)</li>
    <li>#16597 travis: Run full test suite on native macos (Sjors)</li>
    <li>#16681 Use self.chain instead of ‘regtest’ in all current tests (jtimon)</li>
    <li>#16786 add unit test for wallet watch-only methods involving PubKeys (theStack)</li>
    <li>#16943 Add generatetodescriptor RPC (MarcoFalke)</li>
    <li>#16973 Fix <code class="language-text highlighter-rouge">combine_logs.py</code> for AppVeyor build (mzumsande)</li>
    <li>#16975 Show debug log on unit test failure (MarcoFalke)</li>
    <li>#16978 Seed test RNG context for each test case, print seed (MarcoFalke)</li>
    <li>#17009, #17018, #17050, #17051, #17071, #17076, #17083, #17093, #17109, #17113, #17136, #17229, #17291, #17357, #17771, #17777, #17917, #17926, #17972, #17989, #17996, #18009, #18029, #18047, #18126, #18176, #18206, #18353, #18363, #18407, #18417, #18423, #18445, #18455, #18565 Add fuzzing harnesses (practicalswift)</li>
    <li>#17011 ci: Use busybox utils for one build (MarcoFalke)</li>
    <li>#17030 Fix Python Docstring to include all Args (jbampton)</li>
    <li>#17041 ci: Run tests on arm (MarcoFalke)</li>
    <li>#17069 Pass fuzzing inputs as constant references (practicalswift)</li>
    <li>#17091 Add test for loadblock option and linearize scripts (fjahr)</li>
    <li>#17108 fix “tx-size-small” errors after default address change (theStack)</li>
    <li>#17121 Speed up <code class="language-text highlighter-rouge">wallet_backup</code> by whitelisting peers (immediate tx relay) (theStack)</li>
    <li>#17124 Speed up <code class="language-text highlighter-rouge">wallet_address_types</code> by whitelisting peers (immediate tx relay) (theStack)</li>
    <li>#17140 Fix bug in <code class="language-text highlighter-rouge">blockfilter_index_tests</code> (jimpo)</li>
    <li>#17199 use default address type (bech32) for <code class="language-text highlighter-rouge">wallet_bumpfee</code> tests (theStack)</li>
    <li>#17205 ci: Enable address sanitizer (asan) stack-use-after-return checking (practicalswift)</li>
    <li>#17206 Add testcase to simulate bitcoin schema in leveldb (adamjonas)</li>
    <li>#17209 Remove no longer needed UBSan suppressions (issues fixed). Add documentation (practicalswift)</li>
    <li>#17220 Add unit testing for the CompressScript function (adamjonas)</li>
    <li>#17225 Test serialisation as part of deserialisation fuzzing. Test round-trip equality where possible (practicalswift)</li>
    <li>#17228 Add RegTestingSetup to <code class="language-text highlighter-rouge">setup_common</code> (MarcoFalke)</li>
    <li>#17233 travis: Run unit and functional tests on native arm (MarcoFalke)</li>
    <li>#17235 Skip unnecessary fuzzer initialisation. Hold ECCVerifyHandle only when needed (practicalswift)</li>
    <li>#17240 ci: Disable functional tests on mac host (MarcoFalke)</li>
    <li>#17254 Fix <code class="language-text highlighter-rouge">script_p2sh_tests</code> <code class="language-text highlighter-rouge">OP_PUSHBACK2/4</code> missing (adamjonas)</li>
    <li>#17267 bench: Fix negative values and zero for -evals flag (nijynot)</li>
    <li>#17275 pubkey: Assert CPubKey’s ECCVerifyHandle precondition (practicalswift)</li>
    <li>#17288 Added TestWrapper class for interactive Python environments (jachiang)</li>
    <li>#17292 Add new mempool benchmarks for a complex pool (JeremyRubin)</li>
    <li>#17299 add reason checks for non-standard txs in <code class="language-text highlighter-rouge">test_IsStandard</code> (theStack)</li>
    <li>#17322 Fix input size assertion in <code class="language-text highlighter-rouge">wallet_bumpfee.py</code> (instagibbs)</li>
    <li>#17327 Add <code class="language-text highlighter-rouge">rpc_fundrawtransaction</code> logging (jonatack)</li>
    <li>#17330 Add <code class="language-text highlighter-rouge">shrinkdebugfile=0</code> to regtest bitcoin.conf (sdaftuar)</li>
    <li>#17340 Speed up fundrawtransaction test (jnewbery)</li>
    <li>#17345 Do not instantiate CAddrDB for static call CAddrDB::Read() (hebasto)</li>
    <li>#17362 Speed up <code class="language-text highlighter-rouge">wallet_avoidreuse</code>, add logging (jonatack)</li>
    <li>#17363 add “diamond” unit test to MempoolAncestryTests (theStack)</li>
    <li>#17366 Reset global args between test suites (MarcoFalke)</li>
    <li>#17367 ci: Run non-cross-compile builds natively (MarcoFalke)</li>
    <li>#17378 TestShell: Fix typos &amp; implement cleanups (jachiang)</li>
    <li>#17384 Create new test library (MarcoFalke)</li>
    <li>#17387 <code class="language-text highlighter-rouge">wallet_importmulti</code>: use addresses of the same type as being imported (achow101)</li>
    <li>#17388 Add missing newline in <code class="language-text highlighter-rouge">util_ChainMerge</code> test (ryanofsky)</li>
    <li>#17390 Add <code class="language-text highlighter-rouge">util_ArgParsing</code> test (ryanofsky)</li>
    <li>#17420 travis: Rework <code class="language-text highlighter-rouge">cache_err_msg</code> (MarcoFalke)</li>
    <li>#17423 ci: Make ci system read-only on the git work tree (MarcoFalke)</li>
    <li>#17435 check custom ancestor limit in <code class="language-text highlighter-rouge">mempool_packages.py</code> (theStack)</li>
    <li>#17455 Update valgrind suppressions (practicalswift)</li>
    <li>#17461 Check custom descendant limit in <code class="language-text highlighter-rouge">mempool_packages.py</code> (theStack)</li>
    <li>#17469 Remove fragile <code class="language-text highlighter-rouge">assert_memory_usage_stable</code> (MarcoFalke)</li>
    <li>#17470 ci: Use clang-8 for fuzzing to run on aarch64 ci systems (MarcoFalke)</li>
    <li>#17480 Add unit test for non-standard txs with too large scriptSig (theStack)</li>
    <li>#17497 Skip tests when utils haven’t been compiled (fanquake)</li>
    <li>#17502 Add unit test for non-standard bare multisig txs (theStack)</li>
    <li>#17511 Add bounds checks before base58 decoding (sipa)</li>
    <li>#17517 ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le (MarcoFalke)</li>
    <li>#17522 Wait until mempool is loaded in <code class="language-text highlighter-rouge">wallet_abandonconflict</code> (MarcoFalke)</li>
    <li>#17532 Add functional test for non-standard txs with too large scriptSig (theStack)</li>
    <li>#17541 Add functional test for non-standard bare multisig txs (theStack)</li>
    <li>#17555 Add unit test for non-standard txs with wrong nVersion (dspicher)</li>
    <li>#17571 Add <code class="language-text highlighter-rouge">libtest_util</code> library to msvc build configuration (sipsorcery)</li>
    <li>#17591 ci: Add big endian platform - s390x (elichai)</li>
    <li>#17593 Move more utility functions into test utility library (mzumsande)</li>
    <li>#17633 Add option –valgrind to run the functional tests under Valgrind (practicalswift)</li>
    <li>#17635 ci: Add centos 7 build (hebasto)</li>
    <li>#17641 Add unit test for leveldb creation with unicode path (sipsorcery)</li>
    <li>#17674 Add initialization order fiasco detection in Travis (practicalswift)</li>
    <li>#17675 Enable tests which are incorrectly skipped when running <code class="language-text highlighter-rouge">test_runner.py --usecli</code> (practicalswift)</li>
    <li>#17685 Fix bug in the descriptor parsing fuzzing harness (<code class="language-text highlighter-rouge">descriptor_parse</code>) (practicalswift)</li>
    <li>#17705 re-enable CLI test support by using EncodeDecimal in json.dumps() (fanquake)</li>
    <li>#17720 add unit test for non-standard “scriptsig-not-pushonly” txs (theStack)</li>
    <li>#17767 ci: Fix qemu issues (MarcoFalke)</li>
    <li>#17793 ci: Update github actions ci vcpkg cache on msbuild update (hebasto)</li>
    <li>#17806 Change filemode of <code class="language-text highlighter-rouge">rpc_whitelist.py</code> (emilengler)</li>
    <li>#17849 ci: Fix brew python link (hebasto)</li>
    <li>#17851 Add <code class="language-text highlighter-rouge">std::to_string</code> to list of locale dependent functions (practicalswift)</li>
    <li>#17893 Fix double-negative arg test (hebasto)</li>
    <li>#17900 ci: Combine 32-bit build with centos 7 build (theStack)</li>
    <li>#17921 Test <code class="language-text highlighter-rouge">OP_CSV</code> empty stack fail in <code class="language-text highlighter-rouge">feature_csv_activation.py</code> (theStack)</li>
    <li>#17931 Fix <code class="language-text highlighter-rouge">p2p_invalid_messages</code> failing in Python 3.8 because of warning (elichai)</li>
    <li>#17947 add unit test for non-standard txs with too large tx size (theStack)</li>
    <li>#17959 Check specific reject reasons in <code class="language-text highlighter-rouge">feature_csv_activation.py</code> (theStack)</li>
    <li>#17984 Add p2p test for forcerelay permission (MarcoFalke)</li>
    <li>#18001 Updated appveyor job to checkout a specific vcpkg commit ID (sipsorcery)</li>
    <li>#18008 fix fuzzing using libFuzzer on macOS (fanquake)</li>
    <li>#18013 bench: Fix benchmarks filters (elichai)</li>
    <li>#18018 reset fIsBareMultisigStd after bare-multisig tests (fanquake)</li>
    <li>#18022 Fix appveyor <code class="language-text highlighter-rouge">test_bitcoin</code> build of <code class="language-text highlighter-rouge">*.raw</code> (MarcoFalke)</li>
    <li>#18037 util: Allow scheduler to be mocked (amitiuttarwar)</li>
    <li>#18056 ci: Check for submodules (emilengler)</li>
    <li>#18069 Replace ‘regtest’ leftovers by self.chain (theStack)</li>
    <li>#18081 Set a name for CI Docker containers (fanquake)</li>
    <li>#18109 Avoid hitting some known minor tinyformat issues when fuzzing strprintf(…) (practicalswift)</li>
    <li>#18155 Add harness which fuzzes EvalScript and VerifyScript using a fuzzed signature checker (practicalswift)</li>
    <li>#18159 Add –valgrind option to <code class="language-text highlighter-rouge">test/fuzz/test_runner.py</code> for running fuzzing test cases under valgrind (practicalswift)</li>
    <li>#18166 ci: Run fuzz testing test cases (bitcoin-core/qa-assets) under valgrind to catch memory errors (practicalswift)</li>
    <li>#18172 Transaction expiry from mempool (0xB10C)</li>
    <li>#18181 Remove incorrect assumptions in <code class="language-text highlighter-rouge">validation_flush_tests</code> (MarcoFalke)</li>
    <li>#18183 Set <code class="language-text highlighter-rouge">catch_system_errors=no</code> on boost unit tests (MarcoFalke)</li>
    <li>#18195 Add <code class="language-text highlighter-rouge">cost_of_change</code> parameter assertions to <code class="language-text highlighter-rouge">bnb_search_test</code> (yancyribbens)</li>
    <li>#18209 Reduce unneeded whitelist permissions in tests (MarcoFalke)</li>
    <li>#18211 Disable mockforward scheduler unit test for now (MarcoFalke)</li>
    <li>#18213 Fix race in <code class="language-text highlighter-rouge">p2p_segwit</code> (MarcoFalke)</li>
    <li>#18224 Make AnalyzePSBT next role calculation simple, correct (instagibbs)</li>
    <li>#18228 Add missing syncwithvalidationinterfacequeue (MarcoFalke)</li>
    <li>#18247 Wait for both veracks in <code class="language-text highlighter-rouge">add_p2p_connection</code> (MarcoFalke)</li>
    <li>#18249 Bump timeouts to accomodate really slow disks (MarcoFalke)</li>
    <li>#18255 Add <code class="language-text highlighter-rouge">bad-txns-*-toolarge</code> test cases to <code class="language-text highlighter-rouge">invalid_txs</code> (MarcoFalke)</li>
    <li>#18263 rpc: change setmocktime check to use IsMockableChain (gzhao408)</li>
    <li>#18285 Check that <code class="language-text highlighter-rouge">wait_until</code> returns if time point is in the past (MarcoFalke)</li>
    <li>#18286 Add locale fuzzer to <code class="language-text highlighter-rouge">FUZZERS_MISSING_CORPORA</code> (practicalswift)</li>
    <li>#18292 fuzz: Add <code class="language-text highlighter-rouge">assert(script == decompressed_script)</code> (MarcoFalke)</li>
    <li>#18299 Update <code class="language-text highlighter-rouge">FUZZERS_MISSING_CORPORA</code> to enable regression fuzzing for all harnesses in master (practicalswift)</li>
    <li>#18300 fuzz: Add option to merge input dir to test runner (MarcoFalke)</li>
    <li>#18305 Explain why test logging should be used (MarcoFalke)</li>
    <li>#18306 Add logging to <code class="language-text highlighter-rouge">wallet_listsinceblock.py</code> (jonatack)</li>
    <li>#18311 Bumpfee test fix (instagibbs)</li>
    <li>#18314 Add deserialization fuzzing of SnapshotMetadata (<code class="language-text highlighter-rouge">utxo_snapshot</code>) (practicalswift)</li>
    <li>#18319 fuzz: Add missing <code class="language-text highlighter-rouge">ECC_Start</code> to <code class="language-text highlighter-rouge">key_io</code> test (MarcoFalke)</li>
    <li>#18334 Add basic test for BIP 37 (MarcoFalke)</li>
    <li>#18350 Fix mining to an invalid target + ensure that a new block has the correct hash internally (TheQuantumPhysicist)</li>
    <li>#18378 Bugfix &amp; simplify bn2vch using <code class="language-text highlighter-rouge">int.to_bytes</code> (sipa)</li>
    <li>#18393 Don’t assume presence of <code class="language-text highlighter-rouge">__builtin_mul_overflow(…)</code> in <code class="language-text highlighter-rouge">MultiplicationOverflow(…)</code> fuzzing harness (practicalswift)</li>
    <li>#18406 add executable flag for <code class="language-text highlighter-rouge">rpc_estimatefee.py</code> (theStack)</li>
    <li>#18420 listsinceblock block height checks (jonatack)</li>
    <li>#18430 ci: Only clone bitcoin-core/qa-assets when fuzzing (MarcoFalke)</li>
    <li>#18438 ci: Use homebrew addon on native macos (hebasto)</li>
    <li>#18447 Add coverage for script parse error in ParseScript (pierreN)</li>
    <li>#18472 Remove unsafe <code class="language-text highlighter-rouge">BOOST_TEST_MESSAGE</code> (MarcoFalke)</li>
    <li>#18474 check that peer is connected when calling sync_* (MarcoFalke)</li>
    <li>#18477 ci: Use focal for fuzzers (MarcoFalke)</li>
    <li>#18481 add BIP37 ‘filterclear’ test to p2p_filter.py (theStack)</li>
    <li>#18496 Remove redundant <code class="language-text highlighter-rouge">sync_with_ping</code> after <code class="language-text highlighter-rouge">add_p2p_connection</code> (jonatack)</li>
    <li>#18509 fuzz: Avoid running over all inputs after merging them (MarcoFalke)</li>
    <li>#18510 fuzz: Add CScriptNum::getint coverage (MarcoFalke)</li>
    <li>#18514 remove rapidcheck integration and tests (fanquake)</li>
    <li>#18515 Add BIP37 remote crash bug [CVE-2013-5700] test to <code class="language-text highlighter-rouge">p2p_filter.py</code> (theStack)</li>
    <li>#18516 relax bumpfee <code class="language-text highlighter-rouge">dust_to_fee</code> txsize an extra vbyte (jonatack)</li>
    <li>#18518 fuzz: Extend descriptor fuzz test (MarcoFalke)</li>
    <li>#18519 fuzz: Extend script fuzz test (MarcoFalke)</li>
    <li>#18521 fuzz: Add <code class="language-text highlighter-rouge">process_messages</code> harness (MarcoFalke)</li>
    <li>#18529 Add fuzzer version of randomized prevector test (sipa)</li>
    <li>#18534 skip backwards compat tests if not compiled with wallet (fanquake)</li>
    <li>#18540 <code class="language-text highlighter-rouge">wallet_bumpfee</code> assertion fixup (jonatack)</li>
    <li>#18543 Use one node to avoid a race due to missing sync in <code class="language-text highlighter-rouge">rpc_signrawtransaction</code> (MarcoFalke)</li>
    <li>#18561 Properly raise FailedToStartError when rpc shutdown before warmup finished (MarcoFalke)</li>
    <li>#18562 ci: Run unit tests sequential once (MarcoFalke)</li>
    <li>#18563 Fix <code class="language-text highlighter-rouge">unregister_all_during_call</code> cleanup (ryanofsky)</li>
    <li>#18566 Set <code class="language-text highlighter-rouge">-use_value_profile=1</code> when merging fuzz inputs (MarcoFalke)</li>
    <li>#18757 Remove enumeration of expected deserialization exceptions in ProcessMessage(…) fuzzer (practicalswift)</li>
    <li>#18878 Add test for conflicted wallet tx notifications (ryanofsky)</li>
    <li>#18975 Remove const to work around compiler error on xenial (laanwj)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#16947 Doxygen-friendly script/descriptor.h comments (ch4ot1c)</li>
    <li>#16983 Add detailed info about Bitcoin Core files (hebasto)</li>
    <li>#16986 Doxygen-friendly CuckooCache comments (ch4ot1c)</li>
    <li>#17022 move-only: Steps for “before major release branch-off” (MarcoFalke)</li>
    <li>#17026 Update bips.md for default bech32 addresses in 0.20.0 (MarcoFalke)</li>
    <li>#17081 Fix Makefile target in benchmarking.md (theStack)</li>
    <li>#17102 Add missing indexes/blockfilter/basic to doc/files.md (MarcoFalke)</li>
    <li>#17119 Fix broken bitcoin-cli examples (andrewtoth)</li>
    <li>#17134 Add switch on enum example to developer notes (hebasto)</li>
    <li>#17142 Update macdeploy README to include all files produced by <code class="language-text highlighter-rouge">make deploy</code> (za-kk)</li>
    <li>#17146 github: Add warning for bug reports (laanwj)</li>
    <li>#17157 Added instructions for how to add an upsteam to forked repo (dannmat)</li>
    <li>#17159 Add a note about backporting (carnhofdaki)</li>
    <li>#17169 Correct function name in ReportHardwareRand() (fanquake)</li>
    <li>#17177 Describe log files + consistent paths in test READMEs (fjahr)</li>
    <li>#17239 Changed miniupnp links to https (sandakersmann)</li>
    <li>#17281 Add developer note on <code class="language-text highlighter-rouge">c_str()</code> (laanwj)</li>
    <li>#17285 Bip70 removal follow-up (fjahr)</li>
    <li>#17286 Fix help-debug -checkpoints (ariard)</li>
    <li>#17309 update MSVC instructions to remove Qt OpenSSL linking (fanquake)</li>
    <li>#17339 Add template for good first issues (michaelfolkson)</li>
    <li>#17351 Fix some misspellings (RandyMcMillan)</li>
    <li>#17353 Add ShellCheck to lint tests dependencies (hebasto)</li>
    <li>#17370 Update doc/bips.md with recent changes in master (MarcoFalke)</li>
    <li>#17393 Added regtest config for linearize script (gr0kchain)</li>
    <li>#17411 Add some better examples for scripted diff (laanwj)</li>
    <li>#17503 Remove bitness from bitcoin-qt help message and manpage (laanwj)</li>
    <li>#17539 Update and improve Developer Notes (hebasto)</li>
    <li>#17561 Changed MiniUPnPc link to https in dependencies.md (sandakersmann)</li>
    <li>#17596 Change doxygen URL to doxygen.bitcoincore.org (laanwj)</li>
    <li>#17598 Update release process with latest changes (MarcoFalke)</li>
    <li>#17617 Unify unix epoch time descriptions (jonatack)</li>
    <li>#17637 script: Add keyserver to verify-commits readme (emilengler)</li>
    <li>#17648 Rename wallet-tool references to bitcoin-wallet (hel-o)</li>
    <li>#17688 Add “ci” prefix to CONTRIBUTING.md (hebasto)</li>
    <li>#17751 Use recommended shebang approach in documentation code block (hackerrdave)</li>
    <li>#17752 Fix directory path for secp256k1 subtree in developer-notes (hackerrdave)</li>
    <li>#17772 Mention PR Club in CONTRIBUTING.md (emilengler)</li>
    <li>#17804 Misc RPC help fixes (MarcoFalke)</li>
    <li>#17819 Developer notes guideline on RPCExamples addresses (jonatack)</li>
    <li>#17825 Update dependencies.md (hebasto)</li>
    <li>#17873 Add to Doxygen documentation guidelines (jonatack)</li>
    <li>#17907 Fix improper Doxygen inline comments (Empact)</li>
    <li>#17942 Improve fuzzing docs for macOS users (fjahr)</li>
    <li>#17945 Fix doxygen errors (Empact)</li>
    <li>#18025 Add missing supported rpcs to doc/descriptors.md (andrewtoth)</li>
    <li>#18070 Add note about <code class="language-text highlighter-rouge">brew doctor</code> (givanse)</li>
    <li>#18125 Remove PPA note from release-process.md (fanquake)</li>
    <li>#18170 Minor grammatical changes and flow improvements (travinkeith)</li>
    <li>#18212 Add missing step in win deployment instructions (dangershony)</li>
    <li>#18219 Add warning against wallet.dat re-use (corollari)</li>
    <li>#18253 Correct spelling errors in comments (Empact)</li>
    <li>#18278 interfaces: Describe and follow some code conventions (ryanofsky)</li>
    <li>#18283 Explain rebase policy in CONTRIBUTING.md (MarcoFalke)</li>
    <li>#18340 Mention MAKE=gmake workaround when building on a BSD (fanquake)</li>
    <li>#18341 Replace remaining literal BTC with <code class="language-text highlighter-rouge">CURRENCY_UNIT</code> (domob1812)</li>
    <li>#18342 Add fuzzing quickstart guides for libFuzzer and afl-fuzz (practicalswift)</li>
    <li>#18344 Fix nit in getblockchaininfo (stevenroose)</li>
    <li>#18379 Comment fix merkle.cpp (4d55397500)</li>
    <li>#18382 note the costs of fetching all pull requests (vasild)</li>
    <li>#18391 Update init and reduce-traffic docs for -blocksonly (glowang)</li>
    <li>#18464 Block-relay-only vs blocksonly (MarcoFalke)</li>
    <li>#18486 Explain new test logging (MarcoFalke)</li>
    <li>#18505 Update webchat URLs in README.md (SuriyaaKudoIsc)</li>
    <li>#18513 Fix git add argument (HashUnlimited)</li>
    <li>#18577 Correct scripted-diff example link (yahiheb)</li>
    <li>#18589 Fix naming of macOS SDK and clarify version (achow101)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#15600 lockedpool: When possible, use madvise to avoid including sensitive information in core dumps (luke-jr)</li>
    <li>#15934 Merge settings one place instead of five places (ryanofsky)</li>
    <li>#16115 On bitcoind startup, write config args to debug.log (LarryRuane)</li>
    <li>#16117 util: Replace boost sleep with std sleep (MarcoFalke)</li>
    <li>#16161 util: Fix compilation errors in support/lockedpool.cpp (jkczyz)</li>
    <li>#16802 scripts: In linearize, search for next position of magic bytes rather than fail (takinbo)</li>
    <li>#16889 Add some general std::vector utility functions (sipa)</li>
    <li>#17049 contrib: Bump gitian descriptors for 0.20 (MarcoFalke)</li>
    <li>#17052 scripts: Update <code class="language-text highlighter-rouge">copyright_header</code> script to include additional files (GChuf)</li>
    <li>#17059 util: Simplify path argument for cblocktreedb ctor (hebasto)</li>
    <li>#17191 random: Remove call to <code class="language-text highlighter-rouge">RAND_screen()</code> (Windows only) (fanquake)</li>
    <li>#17192 util: Add <code class="language-text highlighter-rouge">check_nonfatal</code> and use it in src/rpc (MarcoFalke)</li>
    <li>#17218 Replace the LogPrint function with a macro (jkczyz)</li>
    <li>#17266 util: Rename decodedumptime to parseiso8601datetime (elichai)</li>
    <li>#17270 Feed environment data into RNG initializers (sipa)</li>
    <li>#17282 contrib: Remove accounts from bash completion (fanquake)</li>
    <li>#17293 Add assertion to randrange that input is not 0 (JeremyRubin)</li>
    <li>#17325 log: Fix log message for -par=1 (hebasto)</li>
    <li>#17329 linter: Strip trailing / in path for git-subtree-check (jnewbery)</li>
    <li>#17336 scripts: Search for first block file for linearize-data with some block files pruned (Rjected)</li>
    <li>#17361 scripts: Lint gitian descriptors with shellcheck (hebasto)</li>
    <li>#17482 util: Disallow network-qualified command line options (ryanofsky)</li>
    <li>#17507 random: mark RandAddPeriodic and SeedPeriodic as noexcept (fanquake)</li>
    <li>#17527 Fix CPUID subleaf iteration (sipa)</li>
    <li>#17604 util: Make schedulebatchpriority advisory only (fanquake)</li>
    <li>#17650 util: Remove unwanted fields from bitcoin-cli -getinfo (malevolent)</li>
    <li>#17671 script: Fixed wget call in gitian-build.py (willyko)</li>
    <li>#17699 Make env data logging optional (sipa)</li>
    <li>#17721 util: Don’t allow base58 decoding of non-base58 strings. add base58 tests (practicalswift)</li>
    <li>#17750 util: Change getwarnings parameter to bool (jnewbery)</li>
    <li>#17753 util: Don’t allow base32/64-decoding or parsemoney(…) on strings with embedded nul characters. add tests (practicalswift)</li>
    <li>#17823 scripts: Read suspicious hosts from a file instead of hardcoding (sanjaykdragon)</li>
    <li>#18162 util: Avoid potential uninitialized read in <code class="language-text highlighter-rouge">formatiso8601datetime(int64_t)</code> by checking <code class="language-text highlighter-rouge">gmtime_s</code>/<code class="language-text highlighter-rouge">gmtime_r</code> return value (practicalswift)</li>
    <li>#18167 Fix a violation of C++ standard rules where unions are used for type-punning (TheQuantumPhysicist)</li>
    <li>#18225 util: Fail to parse empty string in parsemoney (MarcoFalke)</li>
    <li>#18270 util: Fail to parse whitespace-only strings in parsemoney(…) (instead of parsing as zero) (practicalswift)</li>
    <li>#18316 util: Helpexamplerpc formatting (jonatack)</li>
    <li>#18357 Fix missing header in sync.h (promag)</li>
    <li>#18412 script: Fix <code class="language-text highlighter-rouge">script_err_sig_pushonly</code> error string (theStack)</li>
    <li>#18416 util: Limit decimal range of numbers parsescript accepts (pierreN)</li>
    <li>#18503 init: Replace <code class="language-text highlighter-rouge">URL_WEBSITE</code> with <code class="language-text highlighter-rouge">PACKAGE_URL</code> (MarcoFalke)</li>
    <li>#18526 Remove PID file at the very end (hebasto)</li>
    <li>#18553 Avoid non-trivial global constants in SHA-NI code (sipa)</li>
    <li>#18665 Do not expose and consider <code class="language-text highlighter-rouge">-logthreadnames</code> when it does not work (hebasto)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>0xb10c</li>
    <li>251</li>
    <li>4d55397500</li>
    <li>Aaron Clauson</li>
    <li>Adam Jonas</li>
    <li>Albert</li>
    <li>Amiti Uttarwar</li>
    <li>Andrew Chow</li>
    <li>Andrew Toth</li>
    <li>Anthony Towns</li>
    <li>Antoine Riard</li>
    <li>Ava Barron</li>
    <li>Ben Carman</li>
    <li>Ben Woosley</li>
    <li>Block Mechanic</li>
    <li>Brian Solon</li>
    <li>Bushstar</li>
    <li>Carl Dong</li>
    <li>Carnhof Daki</li>
    <li>Cory Fields</li>
    <li>Daki Carnhof</li>
    <li>Dan Gershony</li>
    <li>Daniel Kraft</li>
    <li>dannmat</li>
    <li>Danny-Scott</li>
    <li>darosior</li>
    <li>David O’Callaghan</li>
    <li>Dominik Spicher</li>
    <li>Elichai Turkel</li>
    <li>Emil Engler</li>
    <li>emu</li>
    <li>Fabian Jahr</li>
    <li>fanquake</li>
    <li>Filip Gospodinov</li>
    <li>Franck Royer</li>
    <li>Gastón I. Silva</li>
    <li>gchuf</li>
    <li>Gleb Naumenko</li>
    <li>Gloria Zhao</li>
    <li>glowang</li>
    <li>Gr0kchain</li>
    <li>Gregory Sanders</li>
    <li>hackerrdave</li>
    <li>Harris</li>
    <li>hel0</li>
    <li>Hennadii Stepanov</li>
    <li>ianliu</li>
    <li>Igor Cota</li>
    <li>James Chiang</li>
    <li>James O’Beirne</li>
    <li>Jan Beich</li>
    <li>Jan Sarenik</li>
    <li>Jeffrey Czyz</li>
    <li>Jeremy Rubin</li>
    <li>JeremyCrookshank</li>
    <li>Jim Posen</li>
    <li>John Bampton</li>
    <li>John L. Jegutanis</li>
    <li>John Newbery</li>
    <li>Jon Atack</li>
    <li>Jon Layton</li>
    <li>Jonas Schnelli</li>
    <li>João Barbosa</li>
    <li>Jorge Timón</li>
    <li>Karl-Johan Alm</li>
    <li>kodslav</li>
    <li>Larry Ruane</li>
    <li>Luke Dashjr</li>
    <li>malevolent</li>
    <li>MapleLaker</li>
    <li>marcaiaf</li>
    <li>MarcoFalke</li>
    <li>Marius Kjærstad</li>
    <li>Mark Erhardt</li>
    <li>Mark Tyneway</li>
    <li>Martin Erlandsson</li>
    <li>Martin Zumsande</li>
    <li>Matt Corallo</li>
    <li>Matt Ward</li>
    <li>Michael Folkson</li>
    <li>Michael Polzer</li>
    <li>Micky Yun Chan</li>
    <li>Neha Narula</li>
    <li>nijynot</li>
    <li>naumenkogs</li>
    <li>NullFunctor</li>
    <li>Peter Bushnell</li>
    <li>pierrenn</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>randymcmillan</li>
    <li>Rjected</li>
    <li>Russell Yanofsky</li>
    <li>Samer Afach</li>
    <li>Samuel Dobson</li>
    <li>Sanjay K</li>
    <li>Sebastian Falbesoner</li>
    <li>setpill</li>
    <li>Sjors Provoost</li>
    <li>Stefan Richter</li>
    <li>stefanwouldgo</li>
    <li>Steven Roose</li>
    <li>Suhas Daftuar</li>
    <li>Suriyaa Sundararuban</li>
    <li>TheCharlatan</li>
    <li>Tim Akinbo</li>
    <li>Travin Keith</li>
    <li>tryphe</li>
    <li>Vasil Dimov</li>
    <li>Willy Ko</li>
    <li>Wilson Ccasihue S</li>
    <li>Wladimir J. van der Laan</li>
    <li>Yahia Chiheb</li>
    <li>Yancy Ribbens</li>
    <li>Yusuf Sahin HAMZA</li>
    <li>Zakk</li>
    <li>Zero</li>
  </ul>

  <p>As well as to everyone that helped with translations on
<a href="https://www.transifex.com/bitcoin/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.19.1 released</title>
            <link>https://bitcoin.org/en/release/v0.19.1</link>
            <guid>https://bitcoin.org/en/release/v0.19.1</guid>
          
            <pubDate>Mon, 09 Mar 2020 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <h1 id="release-notes">0.19.1 Release Notes</h1>

  <p>Bitcoin Core version 0.19.1 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.19.1/">https://bitcoincore.org/bin/bitcoin-core-0.19.1/</a></p>

  <p>This minor release includes various bug fixes and performance
improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>Upgrading directly from a version of Bitcoin Core that has reached its EOL is
possible, but it might take some time if the datadir needs to be migrated. Old
wallet versions of Bitcoin Core are generally supported.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is supported and extensively tested on operating systems using
the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended
to use Bitcoin Core on unsupported systems.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
as frequently tested on them.</p>

  <p>From Bitcoin Core 0.17.0 onwards, macOS versions earlier than 10.10 are no
longer supported, as Bitcoin Core is now built using Qt 5.9.x which requires
macOS 10.10+. Additionally, Bitcoin Core does not yet change appearance when
macOS “dark mode” is activated.</p>

  <p>In addition to previously supported CPU platforms, this release’s pre-compiled
distribution provides binaries for the RISC-V platform.</p>

  <h1 id="change-log">0.19.1 change log</h1>

  <h3 id="wallet">Wallet</h3>

  <ul>
    <li>#17643 Fix origfee return for bumpfee with feerate arg (instagibbs)</li>
    <li>#16963 Fix <code class="language-text highlighter-rouge">unique_ptr</code> usage in boost::signals2 (promag)</li>
    <li>#17258 Fix issue with conflicted mempool tx in listsinceblock (adamjonas, mchrostowski)</li>
    <li>#17924 Bug: IsUsedDestination shouldn’t use key id as script id for ScriptHash (instagibbs)</li>
    <li>#17621 IsUsedDestination should count any known single-key address (instagibbs)</li>
    <li>#17843 Reset reused transactions cache (fjahr)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>

  <ul>
    <li>#17687 cli: Fix fatal leveldb error when specifying -blockfilterindex=basic twice (brakmic)</li>
    <li>#17728 require second argument only for scantxoutset start action (achow101)</li>
    <li>#17445 zmq: Fix due to invalid argument and multiple notifiers (promag)</li>
    <li>#17524 psbt: handle unspendable psbts (achow101)</li>
    <li>#17156 psbt: check that various indexes and amounts are within bounds (achow101)</li>
  </ul>

  <h3 id="gui">GUI</h3>

  <ul>
    <li>#17427 Fix missing qRegisterMetaType for <code class="language-text highlighter-rouge">size_t</code> (hebasto)</li>
    <li>#17695 disable File-&gt;CreateWallet during startup (fanquake)</li>
    <li>#17634 Fix comparison function signature (hebasto)</li>
    <li>#18062 Fix unintialized WalletView::progressDialog (promag)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>

  <ul>
    <li>#17416 Appveyor improvement - text file for vcpkg package list (sipsorcery)</li>
    <li>#17488 fix “bitcoind already running” warnings on macOS (fanquake)</li>
    <li>#17980 add missing #include to fix compiler errors (kallewoof)</li>
  </ul>

  <h3 id="platform-support">Platform support</h3>

  <ul>
    <li>#17736 Update msvc build for Visual Studio 2019 v16.4 (sipsorcery)</li>
    <li>#17364 Updates to appveyor config for VS2019 and Qt5.9.8 + msvc project fixes (sipsorcery)</li>
    <li>#17887 bug-fix macos: give free bytes to <code class="language-text highlighter-rouge">F_PREALLOCATE</code> (kallewoof)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>

  <ul>
    <li>#17897 init: Stop indexes on shutdown after ChainStateFlushed callback (jimpo)</li>
    <li>#17450 util: Add missing headers to util/fees.cpp (hebasto)</li>
    <li>#17654 Unbreak build with Boost 1.72.0 (jbeich)</li>
    <li>#17857 scripts: Fix symbol-check &amp; security-check argument passing (fanquake)</li>
    <li>#17762 Log to net category for exceptions in ProcessMessages (laanwj)</li>
    <li>#18100 Update univalue subtree (MarcoFalke)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Aaron Clauson</li>
    <li>Adam Jonas</li>
    <li>Andrew Chow</li>
    <li>Fabian Jahr</li>
    <li>fanquake</li>
    <li>Gregory Sanders</li>
    <li>Harris</li>
    <li>Hennadii Stepanov</li>
    <li>Jan Beich</li>
    <li>Jim Posen</li>
    <li>João Barbosa</li>
    <li>Karl-Johan Alm</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Michael Chrostowski</li>
    <li>Russell Yanofsky</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as to everyone that helped with translations on
<a href="https://www.transifex.com/bitcoin/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.19.0.1 released</title>
            <link>https://bitcoin.org/en/release/v0.19.0.1</link>
            <guid>https://bitcoin.org/en/release/v0.19.0.1</guid>
          
            <pubDate>Sun, 24 Nov 2019 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.19.0.1 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.19.0.1/">https://bitcoincore.org/bin/bitcoin-core-0.19.0.1/</a></p>

  <p>This release includes new features, various bug fixes and performance
improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>Upgrading directly from a version of Bitcoin Core that has reached its EOL is
possible, but might take some time if the datadir needs to be migrated.  Old
wallet versions of Bitcoin Core are generally supported.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is supported and extensively tested on operating systems using
the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended
to use Bitcoin Core on unsupported systems.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
as frequently tested on them.</p>

  <p>From 0.17.0 onwards, macOS &lt;10.10 is no longer supported. 0.17.0 is
built using Qt 5.9.x, which doesn’t support versions of macOS older than
10.10. Additionally, Bitcoin Core does not yet change appearance when
macOS “dark mode” is activated.</p>

  <p>Users running macOS Catalina may need to “right-click” and then choose “Open”
to open the Bitcoin Core .dmg. This is due to new signing requirements
imposed by Apple, which the Bitcoin Core project does not yet adhere too.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="new-user-documentation">New user documentation</h2>

  <ul>
    <li><a href="https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md">Reduce memory</a>
suggests configuration tweaks for running Bitcoin Core on systems with
limited memory. (#16339)</li>
  </ul>

  <h2 id="new-rpcs">New RPCs</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">getbalances</code> returns an object with all balances (<code class="language-text highlighter-rouge">mine</code>,
<code class="language-text highlighter-rouge">untrusted_pending</code> and <code class="language-text highlighter-rouge">immature</code>). Please refer to the RPC help of
<code class="language-text highlighter-rouge">getbalances</code> for details. The new RPC is intended to replace
<code class="language-text highlighter-rouge">getbalance</code>, <code class="language-text highlighter-rouge">getunconfirmedbalance</code>, and the balance fields in
<code class="language-text highlighter-rouge">getwalletinfo</code>.  These old calls and fields may be removed in a
future version. (#15930, #16239)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">setwalletflag</code> sets and unsets wallet flags that enable or disable
features specific to that existing wallet, such as the new
<code class="language-text highlighter-rouge">avoid_reuse</code> feature documented elsewhere in these release notes.
(#13756)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getblockfilter</code> gets the BIP158 filter for the specified block.  This
RPC is only enabled if block filters have been created using the
<code class="language-text highlighter-rouge">-blockfilterindex</code> configuration option. (#14121)</p>
    </li>
  </ul>

  <h2 id="new-settings">New settings</h2>

  <ul>
    <li><code class="language-text highlighter-rouge">-blockfilterindex</code> enables the creation of BIP158 block filters for
the entire blockchain.  Filters will be created in the background and
currently use about 4 GiB of space.  Note: this version of Bitcoin
Core does not serve block filters over the P2P network, although the
local user may obtain block filters using the <code class="language-text highlighter-rouge">getblockfilter</code> RPC.
(#14121)</li>
  </ul>

  <h2 id="updated-settings">Updated settings</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">whitebind</code> and <code class="language-text highlighter-rouge">whitelist</code> now accept a list of permissions to
provide peers connecting using the indicated interfaces or IP
addresses.  If no permissions are specified with an address or CIDR
network, the implicit default permissions are the same as previous
releases.  See the <code class="language-text highlighter-rouge">bitcoind -help</code> output for these two options for
details about the available permissions. (#16248)</p>
    </li>
    <li>
      <p>Users setting custom <code class="language-text highlighter-rouge">dbcache</code> values can increase their setting slightly
without using any more real memory.  Recent changes reduced the memory use
by about 9% and made chainstate accounting more accurate (it was underestimating
the use of memory before).  For example, if you set a value of “450” before, you
may now set a value of “500” to use about the same real amount of memory. (#16957)</p>
    </li>
  </ul>

  <h2 id="updated-rpcs">Updated RPCs</h2>

  <p>Note: some low-level RPC changes mainly useful for testing are described in the
Low-level Changes section below.</p>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">sendmany</code> no longer has a <code class="language-text highlighter-rouge">minconf</code> argument.  This argument was not
well-specified and would lead to RPC errors even when the wallet’s
coin selection succeeded.  Users who want to influence coin selection
can use the existing <code class="language-text highlighter-rouge">-spendzeroconfchange</code>, <code class="language-text highlighter-rouge">-limitancestorcount</code>,
<code class="language-text highlighter-rouge">-limitdescendantcount</code> and <code class="language-text highlighter-rouge">-walletrejectlongchains</code> configuration
arguments. (#15596)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getbalance</code> and <code class="language-text highlighter-rouge">sendtoaddress</code>, plus the new RPCs <code class="language-text highlighter-rouge">getbalances</code> and
<code class="language-text highlighter-rouge">createwallet</code>, now accept an “avoid_reuse” parameter that controls
whether already used addresses should be included in the operation.
Additionally, <code class="language-text highlighter-rouge">sendtoaddress</code> will avoid partial spends when
<code class="language-text highlighter-rouge">avoid_reuse</code> is enabled even if this feature is not already enabled
via the <code class="language-text highlighter-rouge">-avoidpartialspends</code> command line flag because not doing so
would risk using up the “wrong” UTXO for an address reuse case.
(#13756)</p>
    </li>
    <li>
      <p>RPCs which have an <code class="language-text highlighter-rouge">include_watchonly</code> argument or <code class="language-text highlighter-rouge">includeWatching</code> option now default to <code class="language-text highlighter-rouge">true</code> for watch-only
wallets. Affected RPCs are: <code class="language-text highlighter-rouge">getbalance</code>, <code class="language-text highlighter-rouge">listreceivedbyaddress</code>, <code class="language-text highlighter-rouge">listreceivedbylabel</code>, <code class="language-text highlighter-rouge">listtransactions</code>,
<code class="language-text highlighter-rouge">listsinceblock</code>, <code class="language-text highlighter-rouge">gettransaction</code>, <code class="language-text highlighter-rouge">walletcreatefundedpsbt</code>, and <code class="language-text highlighter-rouge">fundrawtransaction</code>. (#16383)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">listunspent</code> now returns a “reused” bool for each output if the
wallet flag “avoid_reuse” is enabled. (#13756)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getblockstats</code> now uses BlockUndo data instead of the transaction
index, making it much faster, no longer dependent on the <code class="language-text highlighter-rouge">-txindex</code>
configuration option, and functional for all non-pruned blocks.
(#14802)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">utxoupdatepsbt</code> now accepts a <code class="language-text highlighter-rouge">descriptors</code> parameter that will fill
out input and output scripts and keys when known. P2SH-witness inputs
will be filled in from the UTXO set when a descriptor is provided that
shows they’re spending segwit outputs.  See the RPC help text for full
details. (#15427)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">sendrawtransaction</code> and <code class="language-text highlighter-rouge">testmempoolaccept</code> no longer accept a
<code class="language-text highlighter-rouge">allowhighfees</code> parameter to fail mempool acceptance if the
transaction fee exceeds the value of the configuration option
<code class="language-text highlighter-rouge">-maxtxfee</code>.  Now there is a hardcoded default maximum feerate that
can be changed when calling either RPC using a <code class="language-text highlighter-rouge">maxfeerate</code> parameter.
(#15620)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>, <code class="language-text highlighter-rouge">getmempoolentry</code>, and
<code class="language-text highlighter-rouge">getrawmempool</code> no longer return a <code class="language-text highlighter-rouge">size</code> field unless the
configuration option <code class="language-text highlighter-rouge">-deprecatedrpc=size</code> is used.  Instead a new
<code class="language-text highlighter-rouge">vsize</code> field is returned with the transaction’s virtual size
(consistent with other RPCs such as <code class="language-text highlighter-rouge">getrawtransaction</code>). (#15637)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getwalletinfo</code> now includes a <code class="language-text highlighter-rouge">scanning</code> field that is either <code class="language-text highlighter-rouge">false</code>
(no scanning) or an object with information about the duration and
progress of the wallet’s scanning historical blocks for transactions
affecting its balances. (#15730)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">gettransaction</code> now accepts a third (boolean) argument <code class="language-text highlighter-rouge">verbose</code>. If
set to <code class="language-text highlighter-rouge">true</code>, a new <code class="language-text highlighter-rouge">decoded</code> field will be added to the response containing
the decoded transaction. This field is equivalent to RPC <code class="language-text highlighter-rouge">decoderawtransaction</code>,
or RPC <code class="language-text highlighter-rouge">getrawtransaction</code> when <code class="language-text highlighter-rouge">verbose</code> is passed. (#16185, #16866, #16873)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">createwallet</code> accepts a new <code class="language-text highlighter-rouge">passphrase</code> parameter.  If set, this
will create the new wallet encrypted with the given passphrase.  If
unset (the default) or set to an empty string, no encryption will be
used. (#16394)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getchaintxstats</code> RPC now returns the additional key of
<code class="language-text highlighter-rouge">window_final_block_height</code>. (#16695)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getmempoolentry</code> now provides a <code class="language-text highlighter-rouge">weight</code> field containing the
transaction weight as defined in BIP141. (#16647)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getnetworkinfo</code> and <code class="language-text highlighter-rouge">getpeerinfo</code> commands now contain a new field with decoded network service flags. (#16786)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getdescriptorinfo</code> now returns an additional <code class="language-text highlighter-rouge">checksum</code> field
containing the checksum for the unmodified descriptor provided by the
user (that is, before the descriptor is normalized for the
<code class="language-text highlighter-rouge">descriptor</code> field). (#15986)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">joinpsbts</code> now shuffles the order of the inputs and outputs of the resulting
joined PSBT. Previously, inputs and outputs were added in the order PSBTs were
provided. This made it easy to correlate inputs to outputs, representing a
privacy leak. (#16512)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">walletcreatefundedpsbt</code> now signals BIP125 Replace-by-Fee if the
<code class="language-text highlighter-rouge">-walletrbf</code> configuration option is set to true. (#15911)</p>
    </li>
  </ul>

  <h2 id="gui-changes">GUI changes</h2>

  <ul>
    <li>
      <p>The GUI wallet now provides bech32 addresses by default.  The user may change the address type
during invoice generation using a GUI toggle, or the default address
type may be changed with the <code class="language-text highlighter-rouge">-addresstype</code> configuration option.
(#15711, #16497)</p>
    </li>
    <li>
      <p>In 0.18.0, a <code class="language-text highlighter-rouge">./configure</code> flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now <strong>disabled</strong> by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass <code class="language-text highlighter-rouge">--enable-bip70</code> to <code class="language-text highlighter-rouge">./configure</code>. (#15584)</p>
    </li>
  </ul>

  <h2 id="deprecated-or-removed-configuration-options">Deprecated or removed configuration options</h2>

  <ul>
    <li><code class="language-text highlighter-rouge">-mempoolreplacement</code> is removed, although default node behavior
remains the same.  This option previously allowed the user to prevent
the node from accepting or relaying BIP125 transaction replacements.
This is different from the remaining configuration option
<code class="language-text highlighter-rouge">-walletrbf</code>. (#16171)</li>
  </ul>

  <h2 id="deprecated-or-removed-rpcs">Deprecated or removed RPCs</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">bumpfee</code> no longer accepts a <code class="language-text highlighter-rouge">totalFee</code> option unless the
configuration parameter <code class="language-text highlighter-rouge">deprecatedrpc=totalFee</code> is specified.  This
parameter will be fully removed in a subsequent release. (#15996)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">bumpfee</code> has a new <code class="language-text highlighter-rouge">fee_rate</code> option as a replacement for the deprecated <code class="language-text highlighter-rouge">totalFee</code>. (#16727)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">generate</code> is now removed after being deprecated in Bitcoin Core 0.18.
Use the <code class="language-text highlighter-rouge">generatetoaddress</code> RPC instead. (#15492)</p>
    </li>
  </ul>

  <h2 id="p2p-changes">P2P changes</h2>

  <ul>
    <li>
      <p>BIP 61 reject messages were deprecated in v0.18. They are now disabled
by default, but can be enabled by setting the <code class="language-text highlighter-rouge">-enablebip61</code> command
line option.  BIP 61 reject messages will be removed entirely in a
future version of Bitcoin Core. (#14054)</p>
    </li>
    <li>
      <p>To eliminate well-known denial-of-service vectors in Bitcoin Core,
especially for nodes with spinning disks, the default value for the
<code class="language-text highlighter-rouge">-peerbloomfilters</code> configuration option has been changed to false.
This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service
flag, accepting BIP37 bloom filters, or serving merkle blocks or
transactions matching a bloom filter.  Users who still want to provide
bloom filter support may either set the configuration option to true
to re-enable both BIP111 and BIP37 support or enable just BIP37
support for specific peers using the updated <code class="language-text highlighter-rouge">-whitelist</code> and
<code class="language-text highlighter-rouge">-whitebind</code> configuration options described elsewhere in these
release notes.  For the near future, lightweight clients using public
BIP111/BIP37 nodes should still be able to connect to older versions
of Bitcoin Core and nodes that have manually enabled BIP37 support,
but developers of such software should consider migrating to either
using specific BIP37 nodes or an alternative transaction filtering
system. (#16152)</p>
    </li>
    <li>
      <p>By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)</p>
    </li>
  </ul>

  <h2 id="miscellaneous-cli-changes">Miscellaneous CLI Changes</h2>

  <ul>
    <li>The <code class="language-text highlighter-rouge">testnet</code> field in <code class="language-text highlighter-rouge">bitcoin-cli -getinfo</code> has been renamed to
<code class="language-text highlighter-rouge">chain</code> and now returns the current network name as defined in BIP70
(main, test, regtest). (#15566)</li>
  </ul>

  <h1 id="low-level-changes">Low-level changes</h1>

  <h2 id="rpc">RPC</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">getblockchaininfo</code> no longer returns a <code class="language-text highlighter-rouge">bip9_softforks</code> object.
Instead, information has been moved into the <code class="language-text highlighter-rouge">softforks</code> object and
an additional <code class="language-text highlighter-rouge">type</code> field describes how Bitcoin Core determines
whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC
help for details. (#16060)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getblocktemplate</code> no longer returns a <code class="language-text highlighter-rouge">rules</code> array containing <code class="language-text highlighter-rouge">CSV</code>
and <code class="language-text highlighter-rouge">segwit</code> (the BIP9 deployments that are currently in active
state). (#16060)</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getrpcinfo</code> now returns a <code class="language-text highlighter-rouge">logpath</code> field with the path to
<code class="language-text highlighter-rouge">debug.log</code>. (#15483)</p>
    </li>
  </ul>

  <h2 id="tests">Tests</h2>

  <ul>
    <li>The regression test chain enabled by the <code class="language-text highlighter-rouge">-regtest</code> command line flag
now requires transactions to not violate standard policy by default.
This is the same default used for mainnet and makes it easier to test
mainnet behavior on regtest. Note that the testnet still allows
non-standard txs by default and that the policy can be locally
adjusted with the <code class="language-text highlighter-rouge">-acceptnonstdtxn</code> command line flag for both test
chains. (#15891)</li>
  </ul>

  <h2 id="configuration">Configuration</h2>

  <ul>
    <li>
      <p>A setting specified in the default section but not also specified in a
network-specific section (e.g. testnet) will now produce an error
preventing startup instead of just a warning unless the network is
mainnet.  This prevents settings intended for mainnet from being
applied to testnet or regtest. (#15629)</p>
    </li>
    <li>
      <p>On platforms supporting <code class="language-text highlighter-rouge">thread_local</code>, log lines can be prefixed with
the name of the thread that caused the log. To enable this behavior,
use <code class="language-text highlighter-rouge">-logthreadnames=1</code>. (#15849)</p>
    </li>
  </ul>

  <h2 id="network">Network</h2>

  <ul>
    <li>
      <p>When fetching a transaction announced by multiple peers, previous versions of
Bitcoin Core would sequentially attempt to download the transaction from each
announcing peer until the transaction is received, in the order that those
peers’ announcements were received.  In this release, the download logic has
changed to randomize the fetch order across peers and to prefer sending
download requests to outbound peers over inbound peers. This fixes an issue
where inbound peers could prevent a node from getting a transaction.
(#14897, #15834)</p>
    </li>
    <li>
      <p>If a Tor hidden service is being used, Bitcoin Core will be bound to
the standard port 8333 even if a different port is configured for
clearnet connections.  This prevents leaking node identity through use
of identical non-default port numbers. (#15651)</p>
    </li>
  </ul>

  <h2 id="mempool-and-transaction-relay">Mempool and transaction relay</h2>

  <ul>
    <li>
      <p>Allows one extra single-ancestor transaction per package.  Previously,
if a transaction in the mempool had 25 descendants, or it and all of
its descendants were over 101,000 vbytes, any newly-received
transaction that was also a descendant would be ignored.  Now, one
extra descendant will be allowed provided it is an immediate
descendant (child) and the child’s size is 10,000 vbytes or less.
This makes it possible for two-party contract protocols such as
Lightning Network to give each participant an output they can spend
immediately for Child-Pays-For-Parent (CPFP) fee bumping without
allowing one malicious participant to fill the entire package and thus
prevent the other participant from spending their output. (#15681)</p>
    </li>
    <li>
      <p>Transactions with outputs paying v1 to v16 witness versions (future
segwit versions) are now accepted into the mempool, relayed, and
mined.  Attempting to spend those outputs remains forbidden by policy
(“non-standard”).  When this change has been widely deployed, wallets
and services can accept any valid bech32 Bitcoin address without
concern that transactions paying future segwit versions will become
stuck in an unconfirmed state. (#15846)</p>
    </li>
    <li>
      <p>Legacy transactions (transactions with no segwit inputs) must now be
sent using the legacy encoding format, enforcing the rule specified in
BIP144.  (#14039)</p>
    </li>
  </ul>

  <h2 id="wallet">Wallet</h2>

  <ul>
    <li>
      <p>When in pruned mode, a rescan that was triggered by an <code class="language-text highlighter-rouge">importwallet</code>,
<code class="language-text highlighter-rouge">importpubkey</code>, <code class="language-text highlighter-rouge">importaddress</code>, or <code class="language-text highlighter-rouge">importprivkey</code> RPC will only fail
when blocks have been pruned. Previously it would fail when <code class="language-text highlighter-rouge">-prune</code>
has been set.  This change allows setting <code class="language-text highlighter-rouge">-prune</code> to a high value
(e.g. the disk size) without the calls to any of the import RPCs
failing until the first block is pruned. (#15870)</p>
    </li>
    <li>
      <p>When creating a transaction with a fee above <code class="language-text highlighter-rouge">-maxtxfee</code> (default 0.1
BTC), the RPC commands <code class="language-text highlighter-rouge">walletcreatefundedpsbt</code> and
<code class="language-text highlighter-rouge">fundrawtransaction</code> will now fail instead of rounding down the fee.
Be aware that the <code class="language-text highlighter-rouge">feeRate</code> argument is specified in BTC per 1,000
vbytes, not satoshi per vbyte. (#16257)</p>
    </li>
    <li>
      <p>A new wallet flag <code class="language-text highlighter-rouge">avoid_reuse</code> has been added (default off). When
enabled, a wallet will distinguish between used and unused addresses,
and default to not use the former in coin selection.  When setting
this flag on an existing wallet, rescanning the blockchain is required
to correctly mark previously used destinations.  Together with “avoid
partial spends” (added in Bitcoin Core v0.17.0), this can eliminate a
serious privacy issue where a malicious user can track spends by
sending small payments to a previously-paid address that would then
be included with unrelated inputs in future payments. (#13756)</p>
    </li>
  </ul>

  <h2 id="build-system-changes">Build system changes</h2>

  <ul>
    <li>
      <p>Python &gt;=3.5 is now required by all aspects of the project. This
includes the build systems, test framework and linters. The previously
supported minimum (3.4), was EOL in March 2019. (#14954)</p>
    </li>
    <li>
      <p>The minimum supported miniUPnPc API version is set to 10. This keeps
compatibility with Ubuntu 16.04 LTS and Debian 8 <code class="language-text highlighter-rouge">libminiupnpc-dev</code>
packages. Please note, on Debian this package is still vulnerable to
<a href="https://security-tracker.debian.org/tracker/CVE-2017-8798">CVE-2017-8798</a>
(in jessie only) and
<a href="https://security-tracker.debian.org/tracker/CVE-2017-1000494">CVE-2017-1000494</a>
(both in jessie and in stretch). (#15993)</p>
    </li>
  </ul>

  <h1 id="change-log">0.19.0 change log</h1>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)</li>
    <li>#16060 Bury bip9 deployments (jnewbery)</li>
  </ul>

  <h3 id="policy">Policy</h3>
  <ul>
    <li>#15557 Enhance <code class="language-text highlighter-rouge">bumpfee</code> to include inputs when targeting a feerate (instagibbs)</li>
    <li>#15846 Make sending to future native witness outputs standard (sipa)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)</li>
    <li>#14121 Index for BIP 157 block filters (jimpo)</li>
    <li>#15141 Rewrite DoS interface between validation and net_processing (sdaftuar)</li>
    <li>#15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)</li>
    <li>#15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)</li>
    <li>#15999 init: Remove dead code in LoadChainTip (MarcoFalke)</li>
    <li>#16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)</li>
    <li>#16056 remove unused magic number from consistency check (instagibbs)</li>
    <li>#16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)</li>
    <li>#15894 Remove duplicated “Error: “ prefix in logs (hebasto)</li>
    <li>#14193 validation: Add missing mempool locks (MarcoFalke)</li>
    <li>#15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)</li>
    <li>#15305 [validation] Crash if disconnecting a block fails (sdaftuar)</li>
    <li>#16471 log correct messages when CPFP fails (jnewbery)</li>
    <li>#16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)</li>
    <li>#13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)</li>
    <li>#16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)</li>
    <li>#16854 Prevent UpdateTip log message from being broken up (stevenroose)</li>
    <li>#16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)</li>
    <li>#16713 Ignore old versionbit activations to avoid ‘unknown softforks’ warning (jnewbery)</li>
    <li>#17002 chainparams: Bump assumed chain params (MarcoFalke)</li>
    <li>#16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#15597 Generate log entry when blocks messages are received unexpectedly (pstratem)</li>
    <li>#15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)</li>
    <li>#15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)</li>
    <li>#15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)</li>
    <li>#15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)</li>
    <li>#16188 Document what happens to getdata of unknown type (MarcoFalke)</li>
    <li>#15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)</li>
    <li>#16152 Disable bloom filtering by default (TheBlueMatt)</li>
    <li>#15993 Drop support of the insecure miniUPnPc versions (hebasto)</li>
    <li>#16197 Use mockable time for tx download (MarcoFalke)</li>
    <li>#16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)</li>
    <li>#16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)</li>
    <li>#16631 Restore default whitelistrelay to true (NicolasDorier)</li>
    <li>#15759 Add 2 outbound block-relay-only connections (sdaftuar)</li>
    <li>#15558 Don’t query all DNS seeds at once (sipa)</li>
    <li>#16999 0.19 seeds update (laanwj)</li>
  </ul>

  <h3 id="wallet-1">Wallet</h3>
  <ul>
    <li>#15288 Remove wallet -&gt; node global function calls (ryanofsky)</li>
    <li>#15491 Improve log output for errors during load (gwillen)</li>
    <li>#13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)</li>
    <li>#15680 Remove resendwallettransactions RPC method (jnewbery)</li>
    <li>#15508 Refactor analyzepsbt for use outside RPC code (gwillen)</li>
    <li>#15747 Remove plethora of Get*Balance (MarcoFalke)</li>
    <li>#15728 Refactor relay transactions (jnewbery)</li>
    <li>#15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)</li>
    <li>#15853 Remove unused import checkpoints.h (MarcoFalke)</li>
    <li>#15780 add cachable amounts for caching credit/debit values (kallewoof)</li>
    <li>#15778 Move maxtxfee from node to wallet (jnewbery)</li>
    <li>#15901 log on rescan completion (andrewtoth)</li>
    <li>#15917 Avoid logging no_such_file_or_directory error (promag)</li>
    <li>#15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)</li>
    <li>#15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)</li>
    <li>#15006 Add option to create an encrypted wallet (achow101)</li>
    <li>#16001 Give WalletModel::UnlockContext move semantics (sipa)</li>
    <li>#15741 Batch write imported stuff in importmulti (achow101)</li>
    <li>#16144 do not encrypt wallets with disabled private keys (mrwhythat)</li>
    <li>#15024 Allow specific private keys to be derived from descriptor (meshcollider)</li>
    <li>#13756 “avoid_reuse” wallet flag for improved privacy (kallewoof)</li>
    <li>#16226 Move ismine to the wallet module (achow101)</li>
    <li>#16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)</li>
    <li>#16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)</li>
    <li>#16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)</li>
    <li>#16237 Have the wallet give out destinations instead of keys (achow101)</li>
    <li>#16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)</li>
    <li>#16361 Remove redundant pre-TopUpKeypool check (instagibbs)</li>
    <li>#16244 Move wallet creation out of the createwallet rpc into its own function (achow101)</li>
    <li>#16227 Refactor CWallet’s inheritance chain (achow101)</li>
    <li>#16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)</li>
    <li>#16301 Use CWallet::Import* functions in all import* RPCs (achow101)</li>
    <li>#16402 Remove wallet settings from chainparams (MarcoFalke)</li>
    <li>#16415 Get rid of PendingWalletTx class (ryanofsky)</li>
    <li>#15588 Log the actual wallet file version and no longer publicly expose the “version” record (achow101)</li>
    <li>#16399 Improve wallet creation (fjahr)</li>
    <li>#16475 Enumerate walletdb keys (MarcoFalke)</li>
    <li>#15709 Do not add “setting” key as unknown (Bushstar)</li>
    <li>#16451 Remove CMerkleTx (jnewbery)</li>
    <li>#15906 Move min_depth and max_depth to coin control (amitiuttarwar)</li>
    <li>#16502 Drop unused OldKey (promag)</li>
    <li>#16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)</li>
    <li>#15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)</li>
    <li>#16503 Remove p2pEnabled from Chain interface (ariard)</li>
    <li>#16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)</li>
    <li>#14934 Descriptor expansion cache clarifications (Sjors)</li>
    <li>#16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)</li>
    <li>#16542 Return more specific errors about invalid descriptors (achow101)</li>
    <li>#16572 Fix Char as Bool in Wallet (JeremyRubin)</li>
    <li>#16753 extract PubKey from P2PK script with Solver (theStack)</li>
    <li>#16716 Use wallet name instead of pointer on unload/release (promag)</li>
    <li>#16185 gettransaction: add an argument to decode the transaction (darosior)</li>
    <li>#16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)</li>
    <li>#16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)</li>
    <li>#16624 encapsulate transactions state (ariard)</li>
    <li>#16830 Cleanup walletinitinterface.h (hebasto)</li>
    <li>#16796 Fix segfault in CreateWalletFromFile (MarcoFalke)</li>
    <li>#16866 Rename ‘decode’ argument in gettransaction method to ‘verbose’ (jnewbery)</li>
    <li>#16727 Explicit feerate for bumpfee (instagibbs)</li>
    <li>#16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#15492 remove deprecated generate method (Sjors)</li>
    <li>#15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)</li>
    <li>#15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)</li>
    <li>#15642 Remove deprecated rpc warnings (jnewbery)</li>
    <li>#15637 Rename size to vsize in mempool related calls (fanquake)</li>
    <li>#15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)</li>
    <li>#15616 Clarify decodescript RPCResult doc (MarcoFalke)</li>
    <li>#15669 Fix help text for signtransactionwithXXX (torkelrogstad)</li>
    <li>#15596 Ignore sendmany::minconf as dummy value (MarcoFalke)</li>
    <li>#15755 remove unused var in rawtransaction.cpp (Bushstar)</li>
    <li>#15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)</li>
    <li>#15748 remove dead mining code (jnewbery)</li>
    <li>#15751 Speed up deriveaddresses for large ranges (sipa)</li>
    <li>#15770 Validate maxfeerate with AmountFromValue (promag)</li>
    <li>#15474 rest/rpc: Make mempoolinfo atomic (promag)</li>
    <li>#15463 Speedup getaddressesbylabel (promag)</li>
    <li>#15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)</li>
    <li>#15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)</li>
    <li>#15932 Serialize in getblock without cs_main (MarcoFalke)</li>
    <li>#15930 Add balances RPC (MarcoFalke)</li>
    <li>#15730 Show scanning details in getwalletinfo (promag)</li>
    <li>#14802 faster getblockstats using BlockUndo data (FelixWeis)</li>
    <li>#14984 Speedup getrawmempool when verbose=true (promag)</li>
    <li>#16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)</li>
    <li>#16063 Mention getwalletinfo where a rescan is triggered (promag)</li>
    <li>#16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)</li>
    <li>#16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)</li>
    <li>#15427 Add support for descriptors to utxoupdatepsbt (sipa)</li>
    <li>#16262 Allow shutdown while in generateblocks (pstratem)</li>
    <li>#15483 Adding a ‘logpath’ entry to getrpcinfo (darosior)</li>
    <li>#16325 Clarify that block count means height excl genesis (MarcoFalke)</li>
    <li>#16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)</li>
    <li>#16332 Add logpath description for getrpcinfo (instagibbs)</li>
    <li>#16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)</li>
    <li>#15996 Deprecate totalfee argument in <code class="language-text highlighter-rouge">bumpfee</code> (instagibbs)</li>
    <li>#16467 sendrawtransaction help privacy note (jonatack)</li>
    <li>#16596 Fix getblocktemplate CLI example (emilengler)</li>
    <li>#15986 Add checksum to getdescriptorinfo (sipa)</li>
    <li>#16647 add weight to getmempoolentry output (fanquake)</li>
    <li>#16695 Add window final block height to getchaintxstats (leto)</li>
    <li>#16798 Refactor rawtransaction_util’s SignTransaction to separate prevtx parsing (achow101)</li>
    <li>#16285 Improve scantxoutset response and help message (promag)</li>
    <li>#16725 Don’t show addresses or P2PK in decoderawtransaction (NicolasDorier)</li>
    <li>#16787 Human readable network services (darosior)</li>
    <li>#16251 Improve signrawtransaction error reporting (ajtowns)</li>
    <li>#16873 fix regression in gettransaction (jonatack)</li>
    <li>#16512 Shuffle inputs and outputs after joining psbts (achow101)</li>
    <li>#16521 Use the default maxfeerate value as BTC/kB (Remagpie)</li>
    <li>#16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)</li>
    <li>#17131 fix -rpcclienttimeout 0 option (fjahr)</li>
    <li>#17249 Add missing deque include to fix build (jbeich)</li>
    <li>#17368 cli: fix -getinfo output when compiled with no wallet (fanquake)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#15464 Drop unused return values in WalletFrame (promag)</li>
    <li>#15614 Defer removeAndDeleteWallet when no modal widget is active (promag)</li>
    <li>#15711 Generate bech32 addresses by default (MarcoFalke)</li>
    <li>#15829 update request payment button text and tab description (fanquake)</li>
    <li>#15874 Resolve the qt/guiutil &lt;-&gt; qt/optionsmodel CD (251Labs)</li>
    <li>#15371 Uppercase bech32 addresses in qr codes (benthecarman)</li>
    <li>#15928 Move QRImageWidget to its own file-pair (luke-jr)</li>
    <li>#16113 move coin control “OK” to the right hand side of the dialog (fanquake)</li>
    <li>#16090 Add vertical spacer to peer detail widget (JosuGZ)</li>
    <li>#15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)</li>
    <li>#16263 Use qInfo() if no error occurs (hebasto)</li>
    <li>#16153 Add antialiasing to traffic graph widget (JosuGZ)</li>
    <li>#16350 Remove unused guard (hebasto)</li>
    <li>#16106 Sort wallets in open wallet menu (promag)</li>
    <li>#16291 Stop translating PACKAGE_NAME (MarcoFalke)</li>
    <li>#16380 Remove unused bits from the service flags enum (MarcoFalke)</li>
    <li>#16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)</li>
    <li>#16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)</li>
    <li>#16436 Do not create payment server if -disablewallet option provided (hebasto)</li>
    <li>#16514 Remove unused RPCConsole::tabFocus (promag)</li>
    <li>#16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)</li>
    <li>#16349 Remove redundant WalletController::addWallet slot (hebasto)</li>
    <li>#16578 Do not pass in command line arguments to QApplication (achow101)</li>
    <li>#16612 Remove menu icons (laanwj)</li>
    <li>#16677 remove unused PlatformStyle::TextColorIcon (fanquake)</li>
    <li>#16694 Ensure transaction send error is always visible (fanquake)</li>
    <li>#14879 Add warning messages to the debug window (hebasto)</li>
    <li>#16708 Replace obsolete functions of QSslSocket (hebasto)</li>
    <li>#16701 Replace functions deprecated in Qt 5.13 (hebasto)</li>
    <li>#16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)</li>
    <li>#16707 Remove obsolete QModelIndex::child() (hebasto)</li>
    <li>#16758 Replace QFontMetrics::width() with TextWidth() (hebasto)</li>
    <li>#16760 Change uninstall icon on Windows (GChuf)</li>
    <li>#16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)</li>
    <li>#16788 Update transifex slug for 0.19 (laanwj)</li>
    <li>#15450 Create wallet menu option (achow101)</li>
    <li>#16735 Remove unused menu items for Windows and Linux (GChuf)</li>
    <li>#16826 Do additional character escaping for wallet names and address labels (achow101)</li>
    <li>#15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)</li>
    <li>#16714 add prune to intro screen with smart default (Sjors)</li>
    <li>#16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)</li>
    <li>#16822 Create wallet menu option follow-ups (jonatack)</li>
    <li>#16882 Re-generate translations before 0.19.0 (MarcoFalke)</li>
    <li>#16928 Rename address checkbox back to bech32 (MarcoFalke)</li>
    <li>#16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)</li>
    <li>#16971 Change default size of intro frame (emilengler)</li>
    <li>#16988 Periodic translations update (laanwj)</li>
    <li>#16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)</li>
    <li>#16952 make sure to update the UI when deleting a transaction (jonasschnelli)</li>
    <li>#17031 Prevent processing duplicate payment requests (promag)</li>
    <li>#17135 Make polling in ClientModel asynchronous (promag)</li>
    <li>#17120 Fix start timer from non QThread (promag)</li>
    <li>#17257 disable font antialiasing for QR image address (fanquake)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#14954 Require python 3.5 (MarcoFalke)</li>
    <li>#15580 native_protobuf: avoid system zlib (dongcarl)</li>
    <li>#15601 Switch to python3 (take 3) (MarcoFalke)</li>
    <li>#15581 Make less assumptions about build env (dongcarl)</li>
    <li>#14853 latest RapidCheck (fanquake)</li>
    <li>#15446 Improve depends debuggability (dongcarl)</li>
    <li>#13788 Fix –disable-asm for newer assembly checks/code (luke-jr)</li>
    <li>#12051 add missing debian contrib file to tarball (puchu)</li>
    <li>#15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)</li>
    <li>#15978 .gitignore: Don’t ignore depends patches (dongcarl)</li>
    <li>#15939 gitian: Remove windows 32 bit build (MarcoFalke)</li>
    <li>#15239 scripts and tools: Move non-linux build source tarballs to “bitcoin-binaries/version” directory (hebasto)</li>
    <li>#14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)</li>
    <li>#16051 add patch to common dependencies (fanquake)</li>
    <li>#16049 switch to secure download of all dependencies (Kemu)</li>
    <li>#16059 configure: Fix thread_local detection (dongcarl)</li>
    <li>#16089 add ability to skip building zeromq (fanquake)</li>
    <li>#15844 Purge libtool archives (dongcarl)</li>
    <li>#15461 update to Boost 1.70 (Sjors)</li>
    <li>#16141 remove GZIP export from gitian descriptors (fanquake)</li>
    <li>#16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)</li>
    <li>#16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)</li>
    <li>#16183 xtrans: Configure flags cleanup (dongcarl)</li>
    <li>#16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)</li>
    <li>#16271 remove -Wall from rapidcheck build flags (fanquake)</li>
    <li>#16309 [MSVC] allow user level project customization (NicolasDorier)</li>
    <li>#16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)</li>
    <li>
      <table>
        <tbody>
          <tr>
            <td>#15457 Check std::system for -[alert</td>
            <td>block</td>
            <td>wallet]notify (Sjors)</td>
          </tr>
        </tbody>
      </table>
    </li>
    <li>#16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)</li>
    <li>#16352 prune dbus from depends (fanquake)</li>
    <li>#16270 expat 2.2.7 (fanquake)</li>
    <li>#16408 Prune X packages (dongcarl)</li>
    <li>#16386 disable unused Qt features (fanquake)</li>
    <li>#16424 Treat -Wswitch as error when –enable-werror (MarcoFalke)</li>
    <li>#16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)</li>
    <li>#16434 Specify AM_CPPFLAGS for ZMQ (domob1812)</li>
    <li>#16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)</li>
    <li>#16573 disable building libsecp256k1 benchmarks (fanquake)</li>
    <li>#16533 disable libxcb extensions (fanquake)</li>
    <li>#16589 Remove unused src/obj-test folder (MarcoFalke)</li>
    <li>#16435 autoconf: Sane <code class="language-text highlighter-rouge">--enable-debug</code> defaults (dongcarl)</li>
    <li>#16622 echo property tests status during build (jonatack)</li>
    <li>#16611 Remove src/obj directory from repository (laanwj)</li>
    <li>#16371 ignore macOS make deploy artefacts &amp; add them to clean-local (fanquake)</li>
    <li>#16654 build: update RapidCheck Makefile (jonatack)</li>
    <li>#16370 cleanup package configure flags (fanquake)</li>
    <li>#16746 msbuild: Ignore linker warning (sipsorcery)</li>
    <li>#16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)</li>
    <li>#16810 guix: Remove ssp spec file hack (dongcarl)</li>
    <li>#16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)</li>
    <li>#16413 Bump QT to LTS release 5.9.8 (THETCR)</li>
    <li>#15584 disable BIP70 support by default (fanquake)</li>
    <li>#16871 make building protobuf optional in depends (fanquake)</li>
    <li>#16879 remove redundant sed patching (fanquake)</li>
    <li>#16809 zlib: Move toolchain options to configure (dongcarl)</li>
    <li>#15146 Solve SmartOS FD_ZERO build issue (Empact)</li>
    <li>#16870 update boost macros to latest upstream for improved error reporting (fanquake)</li>
    <li>#16982 Factor out qt translations from build system (laanwj)</li>
    <li>#16926 Add OpenSSL termios fix for musl libc (nmarley)</li>
    <li>#16927 Refresh ZeroMQ 4.3.1 patch (nmarley)</li>
    <li>#17005 Qt version appears only if GUI is being built (ch4ot1c)</li>
    <li>#16468 Exclude depends/Makefile in .gitignore (promag)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#15296 Add script checking for deterministic line coverage in unit tests (practicalswift)</li>
    <li>#15338 ci: Build and run tests once on freebsd (MarcoFalke)</li>
    <li>#15479 Add .style.yapf (MarcoFalke)</li>
    <li>#15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)</li>
    <li>#15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)</li>
    <li>#15473 bench: Benchmark mempooltojson (MarcoFalke)</li>
    <li>#15466 Print remaining jobs in test_runner.py (stevenroose)</li>
    <li>#15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)</li>
    <li>#15255 Remove travis_wait from lint script (gkrizek)</li>
    <li>#15686 make pruning test faster (jnewbery)</li>
    <li>#15533 .style.yapf: Set column_limit=160 (MarcoFalke)</li>
    <li>#15660 Overhaul p2p_compactblocks.py (sdaftuar)</li>
    <li>#15495 Add regtests for HTTP status codes (domob1812)</li>
    <li>#15772 Properly log named args in authproxy (MarcoFalke)</li>
    <li>#15771 Prevent concurrency issues reading .cookie file (promag)</li>
    <li>#15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)</li>
    <li>#15629 init: Throw error when network specific config is ignored (MarcoFalke)</li>
    <li>#15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)</li>
    <li>#15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)</li>
    <li>#15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)</li>
    <li>#15352 Reduce noise level in test_bitcoin output (practicalswift)</li>
    <li>#15779 Add wallet_balance benchmark (MarcoFalke)</li>
    <li>#15843 fix outdated include in blockfilter_index_tests (jamesob)</li>
    <li>#15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)</li>
    <li>#15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)</li>
    <li>#15895 Avoid re-reading config.ini unnecessarily (luke-jr)</li>
    <li>#15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)</li>
    <li>#15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)</li>
    <li>#15696 test_runner: Move feature_pruning to base tests (MarcoFalke)</li>
    <li>#15869 Add settings merge test to prevent regresssions (ryanofsky)</li>
    <li>#15758 Add further tests to wallet_balance (MarcoFalke)</li>
    <li>#15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)</li>
    <li>#15949 test_runner: Move pruning back to extended (MarcoFalke)</li>
    <li>#15927 log thread names by default in functional tests (jnewbery)</li>
    <li>#15664 change default Python block serialization to witness (instagibbs)</li>
    <li>#15988 Add test for ArgsManager::GetChainName (ryanofsky)</li>
    <li>#15963 Make random seed logged and settable (jnewbery)</li>
    <li>#15943 Fail if RPC has been added without tests (MarcoFalke)</li>
    <li>#16036 travis: Run all lint scripts even if one fails (scravy)</li>
    <li>#13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)</li>
    <li>#16079 wallet_balance.py: Prevent edge cases (stevenroose)</li>
    <li>#16078 replace tx hash with txid in rawtransaction test (LongShao007)</li>
    <li>#16042 Bump MAX_NODES to 12 (MarcoFalke)</li>
    <li>#16124 Limit Python linting to files in the repo (practicalswift)</li>
    <li>#16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)</li>
    <li>#16214 travis: Fix caching issues (MarcoFalke)</li>
    <li>#15982 Make msg_block a witness block (MarcoFalke)</li>
    <li>#16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)</li>
    <li>#16236 fuzz: Log output even if fuzzer failed (MarcoFalke)</li>
    <li>#15520 cirrus: Run extended test feature_pruning (MarcoFalke)</li>
    <li>#16234 Add test for unknown args (MarcoFalke)</li>
    <li>#16207 stop generating lcov coverage when functional tests fail (asood123)</li>
    <li>#16252 Log to debug.log in all unit tests (MarcoFalke)</li>
    <li>#16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)</li>
    <li>#16278 Remove unused includes (practicalswift)</li>
    <li>#16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)</li>
    <li>#15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)</li>
    <li>#16294 Create at most one testing setup (MarcoFalke)</li>
    <li>#16299 bench: Move generated data to a dedicated translation unit (promag)</li>
    <li>#16329 Add tests for getblockchaininfo.softforks (MarcoFalke)</li>
    <li>#15687 tool wallet test coverage for unexpected writes to wallet (jonatack)</li>
    <li>#16267 bench: Benchmark blocktojson (fanatid)</li>
    <li>#14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)</li>
    <li>#16338 Disable other targets when enable-fuzz is set (qmma70)</li>
    <li>#16334 rpc_users: Also test rpcauth.py with password (dongcarl)</li>
    <li>#15282 Replace hard-coded hex tx with class in test framework (stevenroose)</li>
    <li>#16390 Add –filter option to test_runner.py (promag)</li>
    <li>#15891 Require standard txs in regtest by default (MarcoFalke)</li>
    <li>#16374 Enable passing wildcard test names to test runner from root (jonatack)</li>
    <li>#16420 Fix race condition in wallet_encryption test (jonasschnelli)</li>
    <li>#16422 remove redundant setup in addrman_tests (zenosage)</li>
    <li>#16438 travis: Print memory and number of cpus (MarcoFalke)</li>
    <li>#16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)</li>
    <li>#16459 Fix race condition in example_test.py (sdaftuar)</li>
    <li>#16464 Ensure we don’t generate a too-big block in p2sh sigops test (sdaftuar)</li>
    <li>#16491 fix deprecated log.warn in feature_dbcrash test (jonatack)</li>
    <li>#15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)</li>
    <li>#16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)</li>
    <li>#16293 Make test cases separate functions (MarcoFalke)</li>
    <li>#16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)</li>
    <li>#16277 Suppress output in test_bitcoin for expected errors (gertjaap)</li>
    <li>#16493 Fix test failures (MarcoFalke)</li>
    <li>#16538 Add missing sync_blocks to feature_pruning (MarcoFalke)</li>
    <li>#16509 Adapt test framework for chains other than “regtest” (MarcoFalke)</li>
    <li>#16363 Add test for BIP30 duplicate tx (MarcoFalke)</li>
    <li>#16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)</li>
    <li>#16554 only include and use OpenSSL where it’s actually needed (BIP70) (fanquake)</li>
    <li>#16598 Remove confusing hash256 function in util (elichai)</li>
    <li>#16595 travis: Use extended 90 minute timeout when available (MarcoFalke)</li>
    <li>#16563 Add unit test for AddTimeData (mzumsande)</li>
    <li>#16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)</li>
    <li>#16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)</li>
    <li>#16582 Rework ci (Use travis only as fallback env) (MarcoFalke)</li>
    <li>#16633 travis: Fix test_runner.py timeouts (MarcoFalke)</li>
    <li>#16646 Run tests with UPnP disabled (fanquake)</li>
    <li>#16623 ci: Add environment files for all settings (MarcoFalke)</li>
    <li>#16656 fix rpc_setban.py race (jonasschnelli)</li>
    <li>#16570 Make descriptor tests deterministic (davereikher)</li>
    <li>#16404 Test ZMQ notification after chain reorg (promag)</li>
    <li>#16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)</li>
    <li>#16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)</li>
    <li>#16767 Check for codespell in lint-spelling.sh (kristapsk)</li>
    <li>#16768 Make lint-includes.sh work from any directory (kristapsk)</li>
    <li>#15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)</li>
    <li>#16804 Remove unused try-block in assert_debug_log (MarcoFalke)</li>
    <li>#16850 <code class="language-text highlighter-rouge">servicesnames</code> field in <code class="language-text highlighter-rouge">getpeerinfo</code> and <code class="language-text highlighter-rouge">getnetworkinfo</code> (darosior)</li>
    <li>#16551 Test that low difficulty chain fork is rejected (MarcoFalke)</li>
    <li>#16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)</li>
    <li>#16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)</li>
    <li>#16888 Bump timeouts in slow running tests (MarcoFalke)</li>
    <li>#16864 Add python bech32 impl round-trip test (instagibbs)</li>
    <li>#16865 add some unit tests for merkle.cpp (soroosh-sdi)</li>
    <li>#14696 Add explicit references to related CVE’s in p2p_invalid_block test (lucash-dev)</li>
    <li>#16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)</li>
    <li>#16898 Remove connect_nodes_bi (MarcoFalke)</li>
    <li>#16917 Move common function assert_approx() into util.py (fridokus)</li>
    <li>#16921 Add information on how to add Vulture suppressions (practicalswift)</li>
    <li>#16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)</li>
    <li>#16918 Make PORT_MIN in test runner configurable (MarcoFalke)</li>
    <li>#16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)</li>
    <li>#16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)</li>
    <li>#16959 ci: Set $host before setting fallback values (MarcoFalke)</li>
    <li>#16961 Remove python dead code linter (laanwj)</li>
    <li>#16931 add unittests for CheckProofOfWork (soroosh-sdi)</li>
    <li>#16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)</li>
    <li>#16987 Correct docstring param name (jbampton)</li>
    <li>#17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)</li>
    <li>#17006 Enable UBSan for Travis fuzzing job (practicalswift)</li>
    <li>#17086 Fix fs_tests for unknown locales (carnhofdaki)</li>
    <li>#15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)</li>
    <li>#16742 test: add executable flag for wallet_watchonly.py (theStack)</li>
    <li>#16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#15335 Fix lack of warning of unrecognized section names (AkioNak)</li>
    <li>#15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)</li>
    <li>#15609 scripts and tools: Set ‘distro’ explicitly (hebasto)</li>
    <li>#15519 Add Poly1305 implementation (jonasschnelli)</li>
    <li>#15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)</li>
    <li>#15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)</li>
    <li>#15920 lint: Check that all wallet args are hidden (MarcoFalke)</li>
    <li>#15849 Thread names in logs and deadlock debug tools (jamesob)</li>
    <li>#15650 Handle the result of posix_fallocate system call (lucayepa)</li>
    <li>#15766 scripts and tools: Upgrade gitian image before signing (hebasto)</li>
    <li>#15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)</li>
    <li>#15968 Fix portability issue with pthreads (grim-trigger)</li>
    <li>#15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)</li>
    <li>#15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)</li>
    <li>#15224 Add RNG strengthening (10ms once every minute) (sipa)</li>
    <li>#15840 Contrib scripts: Filter IPv6 by ASN (abitfan)</li>
    <li>#13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)</li>
    <li>#15236 scripts and tools: Make –setup command independent (hebasto)</li>
    <li>#16114 contrib: Add curl as a required program in gitian-build.py (fanquake)</li>
    <li>#16046 util: Add type safe gettime (MarcoFalke)</li>
    <li>#15703 Update secp256k1 subtree to latest upstream (sipa)</li>
    <li>#16086 contrib: Use newer config.guess &amp; config.sub in install_db4.sh (fanquake)</li>
    <li>#16130 Don’t GPG sign intermediate commits with github-merge tool (stevenroose)</li>
    <li>#16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)</li>
    <li>#16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)</li>
    <li>#16112 util: Log early messages (MarcoFalke)</li>
    <li>#16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)</li>
    <li>#16300 util: Explain why the path is cached (MarcoFalke)</li>
    <li>#16314 scripts and tools: Update copyright_header.py script (hebasto)</li>
    <li>#16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)</li>
    <li>#14734 fix an undefined behavior in uint::SetHex (kazcw)</li>
    <li>#16327 scripts and tools: Update ShellCheck linter (hebasto)</li>
    <li>#15277 contrib: Enable building in guix containers (dongcarl)</li>
    <li>#16362 Add bilingual_str type (hebasto)</li>
    <li>#16481 logs: add missing space (harding)</li>
    <li>#16581 sipsorcery gitian key (sipsorcery)</li>
    <li>#16566 util: Refactor upper/lowercase functions (kallewoof)</li>
    <li>#16620 util: Move resolveerrmsg to util/error (MarcoFalke)</li>
    <li>#16625 scripts: Remove github-merge.py (fanquake)</li>
    <li>#15864 Fix datadir handling (hebasto)</li>
    <li>#16670 util: Add join helper to join a list of strings (MarcoFalke)</li>
    <li>#16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)</li>
    <li>#16730 Support serialization of <code class="language-text highlighter-rouge">std::vector&lt;bool&gt;</code> (sipa)</li>
    <li>#16556 Fix systemd service file configuration directory setup (setpill)</li>
    <li>#15615 Add log output during initial header sync (jonasschnelli)</li>
    <li>#16774 Avoid unnecessary “Synchronizing blockheaders” log messages (jonasschnelli)</li>
    <li>#16489 log: harmonize bitcoind logging (jonatack)</li>
    <li>#16577 util: Cbufferedfile fixes and unit test (LarryRuane)</li>
    <li>#16984 util: Make thread names shorter (hebasto)</li>
    <li>#17038 Don’t rename main thread at process level (laanwj)</li>
    <li>#17184 util: Filter out macos process serial number (hebasto)</li>
    <li>#17095 util: Filter control characters out of log messages (laanwj)</li>
    <li>#17085 init: Change fallback locale to C.UTF-8 (laanwj)</li>
    <li>#16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)</li>
    <li>#17449 fix uninitialized variable nMinerConfirmationWindow (bitcoinVBR)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#15514 Update Transifex links (fanquake)</li>
    <li>#15513 add “sections” info to example bitcoin.conf (fanquake)</li>
    <li>#15530 Move wallet lock annotations to header (MarcoFalke)</li>
    <li>#15562 remove duplicate clone step in build-windows.md (fanquake)</li>
    <li>#15565 remove release note fragments (fanquake)</li>
    <li>#15444 Additional productivity tips (Sjors)</li>
    <li>#15577 Enable TLS in link to chris.beams.io (JeremyRand)</li>
    <li>#15604 release note for disabling reject messages by default (jnewbery)</li>
    <li>#15611 Add Gitian key for droark (droark)</li>
    <li>#15626 Update ACK description in CONTRIBUTING.md (jonatack)</li>
    <li>#15603 Add more tips to productivity.md (gwillen)</li>
    <li>#15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)</li>
    <li>#15685 rpc-mining: Clarify error messages (MarcoFalke)</li>
    <li>#15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)</li>
    <li>#15659 fix findFork comment (r8921039)</li>
    <li>#15718 Improve netaddress comments (dongcarl)</li>
    <li>#15833 remove out-of-date comment on pay-to-witness support (r8921039)</li>
    <li>#15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)</li>
    <li>#15267 explain AcceptToMemoryPoolWorker’s coins_to_uncache (jamesob)</li>
    <li>#15887 Align code example style with clang-format (hebasto)</li>
    <li>#15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)</li>
    <li>#15908 Align MSVC build options with Linux build ones (hebasto)</li>
    <li>#15941 Add historical release notes for 0.18.0 (laanwj)</li>
    <li>#15794 Clarify PR guidelines w/re documentation (dongcarl)</li>
    <li>#15607 Release process updates (jonatack)</li>
    <li>#14364 Clarify -blocksdir usage (sangaman)</li>
    <li>#15777 Add doxygen comments for keypool classes (jnewbery)</li>
    <li>#15820 Add productivity notes for dummy rebases (dongcarl)</li>
    <li>#15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)</li>
    <li>#16080 build/doc: update bitcoin_config.h packages, release process (jonatack)</li>
    <li>#16047 analyzepsbt description in doc/psbt.md (jonatack)</li>
    <li>#16039 add release note for 14954 (fanquake)</li>
    <li>#16139 Add riscv64 to outputs list in release-process.md (JeremyRand)</li>
    <li>#16140 create security policy (narula)</li>
    <li>#16164 update release process for SECURITY.md (jonatack)</li>
    <li>#16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)</li>
    <li>#16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)</li>
    <li>#16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)</li>
    <li>#16196 Add release notes for 14897 &amp; 15834 (MarcoFalke)</li>
    <li>#16241 add rapidcheck to vcpkg install list (fanquake)</li>
    <li>#16243 Remove travis badge from readme (MarcoFalke)</li>
    <li>#16256 remove orphaned header in developer notes (jonatack)</li>
    <li>#15964 Improve build-osx document formatting (giulio92)</li>
    <li>#16313 Fix broken link in doc/build-osx.md (jonatack)</li>
    <li>#16330 Use placeholder instead of key expiration date (hebasto)</li>
    <li>#16339 add reduce-memory.md (fanquake)</li>
    <li>#16347 Include static members in Doxygen (dongcarl)</li>
    <li>#15824 Improve netbase comments (dongcarl)</li>
    <li>#16430 Update bips 35, 37 and 111 status (MarcoFalke)</li>
    <li>#16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)</li>
    <li>#16484 update labels in CONTRIBUTING.md (MarcoFalke)</li>
    <li>#16483 update Python command in msvc readme (sipsorcery)</li>
    <li>#16504 Add release note for the deprecated totalFee option of bumpfee (promag)</li>
    <li>#16448 add note on precedence of options in bitcoin.conf (fanquake)</li>
    <li>#16536 Update and extend benchmarking.md (ariard)</li>
    <li>#16530 Fix grammar and punctuation in developer notes (Tech1k)</li>
    <li>#16574 Add historical release notes for 0.18.1 (laanwj)</li>
    <li>#16585 Update Markdown syntax for bdb packages (emilengler)</li>
    <li>#16586 Mention other ways to conserve memory on compilation (MarcoFalke)</li>
    <li>#16605 Add missing contributor to 0.18.1 release notes (meshcollider)</li>
    <li>#16615 Fix typos in COPYRIGHT (gapeman)</li>
    <li>#16626 Fix spelling error chache -&gt; cache (nilswloewen)</li>
    <li>#16587 Improve versionbits.h documentation (ariard)</li>
    <li>#16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)</li>
    <li>#16634 Refer in rpcbind doc to the manpage (MarcoFalke)</li>
    <li>#16555 mention whitelist is inbound, and applies to blocksonly (Sjors)</li>
    <li>#16645 initial RapidCheck property-based testing documentation (jonatack)</li>
    <li>#16691 improve depends prefix documentation (fanquake)</li>
    <li>#16629 Add documentation for the new whitelist permissions (NicolasDorier)</li>
    <li>#16723 Update labels in CONTRIBUTING.md (hebasto)</li>
    <li>#16461 Tidy up shadowing section (promag)</li>
    <li>#16621 add default bitcoin.conf locations (GChuf)</li>
    <li>#16752 Delete stale URL in test README (michaelfolkson)</li>
    <li>#14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)</li>
    <li>#16806 Add issue templates for bug and feature request (MarcoFalke)</li>
    <li>#16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)</li>
    <li>#16863 Add a missing closing parenthesis in the bitcoin-wallet’s help (darosior)</li>
    <li>#16757 CChainState return values (MarcoFalke)</li>
    <li>#16847 add comments clarifying how local services are advertised (jamesob)</li>
    <li>#16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)</li>
    <li>#16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)</li>
    <li>#16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)</li>
    <li>#16914 Update homebrew instruction for doxygen (Sjors)</li>
    <li>#16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)</li>
    <li>#16960 replace outdated OpenSSL comment in test README (fanquake)</li>
    <li>#16968 Remove MSVC update step from translation process (laanwj)</li>
    <li>#16953 Improve test READMEs (fjahr)</li>
    <li>#16962 Put PR template in comments (laanwj)</li>
    <li>#16397 Clarify includeWatching for fundrawtransaction (stevenroose)</li>
    <li>#15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)</li>
    <li>#16997 Update bips.md for 0.19 (laanwj)</li>
    <li>#17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)</li>
    <li>#17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)</li>
    <li>#17111 update bips.md with buried BIP9 deployments (MarcoFalke)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>251</li>
    <li>Aaron Clauson</li>
    <li>Akio Nakamura</li>
    <li>Alistair Mann</li>
    <li>Amiti Uttarwar</li>
    <li>Andrew Chow</li>
    <li>andrewtoth</li>
    <li>Anthony Towns</li>
    <li>Antoine Riard</li>
    <li>Aseem Sood</li>
    <li>Ben Carman</li>
    <li>Ben Woosley</li>
    <li>bpay</li>
    <li>Carl Dong</li>
    <li>Carnhof Daki</li>
    <li>Chris Capobianco</li>
    <li>Chris Moore</li>
    <li>Chuf</li>
    <li>clashic</li>
    <li>clashicly</li>
    <li>Cory Fields</li>
    <li>Daki Carnhof</li>
    <li>Dan Gershony</li>
    <li>Daniel Edgecumbe</li>
    <li>Daniel Kraft</li>
    <li>Daniel McNally</li>
    <li>darosior</li>
    <li>David A. Harding</li>
    <li>David Reikher</li>
    <li>Douglas Roark</li>
    <li>Elichai Turkel</li>
    <li>Emil</li>
    <li>Emil Engler</li>
    <li>ezegom</li>
    <li>Fabian Jahr</li>
    <li>fanquake</li>
    <li>Felix Weis</li>
    <li>Ferdinando M. Ametrano</li>
    <li>fridokus</li>
    <li>gapeman</li>
    <li>GChuf</li>
    <li>Gert-Jaap Glasbergen</li>
    <li>Giulio Lombardo</li>
    <li>Glenn Willen</li>
    <li>Graham Krizek</li>
    <li>Gregory Sanders</li>
    <li>grim-trigger</li>
    <li>gwillen</li>
    <li>Hennadii Stepanov</li>
    <li>Jack Mallers</li>
    <li>James Hilliard</li>
    <li>James O’Beirne</li>
    <li>Jan Beich</li>
    <li>Jeremy Rubin</li>
    <li>JeremyRand</li>
    <li>Jim Posen</li>
    <li>John Bampton</li>
    <li>John Newbery</li>
    <li>Jon Atack</li>
    <li>Jon Layton</li>
    <li>Jonas Schnelli</li>
    <li>Jonathan “Duke” Leto</li>
    <li>João Barbosa</li>
    <li>Joonmo Yang</li>
    <li>Jordan Baczuk</li>
    <li>Jorge Timón</li>
    <li>Josu Goñi</li>
    <li>Julian Fleischer</li>
    <li>Karl-Johan Alm</li>
    <li>Kaz Wesley</li>
    <li>keepkeyjon</li>
    <li>Kirill Fomichev</li>
    <li>Kristaps Kaupe</li>
    <li>Kristian Kramer</li>
    <li>Larry Ruane</li>
    <li>Lenny Maiorani</li>
    <li>LongShao007</li>
    <li>Luca Venturini</li>
    <li>lucash-dev</li>
    <li>Luke Dashjr</li>
    <li>marcoagner</li>
    <li>MarcoFalke</li>
    <li>marcuswin</li>
    <li>Martin Ankerl</li>
    <li>Martin Zumsande</li>
    <li>Matt Corallo</li>
    <li>MeshCollider</li>
    <li>Michael Folkson</li>
    <li>Miguel Herranz</li>
    <li>Nathan Marley</li>
    <li>Neha Narula</li>
    <li>nicolas.dorier</li>
    <li>Nils Loewen</li>
    <li>nkostoulas</li>
    <li>NullFunctor</li>
    <li>orient</li>
    <li>Patrick Strateman</li>
    <li>Peter Bushnell</li>
    <li>Peter Wagner</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>qmma</li>
    <li>r8921039</li>
    <li>RJ Rybarczyk</li>
    <li>Russell Yanofsky</li>
    <li>Samuel Dobson</li>
    <li>Sebastian Falbesoner</li>
    <li>setpill</li>
    <li>shannon1916</li>
    <li>Sjors Provoost</li>
    <li>soroosh-sdi</li>
    <li>Steven Roose</li>
    <li>Suhas Daftuar</li>
    <li>tecnovert</li>
    <li>THETCR</li>
    <li>Tim Ruffing</li>
    <li>Tobias Kaderle</li>
    <li>Torkel Rogstad</li>
    <li>Ulrich Kempken</li>
    <li>whythat</li>
    <li>William Casarin</li>
    <li>Wladimir J. van der Laan</li>
    <li>zenosage</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/bitcoin/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.18.1 released</title>
            <link>https://bitcoin.org/en/release/v0.18.1</link>
            <guid>https://bitcoin.org/en/release/v0.18.1</guid>
          
            <pubDate>Fri, 09 Aug 2019 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.18.1 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.18.1/">https://bitcoincore.org/bin/bitcoin-core-0.18.1/</a></p>

  <p>This is a new minor version release, including new features, various bug
fixes and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has
completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
<code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac) or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on
Linux).</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database
will be converted to a new format, which will take anywhere from a few
minutes to half an hour, depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and
there is no automatic upgrade code from before version 0.8 to version
0.15.0 or later. Upgrading directly from 0.7.x and earlier without
redownloading the blockchain is not supported.  However, as usual, old
wallet versions are still supported.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is supported and extensively tested on operating systems
using the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not
recommended to use Bitcoin Core on unsupported systems.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
as frequently tested on them.</p>

  <p>From 0.17.0 onwards, macOS &lt;10.10 is no longer supported. 0.17.0 is
built using Qt 5.9.x, which doesn’t support versions of macOS older than
10.10. Additionally, Bitcoin Core does not yet change appearance when
macOS “dark mode” is activated.</p>

  <h1 id="known-issues">Known issues</h1>

  <h2 id="wallet-gui">Wallet GUI</h2>

  <p>For advanced users who have both (1) enabled coin control features, and
(2) are using multiple wallets loaded at the same time: The coin control
input selection dialog can erroneously retain wrong-wallet state when
switching wallets using the dropdown menu. For now, it is recommended
not to use coin control features with multiple wallets loaded.</p>

  <h1 id="change-log">0.18.1 change log</h1>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#15990 Add tests and documentation for blocksonly (MarcoFalke)</li>
    <li>#16021 Avoid logging transaction decode errors to stderr (MarcoFalke)</li>
    <li>#16405 fix: tor: Call <code class="language-text highlighter-rouge">event_base_loopbreak</code> from the event’s callback (promag)</li>
    <li>#16412 Make poll in InterruptibleRecv only filter for POLLIN events (tecnovert)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#15913 Add -ignorepartialspends to list of ignored wallet options (luke-jr)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#15991 Bugfix: fix pruneblockchain returned prune height (jonasschnelli)</li>
    <li>#15899 Document iswitness flag and fix bug in converttopsbt (MarcoFalke)</li>
    <li>#16026 Ensure that uncompressed public keys in a multisig always returns a legacy address (achow101)</li>
    <li>#14039 Disallow extended encoding for non-witness transactions (sipa)</li>
    <li>#16210 add 2nd arg to signrawtransactionwithkey examples (dooglus)</li>
    <li>#16250 signrawtransactionwithkey: report error when missing redeemScript/witnessScript (ajtowns)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#16044 fix the bug of OPEN CONFIGURATION FILE on Mac (shannon1916)</li>
    <li>#15957 Show “No wallets available” in open menu instead of nothing (meshcollider)</li>
    <li>#16118 Enable open wallet menu on setWalletController (promag)</li>
    <li>#16135 Set progressDialog to nullptr (promag)</li>
    <li>#16231 Fix open wallet menu initialization order (promag)</li>
    <li>#16254 Set <code class="language-text highlighter-rouge">AA_EnableHighDpiScaling</code> attribute early (hebasto)</li>
    <li>#16122 Enable console line edit on setClientModel (promag)</li>
    <li>#16348 Assert QMetaObject::invokeMethod result (promag)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#15985 Add test for GCC bug 90348 (sipa)</li>
    <li>#15947 Install bitcoin-wallet manpage (domob1812)</li>
    <li>#15983 build with -fstack-reuse=none (MarcoFalke)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#15826 Pure python EC (sipa)</li>
    <li>#15893 Add test for superfluous witness record in deserialization (instagibbs)</li>
    <li>#14818 Bugfix: test/functional/rpc_psbt: Remove check for specific error message that depends on uncertain assumptions (luke-jr)</li>
    <li>#15831 Add test that addmultisigaddress fails for watchonly addresses (MarcoFalke)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#15890 Remove text about txes always relayed from -whitelist (harding)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#16095 Catch by reference not value in wallettool (kristapsk)</li>
    <li>#16205 Replace fprintf with tfm::format (MarcoFalke)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Andrew Chow</li>
    <li>Anthony Towns</li>
    <li>Chris Moore</li>
    <li>Daniel Kraft</li>
    <li>David A. Harding</li>
    <li>fanquake</li>
    <li>Gregory Sanders</li>
    <li>Hennadii Stepanov</li>
    <li>John Newbery</li>
    <li>Jonas Schnelli</li>
    <li>João Barbosa</li>
    <li>Kristaps Kaupe</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>MeshCollider</li>
    <li>Pieter Wuille</li>
    <li>shannon1916</li>
    <li>tecnovert</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.18.0 released</title>
            <link>https://bitcoin.org/en/release/v0.18.0</link>
            <guid>https://bitcoin.org/en/release/v0.18.0</guid>
          
            <pubDate>Thu, 02 May 2019 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.18.0 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.18.0/">https://bitcoincore.org/bin/bitcoin-core-0.18.0/</a></p>

  <p>This is a new major version release, including new features, various bug
fixes and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has
completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
<code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac) or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on
Linux).</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database
will be converted to a new format, which will take anywhere from a few
minutes to half an hour, depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and
there is no automatic upgrade code from before version 0.8 to version
0.15.0 or later. Upgrading directly from 0.7.x and earlier without
redownloading the blockchain is not supported.  However, as usual, old
wallet versions are still supported.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is supported and extensively tested on operating systems
using the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not
recommended to use Bitcoin Core on unsupported systems.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
as frequently tested on them.</p>

  <p>From 0.17.0 onwards, macOS &lt;10.10 is no longer supported. 0.17.0 is
built using Qt 5.9.x, which doesn’t support versions of macOS older than
10.10. Additionally, Bitcoin Core does not yet change appearance when
macOS “dark mode” is activated.</p>

  <p>In addition to previously-supported CPU platforms, this release’s
pre-compiled distribution also provides binaries for the RISC-V
platform.</p>

  <p>If you are using the <code class="language-text highlighter-rouge">systemd</code> unit configuration file located at
<code class="language-text highlighter-rouge">contrib/init/bitcoind.service</code>, it has been changed to use
<code class="language-text highlighter-rouge">/var/lib/bitcoind</code> as the data directory instead of
<code class="language-text highlighter-rouge">~bitcoin/.bitcoin</code>. When switching over to the new configuration file,
please make sure that the filesystem on which <code class="language-text highlighter-rouge">/var/lib/bitcoind</code> will
exist has enough space (check using <code class="language-text highlighter-rouge">df -h /var/lib/bitcoind</code>), and
optionally copy over your existing data directory. See the <a href="#systemd-init-file">systemd init
file section</a> for more details.</p>

  <h1 id="known-issues">Known issues</h1>

  <h2 id="wallet-gui">Wallet GUI</h2>

  <p>For advanced users who have both (1) enabled coin control features, and
(2) are using multiple wallets loaded at the same time: The coin control
input selection dialog can erroneously retain wrong-wallet state when
switching wallets using the dropdown menu. For now, it is recommended
not to use coin control features with multiple wallets loaded.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="mining">Mining</h2>

  <ul>
    <li>Calls to <code class="language-text highlighter-rouge">getblocktemplate</code> will fail if the segwit rule is not
specified.  Calling <code class="language-text highlighter-rouge">getblocktemplate</code> without segwit specified is
almost certainly a misconfiguration since doing so results in lower
rewards for the miner.  Failed calls will produce an error message
describing how to enable the segwit rule.</li>
  </ul>

  <h2 id="configuration-option-changes">Configuration option changes</h2>

  <ul>
    <li>
      <p>A warning is printed if an unrecognized section name is used in the
configuration file.  Recognized sections are <code class="language-text highlighter-rouge">[test]</code>, <code class="language-text highlighter-rouge">[main]</code>, and
<code class="language-text highlighter-rouge">[regtest]</code>.</p>
    </li>
    <li>
      <p>Four new options are available for configuring the maximum number of
messages that ZMQ will queue in memory (the “high water mark”) before
dropping additional messages.  The default value is 1,000, the same as
was used for previous releases.  See the <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md#usage">ZMQ
documentation</a>
for details.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">rpcallowip</code> option can no longer be used to automatically listen
on all network interfaces.  Instead, the <code class="language-text highlighter-rouge">rpcbind</code> parameter must be
used to specify the IP addresses to listen on.  Listening for RPC
commands over a public network connection is insecure and should be
disabled, so a warning is now printed if a user selects such a
configuration.  If you need to expose RPC in order to use a tool like
Docker, ensure you only bind RPC to your localhost, e.g. <code class="language-text highlighter-rouge">docker run
[...] -p 127.0.0.1:8332:8332</code> (this is an extra <code class="language-text highlighter-rouge">:8332</code> over the
normal Docker port specification).</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">rpcpassword</code> option now causes a startup error if the password
set in the configuration file contains a hash character (#), as it’s
ambiguous whether the hash character is meant for the password or as a
comment.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">whitelistforcerelay</code> option is used to relay transactions from
whitelisted peers even when not accepted to the mempool. This option
now defaults to being off, so that changes in policy and
disconnect/ban behavior will not cause a node that is whitelisting
another to be dropped by peers.  Users can still explicitly enable
this behavior with the command line option (and may want to consider
<a href="https://bitcoincore.org/en/contact/">contacting</a> the Bitcoin Core
project to let us know about their use-case, as this feature could be
deprecated in the future).</p>
    </li>
  </ul>

  <h2 id="systemd-init-file">systemd init file</h2>

  <p>The systemd init file (<code class="language-text highlighter-rouge">contrib/init/bitcoind.service</code>) has been changed
to use <code class="language-text highlighter-rouge">/var/lib/bitcoind</code> as the data directory instead of
<code class="language-text highlighter-rouge">~bitcoin/.bitcoin</code>. This change makes Bitcoin Core more consistent with
other services, and makes the systemd init config more consistent with
existing Upstart and OpenRC configs.</p>

  <p>The configuration, PID, and data directories are now completely managed
by systemd, which will take care of their creation, permissions, etc.
See <a href="https://www.freedesktop.org/software/systemd/man/systemd.exec.html#RuntimeDirectory="><code class="language-text highlighter-rouge">systemd.exec(5)</code></a>
for more details.</p>

  <p>When using the provided init files under <code class="language-text highlighter-rouge">contrib/init</code>, overriding the
<code class="language-text highlighter-rouge">datadir</code> option in <code class="language-text highlighter-rouge">/etc/bitcoin/bitcoin.conf</code> will have no effect.
This is because the command line arguments specified in the init files
take precedence over the options specified in
<code class="language-text highlighter-rouge">/etc/bitcoin/bitcoin.conf</code>.</p>

  <h2 id="documentation">Documentation</h2>

  <ul>
    <li>
      <p>A new short <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/JSON-RPC-interface.md">document</a>
about the JSON-RPC interface describes cases where the results of an
RPC might contain inconsistencies between data sourced from different
subsystems, such as wallet state and mempool state.  A note is added
to the <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md">REST interface documentation</a>
indicating that the same rules apply.</p>
    </li>
    <li>
      <p>Further information is added to the <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/JSON-RPC-interface.md">JSON-RPC
documentation</a>
about how to secure this interface.</p>
    </li>
    <li>
      <p>A new <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/bitcoin-conf.md">document</a>
about the <code class="language-text highlighter-rouge">bitcoin.conf</code> file describes how to use it to configure
Bitcoin Core.</p>
    </li>
    <li>
      <p>A new document introduces Bitcoin Core’s BIP174 <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md">Partially-Signed
Bitcoin Transactions
(PSBT)</a>
interface, which is used to allow multiple programs to collaboratively
work to create, sign, and broadcast new transactions.  This is useful
for offline (cold storage) wallets, multisig wallets, coinjoin
implementations, and many other cases where two or more programs need
to interact to generate a complete transaction.</p>
    </li>
    <li>
      <p>The <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md">output script
descriptor</a>
documentation has been updated with information about new features in
this still-developing language for describing the output scripts that
a wallet or other program wants to receive notifications for, such as
which addresses it wants to know received payments.  The language is
currently used in multiple new and updated RPCs described in these
release notes and is expected to be adapted to other RPCs and to the
underlying wallet structure.</p>
    </li>
  </ul>

  <h2 id="build-system-changes">Build system changes</h2>

  <ul>
    <li>
      <p>A new <code class="language-text highlighter-rouge">--disable-bip70</code> option may be passed to <code class="language-text highlighter-rouge">./configure</code> to
prevent Bitcoin-Qt from being built with support for the BIP70 payment
protocol or from linking libssl.  As the payment protocol has exposed
Bitcoin Core to libssl vulnerabilities in the past, builders who don’t
need BIP70 support are encouraged to use this option to reduce their
exposure to future vulnerabilities.</p>
    </li>
    <li>
      <p>The minimum required version of Qt (when building the GUI) has been
increased from 5.2 to 5.5.1 (the <a href="https://github.com/bitcoin/bitcoin/blob/master/depends/README.md">depends
system</a>
provides 5.9.7)</p>
    </li>
  </ul>

  <h2 id="new-rpcs">New RPCs</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">getnodeaddresses</code> returns peer addresses known to this node. It may
be used to find nodes to connect to without using a DNS seeder.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">listwalletdir</code> returns a list of wallets in the wallet directory
(either the default wallet directory or the directory configured by
the <code class="language-text highlighter-rouge">-walletdir</code> parameter).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getrpcinfo</code> returns runtime details of the RPC server. At the moment,
it returns an array of the currently active commands and how long
they’ve been running.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">deriveaddresses</code> returns one or more addresses corresponding to an
<a href="https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md">output descriptor</a>.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getdescriptorinfo</code> accepts a descriptor and returns information about
it, including its computed checksum.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">joinpsbts</code> merges multiple distinct PSBTs into a single PSBT. The
multiple PSBTs must have different inputs. The resulting PSBT will
contain every input and output from all of the PSBTs. Any signatures
provided in any of the PSBTs will be dropped.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">analyzepsbt</code> examines a PSBT and provides information about what
the PSBT contains and the next steps that need to be taken in order
to complete the transaction. For each input of a PSBT, <code class="language-text highlighter-rouge">analyzepsbt</code>
provides information about what information is missing for that
input, including whether a UTXO needs to be provided, what pubkeys
still need to be provided, which scripts need to be provided, and
what signatures are still needed. Every input will also list which
role is needed to complete that input, and <code class="language-text highlighter-rouge">analyzepsbt</code> will also
list the next role in general needed to complete the PSBT.
<code class="language-text highlighter-rouge">analyzepsbt</code> will also provide the estimated fee rate and estimated
virtual size of the completed transaction if it has enough
information to do so.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">utxoupdatepsbt</code> searches the set of Unspent Transaction Outputs
(UTXOs) to find the outputs being spent by the partial transaction.
PSBTs need to have the UTXOs being spent to be provided because
the signing algorithm requires information from the UTXO being spent.
For segwit inputs, only the UTXO itself is necessary.  For
non-segwit outputs, the entire previous transaction is needed so
that signers can be sure that they are signing the correct thing.
Unfortunately, because the UTXO set only contains UTXOs and not full
transactions, <code class="language-text highlighter-rouge">utxoupdatepsbt</code> will only add the UTXO for segwit
inputs.</p>
    </li>
  </ul>

  <h2 id="updated-rpcs">Updated RPCs</h2>

  <p>Note: some low-level RPC changes mainly useful for testing are described
in the Low-level Changes section below.</p>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">getpeerinfo</code> now returns an additional <code class="language-text highlighter-rouge">minfeefilter</code> field set to
the peer’s BIP133 fee filter.  You can use this to detect that you
have peers that are willing to accept transactions below the default
minimum relay fee.</p>
    </li>
    <li>
      <p>The mempool RPCs, such as <code class="language-text highlighter-rouge">getrawmempool</code> with <code class="language-text highlighter-rouge">verbose=true</code>, now
return an additional “bip125-replaceable” value indicating whether the
transaction (or its unconfirmed ancestors) opts-in to asking nodes and
miners to replace it with a higher-feerate transaction spending any of
the same inputs.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">settxfee</code> previously silently ignored attempts to set the fee below
the allowed minimums.  It now prints a warning.  The special value of
“0” may still be used to request the minimum value.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getaddressinfo</code> now provides an <code class="language-text highlighter-rouge">ischange</code> field indicating whether
the wallet used the address in a change output.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">importmulti</code> has been updated to support P2WSH, P2WPKH, P2SH-P2WPKH,
and P2SH-P2WSH. Requests for P2WSH and P2SH-P2WSH accept an additional
<code class="language-text highlighter-rouge">witnessscript</code> parameter.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">importmulti</code> now returns an additional <code class="language-text highlighter-rouge">warnings</code> field for each
request with an array of strings explaining when fields are being
ignored or are inconsistent, if there are any.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getaddressinfo</code> now returns an additional <code class="language-text highlighter-rouge">solvable</code> boolean field
when Bitcoin Core knows enough about the address’s scriptPubKey,
optional redeemScript, and optional witnessScript in order for the
wallet to be able to generate an unsigned input spending funds sent to
that address.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getaddressinfo</code>, <code class="language-text highlighter-rouge">listunspent</code>, and <code class="language-text highlighter-rouge">scantxoutset</code> RPCs now
return an additional <code class="language-text highlighter-rouge">desc</code> field that contains an output descriptor
containing all key paths and signing information for the address
(except for the private key).  The <code class="language-text highlighter-rouge">desc</code> field is only returned for
<code class="language-text highlighter-rouge">getaddressinfo</code> and <code class="language-text highlighter-rouge">listunspent</code> when the address is solvable.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">importprivkey</code> will preserve previously-set labels for addresses or
public keys corresponding to the private key being imported.  For
example, if you imported a watch-only address with the label “cold
wallet” in earlier releases of Bitcoin Core, subsequently importing
the private key would default to resetting the address’s label to the
default empty-string label (“”).  In this release, the previous label
of “cold wallet” will be retained.  If you optionally specify any
label besides the default when calling <code class="language-text highlighter-rouge">importprivkey</code>, the new label
will be applied to the address.</p>
    </li>
    <li>
      <p>See the <a href="#mining">Mining</a> section for changes to <code class="language-text highlighter-rouge">getblocktemplate</code>.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">getmininginfo</code> now omits <code class="language-text highlighter-rouge">currentblockweight</code> and <code class="language-text highlighter-rouge">currentblocktx</code>
when a block was never assembled via RPC on this node.</p>
    </li>
    <li>The <code class="language-text highlighter-rouge">getrawtransaction</code> RPC &amp; REST endpoints no longer check the
unspent UTXO set for a transaction. The remaining behaviors are as
follows: 1. If a blockhash is provided, check the corresponding block.
      <ol>
        <li>If no blockhash is provided, check the mempool. 3. If no blockhash
is provided but txindex is enabled, also check txindex.</li>
      </ol>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">unloadwallet</code> is now synchronous, meaning it will not return until
the wallet is fully unloaded.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">importmulti</code> now supports importing of addresses from descriptors. A
“desc” parameter can be provided instead of the “scriptPubKey” in a
request, as well as an optional range for ranged descriptors to
specify the start and end of the range to import. Descriptors with key
origin information imported through <code class="language-text highlighter-rouge">importmulti</code> will have their key
origin information stored in the wallet for use with creating PSBTs.
More information about descriptors can be found
<a href="https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md">here</a>.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">listunspent</code> has been modified so that it also returns
<code class="language-text highlighter-rouge">witnessScript</code>, the witness script in the case of a P2WSH or
P2SH-P2WSH output.</p>
    </li>
    <li><code class="language-text highlighter-rouge">createwallet</code> now has an optional <code class="language-text highlighter-rouge">blank</code> argument that can be used
to create a blank wallet. Blank wallets do not have any keys or HD
seed.  They cannot be opened in software older than 0.18. Once a blank
wallet has a HD seed set (by using <code class="language-text highlighter-rouge">sethdseed</code>) or private keys,
scripts, addresses, and other watch only things have been imported,
the wallet is no longer blank and can be opened in 0.17.x. Encrypting
a blank wallet will also set a HD seed for it.</li>
  </ul>

  <h2 id="deprecated-or-removed-rpcs">Deprecated or removed RPCs</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">signrawtransaction</code> is removed after being deprecated and hidden
behind a special configuration option in version 0.17.0.</p>
    </li>
    <li>
      <p>The ‘account’ API is removed after being deprecated in v0.17.  The
‘label’ API was introduced in v0.17 as a replacement for accounts.
See the <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.17.0.md#label-and-account-apis-for-wallet">release notes from
v0.17</a>
for a full description of the changes from the ‘account’ API to the
‘label’ API.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">addwitnessaddress</code> is removed after being deprecated in version
0.16.0.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">generate</code> is deprecated and will be fully removed in a subsequent
major version.  This RPC is only used for testing, but its
implementation reached across multiple subsystems (wallet and mining),
so it is being deprecated to simplify the wallet-node interface.
Projects that are using <code class="language-text highlighter-rouge">generate</code> for testing purposes should
transition to using the <code class="language-text highlighter-rouge">generatetoaddress</code> RPC, which does not
require or use the wallet component. Calling <code class="language-text highlighter-rouge">generatetoaddress</code> with
an address returned by the <code class="language-text highlighter-rouge">getnewaddress</code> RPC gives the same
functionality as the old <code class="language-text highlighter-rouge">generate</code> RPC.  To continue using <code class="language-text highlighter-rouge">generate</code>
in this version, restart bitcoind with the <code class="language-text highlighter-rouge">-deprecatedrpc=generate</code>
configuration option.</p>
    </li>
    <li>
      <p>Be reminded that parts of the <code class="language-text highlighter-rouge">validateaddress</code> command have been
deprecated and moved to <code class="language-text highlighter-rouge">getaddressinfo</code>. The following deprecated
fields have moved to <code class="language-text highlighter-rouge">getaddressinfo</code>: <code class="language-text highlighter-rouge">ismine</code>, <code class="language-text highlighter-rouge">iswatchonly</code>,
<code class="language-text highlighter-rouge">script</code>, <code class="language-text highlighter-rouge">hex</code>, <code class="language-text highlighter-rouge">pubkeys</code>, <code class="language-text highlighter-rouge">sigsrequired</code>, <code class="language-text highlighter-rouge">pubkey</code>, <code class="language-text highlighter-rouge">embedded</code>,
<code class="language-text highlighter-rouge">iscompressed</code>, <code class="language-text highlighter-rouge">label</code>, <code class="language-text highlighter-rouge">timestamp</code>, <code class="language-text highlighter-rouge">hdkeypath</code>, <code class="language-text highlighter-rouge">hdmasterkeyid</code>.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">addresses</code> field has been removed from the <code class="language-text highlighter-rouge">validateaddress</code>
and <code class="language-text highlighter-rouge">getaddressinfo</code> RPC methods.  This field was confusing since
it referred to public keys using their P2PKH address.  Clients
should use the <code class="language-text highlighter-rouge">embedded.address</code> field for P2SH or P2WSH wrapped
addresses, and <code class="language-text highlighter-rouge">pubkeys</code> for inspecting multisig participants.</p>
    </li>
  </ul>

  <h2 id="rest-changes">REST changes</h2>

  <ul>
    <li>A new <code class="language-text highlighter-rouge">/rest/blockhashbyheight/</code> endpoint is added for fetching the
hash of the block in the current best blockchain based on its height
(how many blocks it is after the Genesis Block).</li>
  </ul>

  <h2 id="graphical-user-interface-gui">Graphical User Interface (GUI)</h2>

  <ul>
    <li>
      <p>A new Window menu is added alongside the existing File, Settings, and
Help menus.  Several items from the other menus that opened new
windows have been moved to this new Window menu.</p>
    </li>
    <li>
      <p>In the Send tab, the checkbox for “pay only the required fee” has been
removed.  Instead, the user can simply decrease the value in the
Custom Feerate field all the way down to the node’s configured minimum
relay fee.</p>
    </li>
    <li>
      <p>In the Overview tab, the watch-only balance will be the only balance
shown if the wallet was created using the <code class="language-text highlighter-rouge">createwallet</code> RPC and the
<code class="language-text highlighter-rouge">disable_private_keys</code> parameter was set to true.</p>
    </li>
    <li>
      <p>The launch-on-startup option is no longer available on macOS if
compiled with macosx min version greater than 10.11 (use
CXXFLAGS=”-mmacosx-version-min=10.11”
CFLAGS=”-mmacosx-version-min=10.11” for setting the deployment sdk
version)</p>
    </li>
  </ul>

  <h2 id="tools">Tools</h2>

  <ul>
    <li>A new <code class="language-text highlighter-rouge">bitcoin-wallet</code> tool is now distributed alongside Bitcoin
Core’s other executables.  Without needing to use any RPCs, this tool
can currently create a new wallet file or display some basic
information about an existing wallet, such as whether the wallet is
encrypted, whether it uses an HD seed, how many transactions it
contains, and how many address book entries it has.</li>
  </ul>

  <h1 id="planned-changes">Planned changes</h1>

  <p>This section describes planned changes to Bitcoin Core that may affect
other Bitcoin software and services.</p>

  <ul>
    <li>Since version 0.16.0, Bitcoin Core’s built-in wallet has defaulted to
generating P2SH-wrapped segwit addresses when users want to receive
payments. These addresses are backwards compatible with all
widely-used software.  Starting with Bitcoin Core 0.20 (expected about
a year after 0.18), Bitcoin Core will default to native segwit
addresses (bech32) that provide additional fee savings and other
benefits. Currently, many wallets and services already support sending
to bech32 addresses, and if the Bitcoin Core project sees enough
additional adoption, it will instead default to bech32 receiving
addresses in Bitcoin Core 0.19 (approximately November 2019).
P2SH-wrapped segwit addresses will continue to be provided if the user
requests them in the GUI or by RPC, and anyone who doesn’t want the
update will be able to configure their default address type.
(Similarly, pioneering users who want to change their default now may
set the <code class="language-text highlighter-rouge">addresstype=bech32</code> configuration option in any Bitcoin Core
release from 0.16.0 up.)</li>
  </ul>

  <h2 id="deprecated-p2p-messages">Deprecated P2P messages</h2>

  <ul>
    <li>BIP 61 reject messages are now deprecated. Reject messages have no use
case on the P2P network and are only logged for debugging by most
network nodes. Furthermore, they increase bandwidth and can be harmful
for privacy and security. It has been possible to disable BIP 61
messages since v0.17 with the <code class="language-text highlighter-rouge">-enablebip61=0</code> option. BIP 61 messages
will be disabled by default in a future version, before being removed
entirely.</li>
  </ul>

  <h1 id="low-level-changes">Low-level changes</h1>

  <p>This section describes RPC changes mainly useful for testing, mostly not
relevant in production. The changes are mentioned for completeness.</p>

  <h2 id="rpc">RPC</h2>

  <ul>
    <li>
      <p>The <code class="language-text highlighter-rouge">submitblock</code> RPC previously returned the reason a rejected block
was invalid the first time it processed that block, but returned a
generic “duplicate” rejection message on subsequent occasions it
processed the same block.  It now always returns the fundamental
reason for rejecting an invalid block and only returns “duplicate” for
valid blocks it has already accepted.</p>
    </li>
    <li>
      <p>A new <code class="language-text highlighter-rouge">submitheader</code> RPC allows submitting block headers independently
from their block.  This is likely only useful for testing.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">signrawtransactionwithkey</code> and <code class="language-text highlighter-rouge">signrawtransactionwithwallet</code>
RPCs have been modified so that they also optionally accept a
<code class="language-text highlighter-rouge">witnessScript</code>, the witness script in the case of a P2WSH or
P2SH-P2WSH output. This is compatible with the change to
<code class="language-text highlighter-rouge">listunspent</code>.</p>
    </li>
    <li>
      <p>For the <code class="language-text highlighter-rouge">walletprocesspsbt</code> and <code class="language-text highlighter-rouge">walletcreatefundedpsbt</code> RPCs, if the
<code class="language-text highlighter-rouge">bip32derivs</code> parameter is set to true but the key metadata for a
public key has not been updated yet, then that key will have a
derivation path as if it were just an independent key (i.e. no
derivation path and its master fingerprint is itself).</p>
    </li>
  </ul>

  <h2 id="configuration">Configuration</h2>

  <ul>
    <li>The <code class="language-text highlighter-rouge">-usehd</code> configuration option was removed in version 0.16. From
that version onwards, all new wallets created are hierarchical
deterministic wallets. This release makes specifying <code class="language-text highlighter-rouge">-usehd</code> an
invalid configuration option.</li>
  </ul>

  <h2 id="network">Network</h2>

  <ul>
    <li>This release allows peers that your node automatically disconnected
for misbehavior (e.g. sending invalid data) to reconnect to your node
if you have unused incoming connection slots.  If your slots fill up,
a misbehaving node will be disconnected to make room for nodes without
a history of problems (unless the misbehaving node helps your node in
some other way, such as by connecting to a part of the Internet from
which you don’t have many other peers).  Previously, Bitcoin Core
banned the IP addresses of misbehaving peers for a period of time
(default of 1 day); this was easily circumvented by attackers with
multiple IP addresses. If you manually ban a peer, such as by using
the <code class="language-text highlighter-rouge">setban</code> RPC, all connections from that peer will still be
rejected.</li>
  </ul>

  <h2 id="wallet">Wallet</h2>

  <ul>
    <li>
      <p>The key metadata will need to be upgraded the first time that the HD
seed is available.  For unencrypted wallets this will occur on wallet
loading.  For encrypted wallets this will occur the first time the
wallet is unlocked.</p>
    </li>
    <li>
      <p>Newly encrypted wallets will no longer require restarting the
software. Instead such wallets will be completely unloaded and
reloaded to achieve the same effect.</p>
    </li>
    <li>
      <p>A sub-project of Bitcoin Core now provides Hardware Wallet Interaction
(HWI) scripts that allow command-line users to use several popular
hardware key management devices with Bitcoin Core.  See their <a href="https://github.com/bitcoin-core/HWI#readme">project
page</a> for details.</p>
    </li>
  </ul>

  <h2 id="security">Security</h2>

  <ul>
    <li>This release changes the Random Number Generator (RNG) used from
OpenSSL to Bitcoin Core’s own implementation, although entropy
gathered by Bitcoin Core is fed out to OpenSSL and then read back in
when the program needs strong randomness. This moves Bitcoin Core a
little closer to no longer needing to depend on OpenSSL, a dependency
that has caused security issues in the past.  The new implementation
gathers entropy from multiple sources, including from hardware
supporting the rdseed CPU instruction.</li>
  </ul>

  <h2 id="changes-for-particular-platforms">Changes for particular platforms</h2>

  <ul>
    <li>On macOS, Bitcoin Core now opts out of application CPU throttling
(“app nap”) during initial blockchain download, when catching up from
over 100 blocks behind the current chain tip, or when reindexing chain
data. This helps prevent these operations from taking an excessively
long time because the operating system is attempting to conserve
power.</li>
  </ul>

  <h1 id="change-log">0.18.0 change log</h1>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#14247 Fix crash bug with duplicate inputs within a transaction (TheBlueMatt)</li>
  </ul>

  <h3 id="mining-1">Mining</h3>
  <ul>
    <li>#14811 Mining: Enforce that segwit option must be set in GBT (jnewbery)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#13310 Report progress in ReplayBlocks while rolling forward (promag)</li>
    <li>#13783 validation: Pass tx pool reference into CheckSequenceLocks (MarcoFalke)</li>
    <li>#14834 validation: Assert that pindexPrev is non-null when required (kallewoof)</li>
    <li>#14085 index: Fix for indexers skipping genesis block (jimpo)</li>
    <li>#14963 mempool, validation: Explain <code class="language-text highlighter-rouge">cs_main</code> locking semantics (MarcoFalke)</li>
    <li>#15193 Default <code class="language-text highlighter-rouge">-whitelistforcerelay</code> to off (sdaftuar)</li>
    <li>#15429 Update <code class="language-text highlighter-rouge">assumevalid</code>, <code class="language-text highlighter-rouge">minimumchainwork</code>, and <code class="language-text highlighter-rouge">getchaintxstats</code> to height 563378 (gmaxwell)</li>
    <li>#15552 Granular invalidateblock and RewindBlockIndex (MarcoFalke)</li>
    <li>#14841 Move CheckBlock() call to critical section (hebasto)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#14025 Remove dead code for nVersion=10300 (MarcoFalke)</li>
    <li>#12254 BIP 158: Compact Block Filters for Light Clients (jimpo)</li>
    <li>#14073 blockfilter: Avoid out-of-bounds script access (jimpo)</li>
    <li>#14140 Switch nPrevNodeCount to vNodesSize (pstratem)</li>
    <li>#14027 Skip stale tip checking if outbound connections are off or if reindexing (gmaxwell)</li>
    <li>#14532 Never bind <code class="language-text highlighter-rouge">INADDR_ANY</code> by default, and warn when doing so explicitly (luke-jr)</li>
    <li>#14733 Make peer timeout configurable, speed up very slow test and ensure correct code path tested (zallarak)</li>
    <li>#14336 Implement poll (pstratem)</li>
    <li>#15051 IsReachable is the inverse of IsLimited (DRY). Includes unit tests (mmachicao)</li>
    <li>#15138 Drop IsLimited in favor of IsReachable (Empact)</li>
    <li>#14605 Return of the Banman (dongcarl)</li>
    <li>#14970 Add dnsseed.emzy.de to DNS seeds (Emzy)</li>
    <li>#14929 Allow connections from misbehavior banned peers (gmaxwell)</li>
    <li>#15345 Correct comparison of addr count (dongcarl)</li>
    <li>#15201 Add missing locking annotation for vNodes. vNodes is guarded by cs_vNodes (practicalswift)</li>
    <li>#14626 Select orphan transaction uniformly for eviction (sipa)</li>
    <li>#15486 Ensure tried collisions resolve, and allow feeler connections to existing outbound netgroups (sdaftuar)</li>
  </ul>

  <h3 id="wallet-1">Wallet</h3>
  <ul>
    <li>#13962 Remove unused <code class="language-text highlighter-rouge">dummy_tx</code> variable from FillPSBT (dongcarl)</li>
    <li>#13967 Don’t report <code class="language-text highlighter-rouge">minversion</code> wallet entry as unknown (instagibbs)</li>
    <li>#13988 Add checks for settxfee reasonableness (ajtowns)</li>
    <li>#12559 Avoid locking <code class="language-text highlighter-rouge">cs_main</code> in some wallet RPC (promag)</li>
    <li>#13631 Add CMerkleTx::IsImmatureCoinBase method (Empact)</li>
    <li>#14023 Remove accounts RPCs (jnewbery)</li>
    <li>#13825 Kill accounts (jnewbery)</li>
    <li>#10605 Add AssertLockHeld assertions in CWallet::ListCoins (ryanofsky)</li>
    <li>#12490 Remove deprecated wallet rpc features from <code class="language-text highlighter-rouge">bitcoin_server</code> (jnewbery)</li>
    <li>#14138 Set <code class="language-text highlighter-rouge">encrypted_batch</code> to nullptr after delete. Avoid double free in the case of NDEBUG (practicalswift)</li>
    <li>#14168 Remove <code class="language-text highlighter-rouge">ENABLE_WALLET</code> from <code class="language-text highlighter-rouge">libbitcoin_server.a</code> (jnewbery)</li>
    <li>#12493 Reopen CDBEnv after encryption instead of shutting down (achow101)</li>
    <li>#14282 Remove <code class="language-text highlighter-rouge">-usehd</code> option (jnewbery)</li>
    <li>#14146 Remove trailing separators from <code class="language-text highlighter-rouge">-walletdir</code> arg (PierreRochard)</li>
    <li>#14291 Add ListWalletDir utility function (promag)</li>
    <li>#14468 Deprecate <code class="language-text highlighter-rouge">generate</code> RPC method (jnewbery)</li>
    <li>#11634 Add missing <code class="language-text highlighter-rouge">cs_wallet</code>/<code class="language-text highlighter-rouge">cs_KeyStore</code> locks to wallet (practicalswift)</li>
    <li>#14296 Remove <code class="language-text highlighter-rouge">addwitnessaddress</code> (jnewbery)</li>
    <li>#14451 Add BIP70 deprecation warning and allow building GUI without BIP70 support (jameshilliard)</li>
    <li>#14320 Fix duplicate fileid detection (ken2812221)</li>
    <li>#14561 Remove <code class="language-text highlighter-rouge">fs::relative</code> call and fix listwalletdir tests (promag)</li>
    <li>#14454 Add SegWit support to importmulti (MeshCollider)</li>
    <li>#14410 rpcwallet: <code class="language-text highlighter-rouge">ischange</code> field for <code class="language-text highlighter-rouge">getaddressinfo</code> RPC (mrwhythat)</li>
    <li>#14350 Add WalletLocation class (promag)</li>
    <li>#14689 Require a public key to be retrieved when signing a P2PKH input (achow101)</li>
    <li>#14478 Show error to user when corrupt wallet unlock fails (MeshCollider)</li>
    <li>#14411 Restore ability to list incoming transactions by label (ryanofsky)</li>
    <li>#14552 Detect duplicate wallet by comparing the db filename (ken2812221)</li>
    <li>#14678 Remove redundant KeyOriginInfo access, already done in CreateSig (instagibbs)</li>
    <li>#14477 Add ability to convert solvability info to descriptor (sipa)</li>
    <li>#14380 Fix assert crash when specified change output spend size is unknown (instagibbs)</li>
    <li>#14760 Log env path in <code class="language-text highlighter-rouge">BerkeleyEnvironment::Flush</code> (promag)</li>
    <li>#14646 Add expansion cache functions to descriptors (unused for now) (sipa)</li>
    <li>#13076 Fix ScanForWalletTransactions to return an enum indicating scan result: <code class="language-text highlighter-rouge">success</code> / <code class="language-text highlighter-rouge">failure</code> / <code class="language-text highlighter-rouge">user_abort</code> (Empact)</li>
    <li>#14821 Replace CAffectedKeysVisitor with descriptor based logic (sipa)</li>
    <li>#14957 Initialize <code class="language-text highlighter-rouge">stop_block</code> in CWallet::ScanForWalletTransactions (Empact)</li>
    <li>#14565 Overhaul <code class="language-text highlighter-rouge">importmulti</code> logic (sipa)</li>
    <li>#15039 Avoid leaking nLockTime fingerprint when anti-fee-sniping (MarcoFalke)</li>
    <li>#14268 Introduce SafeDbt to handle Dbt with free or <code class="language-text highlighter-rouge">memory_cleanse</code> raii-style (Empact)</li>
    <li>#14711 Remove uses of chainActive and mapBlockIndex in wallet code (ryanofsky)</li>
    <li>#15279 Clarify rescanblockchain doc (MarcoFalke)</li>
    <li>#15292 Remove <code class="language-text highlighter-rouge">boost::optional</code>-related false positive -Wmaybe-uninitialized warnings on GCC compiler (hebasto)</li>
    <li>#13926 [Tools] bitcoin-wallet - a tool for creating and managing wallets offline (jnewbery)</li>
    <li>#11911 Free BerkeleyEnvironment instances when not in use (ryanofsky)</li>
    <li>#15235 Do not import private keys to wallets with private keys disabled (achow101)</li>
    <li>#15263 Descriptor expansions only need pubkey entries for PKH/WPKH (sipa)</li>
    <li>#15322 Add missing <code class="language-text highlighter-rouge">cs_db</code> lock (promag)</li>
    <li>#15297 Releases dangling files on <code class="language-text highlighter-rouge">BerkeleyEnvironment::Close</code> (promag)</li>
    <li>#14491 Allow descriptor imports with importmulti (MeshCollider)</li>
    <li>#15365 Add lock annotation for mapAddressBook (MarcoFalke)</li>
    <li>#15226 Allow creating blank (empty) wallets (alternative) (achow101)</li>
    <li>#15390 [wallet-tool] Close bdb when flushing wallet (jnewbery)</li>
    <li>#15334 Log absolute paths for the wallets (hebasto)</li>
    <li>#14978 Factor out PSBT utilities from RPCs for use in GUI code; related refactoring (gwillen)</li>
    <li>#14481 Add P2SH-P2WSH support to listunspent RPC (MeshCollider)</li>
    <li>#14021 Import key origin data through descriptors in importmulti (achow101)</li>
    <li>#14075 Import watch only pubkeys to the keypool if private keys are disabled (achow101)</li>
    <li>#15368 Descriptor checksums (sipa)</li>
    <li>#15433 Use a single wallet batch for <code class="language-text highlighter-rouge">UpgradeKeyMetadata</code> (jonasschnelli)</li>
    <li>#15408 Remove unused <code class="language-text highlighter-rouge">TransactionError</code> constants (MarcoFalke)</li>
    <li>#15583 Log and ignore errors in ListWalletDir and IsBerkeleyBtree (promag)</li>
    <li>#14195 Pass privkey export DER compression flag correctly (fingera)</li>
    <li>#15299 Fix assertion in <code class="language-text highlighter-rouge">CKey::SignCompact</code> (promag)</li>
    <li>#14437 Start to separate wallet from node (ryanofsky)</li>
    <li>#15749 Fix: importmulti only imports origin info for PKH outputs (sipa)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#12842 Prevent concurrent <code class="language-text highlighter-rouge">savemempool</code> (promag)</li>
    <li>#13987 Report <code class="language-text highlighter-rouge">minfeefilter</code> value in <code class="language-text highlighter-rouge">getpeerinfo</code> RPC (ajtowns)</li>
    <li>#13891 Remove getinfo deprecation warning (jnewbery)</li>
    <li>#13399 Add <code class="language-text highlighter-rouge">submitheader</code> (MarcoFalke)</li>
    <li>#12676 Show <code class="language-text highlighter-rouge">bip125-replaceable</code> flag, when retrieving mempool entries (dexX7)</li>
    <li>#13723 PSBT key path cleanups (sipa)</li>
    <li>#14008 Preserve a format of RPC command definitions (kostyantyn)</li>
    <li>#9332 Let wallet <code class="language-text highlighter-rouge">importmulti</code> RPC accept labels for standard scriptPubKeys (ryanofsky)</li>
    <li>#13983 Return more specific reject reason for submitblock (MarcoFalke)</li>
    <li>#13152 Add getnodeaddresses RPC command (chris-belcher)</li>
    <li>#14298 rest: Improve performance for JSON calls (alecalve)</li>
    <li>#14297 Remove warning for removed estimatefee RPC (jnewbery)</li>
    <li>#14373 Consistency fixes for RPC descriptions (ch4ot1c)</li>
    <li>#14150 Add key origin support to descriptors (sipa)</li>
    <li>#14518 Always throw in getblockstats if <code class="language-text highlighter-rouge">-txindex</code> is required (promag)</li>
    <li>#14060 ZMQ: add options to configure outbound message high water mark, aka SNDHWM (mruddy)</li>
    <li>#13381 Add possibility to preserve labels on importprivkey (marcoagner)</li>
    <li>#14530 Use <code class="language-text highlighter-rouge">RPCHelpMan</code> to generate RPC doc strings (MarcoFalke)</li>
    <li>#14720 Correctly name RPC arguments (MarcoFalke)</li>
    <li>#14726 Use <code class="language-text highlighter-rouge">RPCHelpMan</code> for all RPCs (MarcoFalke)</li>
    <li>#14796 Pass argument descriptions to <code class="language-text highlighter-rouge">RPCHelpMan</code> (MarcoFalke)</li>
    <li>#14670 http: Fix HTTP server shutdown (promag)</li>
    <li>#14885 Assert that named arguments are unique in <code class="language-text highlighter-rouge">RPCHelpMan</code> (promag)</li>
    <li>#14877 Document default values for optional arguments (MarcoFalke)</li>
    <li>#14875 RPCHelpMan: Support required arguments after optional ones (MarcoFalke)</li>
    <li>#14993 Fix data race (UB) in InterruptRPC() (practicalswift)</li>
    <li>#14653 rpcwallet: Add missing transaction categories to RPC helptexts (andrewtoth)</li>
    <li>#14981 Clarify RPC <code class="language-text highlighter-rouge">getrawtransaction</code>’s time help text (benthecarman)</li>
    <li>#12151 Remove <code class="language-text highlighter-rouge">cs_main</code> lock from blockToJSON and blockheaderToJSON (promag)</li>
    <li>#15078 Document <code class="language-text highlighter-rouge">bytessent_per_msg</code> and <code class="language-text highlighter-rouge">bytesrecv_per_msg</code> (MarcoFalke)</li>
    <li>#15057 Correct <code class="language-text highlighter-rouge">reconsiderblock </code>help text, add test (MarcoFalke)</li>
    <li>#12153 Avoid permanent <code class="language-text highlighter-rouge">cs_main</code> lock in <code class="language-text highlighter-rouge">getblockheader</code> (promag)</li>
    <li>#14982 Add <code class="language-text highlighter-rouge">getrpcinfo</code> command (promag)</li>
    <li>#15122 Expand help text for <code class="language-text highlighter-rouge">importmulti</code> changes (jnewbery)</li>
    <li>#15186 remove duplicate solvable field from <code class="language-text highlighter-rouge">getaddressinfo</code> (fanquake)</li>
    <li>#15209 zmq: log outbound message high water mark when reusing socket (fanquake)</li>
    <li>#15177 rest: Improve tests and documention of /headers and /block (promag)</li>
    <li>#14353 rest: Add blockhash call, fetch blockhash by height (jonasschnelli)</li>
    <li>#15248 Compile on GCC4.8 (MarcoFalke)</li>
    <li>#14987 RPCHelpMan: Pass through Result and Examples (MarcoFalke)</li>
    <li>#15159 Remove lookup to UTXO set from GetTransaction (amitiuttarwar)</li>
    <li>#15245 remove deprecated mentions of signrawtransaction from fundraw help (instagibbs)</li>
    <li>#14667 Add <code class="language-text highlighter-rouge">deriveaddresses</code> RPC util method (Sjors)</li>
    <li>#15357 Don’t ignore <code class="language-text highlighter-rouge">-maxtxfee</code> when wallet is disabled (JBaczuk)</li>
    <li>#15337 Fix for segfault if combinepsbt called with empty inputs (benthecarman)</li>
    <li>#14918 RPCHelpMan: Check default values are given at compile-time (MarcoFalke)</li>
    <li>#15383 mining: Omit uninitialized currentblockweight, currentblocktx (MarcoFalke)</li>
    <li>#13932 Additional utility RPCs for PSBT (achow101)</li>
    <li>#15401 Actually throw help when passed invalid number of params (MarcoFalke)</li>
    <li>#15471 rpc/gui: Remove ‘Unknown block versions being mined’ warning (laanwj)</li>
    <li>#15497 Consistent range arguments in scantxoutset/importmulti/deriveaddresses (sipa)</li>
    <li>#15510 deriveaddresses: add range to CRPCConvertParam (Sjors)</li>
    <li>#15582 Fix overflow bug in analyzepsbt fee: CAmount instead of int (sipa)</li>
    <li>#13424 Consistently validate txid / blockhash length and encoding in rpc calls (Empact)</li>
    <li>#15750 Remove the addresses field from the getaddressinfo return object (jnewbery)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#13634 Compile <code class="language-text highlighter-rouge">boost::signals2</code> only once (MarcoFalke)</li>
    <li>#13248 Make proxy icon from statusbar clickable (mess110)</li>
    <li>#12818 TransactionView: highlight replacement tx after fee bump (Sjors)</li>
    <li>#13529 Use new Qt5 connect syntax (promag)</li>
    <li>#14162 Also log and print messages or questions like bitcoind (MarcoFalke)</li>
    <li>#14385 Avoid system harfbuzz and bz2 (theuni)</li>
    <li>#14450 Fix QCompleter popup regression (hebasto)</li>
    <li>#14177 Set C locale for amountWidget (hebasto)</li>
    <li>#14374 Add <code class="language-text highlighter-rouge">Blocksdir</code> to Debug window (hebasto)</li>
    <li>#14554 Remove unused <code class="language-text highlighter-rouge">adjustedTime</code> parameter (hebasto)</li>
    <li>#14228 Enable system tray icon by default if available (hebasto)</li>
    <li>#14608 Remove the “Pay only required fee…” checkbox (hebasto)</li>
    <li>#14521 qt, docs: Fix <code class="language-text highlighter-rouge">bitcoin-qt -version</code> output formatting (hebasto)</li>
    <li>#13966 When private key is disabled, only show watch-only balance (ken2812221)</li>
    <li>#14828 Remove hidden columns in coin control dialog (promag)</li>
    <li>#14783 Fix <code class="language-text highlighter-rouge">boost::signals2::no_slots_error</code> in early calls to InitWarning (promag)</li>
    <li>#14854 Cleanup SplashScreen class (hebasto)</li>
    <li>#14801 Use window() instead of obsolete topLevelWidget() (hebasto)</li>
    <li>#14573 Add Window menu (promag)</li>
    <li>#14979 Restore &lt; Qt5.6 compatibility for addAction (jonasschnelli)</li>
    <li>#14975 Refactoring with QString::toNSString() (hebasto)</li>
    <li>#15000 Fix broken notificator on GNOME (hebasto)</li>
    <li>#14375 Correct misleading “overridden options” label (hebasto)</li>
    <li>#15007 Notificator class refactoring (hebasto)</li>
    <li>#14784 Use <code class="language-text highlighter-rouge">WalletModel*</code> instead of the wallet name as map key (promag)</li>
    <li>#11625 Add BitcoinApplication &amp; RPCConsole tests (ryanofsky)</li>
    <li>#14517 Fix start with the <code class="language-text highlighter-rouge">-min</code> option (hebasto)</li>
    <li>#13216 implements concept for different disk sizes on intro (marcoagner)</li>
    <li>#15114 Replace remaining 0 with nullptr (Empact)</li>
    <li>#14594 Fix minimized window bug on Linux (hebasto)</li>
    <li>#14556 Fix confirmed transaction labeled “open” (#13299) (hebasto)</li>
    <li>#15149 Show current wallet name in window title (promag)</li>
    <li>#15136 “Peers” tab overhaul (hebasto)</li>
    <li>#14250 Remove redundant stopThread() and stopExecutor() signals (hebasto)</li>
    <li>#15040 Add workaround for QProgressDialog bug on macOS (hebasto)</li>
    <li>#15101 Add WalletController (promag)</li>
    <li>#15178 Improve “help-console” message (hebasto)</li>
    <li>#15210 Fix window title update (promag)</li>
    <li>#15167 Fix wallet selector size adjustment (hebasto)</li>
    <li>#15208 Remove macOS launch-at-startup when compiled with &gt; macOS 10.11, fix memory mismanagement (jonasschnelli)</li>
    <li>#15163 Correct units for “-dbcache” and “-prune” (hebasto)</li>
    <li>#15225 Change the receive button to respond to keypool state changing (achow101)</li>
    <li>#15280 Fix shutdown order (promag)</li>
    <li>#15203 Fix issue #9683 “gui, wallet: random abort (segmentation fault) (dooglus)</li>
    <li>#15091 Fix model overlay header sync (jonasschnelli)</li>
    <li>#15153 Add Open Wallet menu (promag)</li>
    <li>#15183 Fix <code class="language-text highlighter-rouge">m_assumed_blockchain_size</code> variable value (marcoagner)</li>
    <li>#15063 If BIP70 is disabled, attempt to fall back to BIP21 parsing (luke-jr)</li>
    <li>#15195 Add Close Wallet action (promag)</li>
    <li>#15462 Fix async open wallet call order (promag)</li>
    <li>#15801 Bugfix: GUI: Options: Initialise prune setting range before loading current value, and remove upper bound limit (luke-jr)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#13955 gitian: Bump descriptors for (0.)18 (fanquake)</li>
    <li>#13899 Enable -Wredundant-decls where available. Remove redundant redeclarations (practicalswift)</li>
    <li>#13665 Add RISC-V support to gitian (ken2812221)</li>
    <li>#14062 Generate MSVC project files via python script (ken2812221)</li>
    <li>#14037 Add README.md to linux release tarballs (hebasto)</li>
    <li>#14183 Remove unused Qt 4 dependencies (ken2812221)</li>
    <li>#14127 Avoid getifaddrs when unavailable (greenaddress)</li>
    <li>#14184 Scripts and tools: increased timeout downloading (cisba)</li>
    <li>#14204 Move <code class="language-text highlighter-rouge">interfaces/*</code> to <code class="language-text highlighter-rouge">libbitcoin_server</code> (laanwj)</li>
    <li>#14208 Actually remove <code class="language-text highlighter-rouge">ENABLE_WALLET</code> (jnewbery)</li>
    <li>#14212 Remove libssl from LDADD unless GUI (MarcoFalke)</li>
    <li>#13578 Upgrade zeromq to 4.2.5 and avoid deprecated zeromq API functions (mruddy)</li>
    <li>#14281 lcov: filter /usr/lib/ from coverage reports (MarcoFalke)</li>
    <li>#14325 gitian: Use versioned unsigned tarballs instead of generically named ones (achow101)</li>
    <li>#14253 During ‘make clean’, remove some files that are currently missed (murrayn)</li>
    <li>#14455 Unbreak <code class="language-text highlighter-rouge">make clean</code> (jamesob)</li>
    <li>#14495 Warn (don’t fail!) on spelling errors (practicalswift)</li>
    <li>#14496 Pin to specific versions of Python packages we install from PyPI in Travis (practicalswift)</li>
    <li>#14568 Fix Qt link order for Windows build (ken2812221)</li>
    <li>#14252 Run functional tests and benchmarks under the undefined behaviour sanitizer (UBSan) (practicalswift)</li>
    <li>#14612 Include full version number in released file names (achow101)</li>
    <li>#14840 Remove duplicate libconsensus linking in test make (AmirAbrams)</li>
    <li>#14564 Adjust configure so that only BIP70 is disabled when protobuf is missing instead of the GUI (jameshilliard)</li>
    <li>#14883 Add <code class="language-text highlighter-rouge">--retry 5</code> to curl opts in <code class="language-text highlighter-rouge">install_db4.sh</code> (qubenix)</li>
    <li>#14701 Add <code class="language-text highlighter-rouge">CLIENT_VERSION_BUILD</code> to CFBundleGetInfoString (fanquake)</li>
    <li>#14849 Qt 5.9.7 (fanquake)</li>
    <li>#15020 Add names to Travis jobs (gkrizek)</li>
    <li>#15047 Allow to configure –with-sanitizers=fuzzer (MarcoFalke)</li>
    <li>#15154 Configure: bitcoin-tx doesn’t need libevent, so don’t pull it in (luke-jr)</li>
    <li>#15175 Drop macports support (Empact)</li>
    <li>#15308 Restore compatibility with older boost (Empact)</li>
    <li>#15407 msvc: Fix silent merge conflict between #13926 and #14372 part II (ken2812221)</li>
    <li>#15388 Makefile.am: add rule for src/bitcoin-wallet (Sjors)</li>
    <li>#15393 Bump minimum Qt version to 5.5.1 (Sjors)</li>
    <li>#15285 Prefer Python 3.4 even if newer versions are present on the system (Sjors)</li>
    <li>#15398 msvc: Add rapidcheck property tests (ken2812221)</li>
    <li>#15431 msvc: scripted-diff: Remove NDEBUG pre-define in project file (ken2812221)</li>
    <li>#15549 gitian: Improve error handling (laanwj)</li>
    <li>#15548 use full version string in setup.exe (MarcoFalke)</li>
    <li>#11526 Visual Studio build configuration for Bitcoin Core (sipsorcery)</li>
    <li>#15110 build_msvc: Fix the build problem in <code class="language-text highlighter-rouge">libbitcoin_server</code> (Mr-Leshiy)</li>
    <li>#14372 msvc: build secp256k1 and leveldb locally (ken2812221)</li>
    <li>#15325 msvc: Fix silent merge conflict between #13926 and #14372 (ken2812221)</li>
    <li>#15391 Add compile time verification of assumptions we’re currently making implicitly/tacitly (practicalswift)</li>
    <li>#15503 msvc: Use a single file to specify the include path (ken2812221)</li>
    <li>#13765 contrib: Add gitian build support for github pull request (ken2812221)</li>
    <li>#15809 gitignore: plist and dat (jamesob)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#15405 appveyor: Clean cache when build configuration changes (Sjors)</li>
    <li>#13953 Fix deprecation in bitcoin-util-test.py (isghe)</li>
    <li>#13963 Replace usage of tostring() with tobytes() (dongcarl)</li>
    <li>#13964 ci: Add appveyor ci (ken2812221)</li>
    <li>#13997 appveyor: fetch the latest port data (ken2812221)</li>
    <li>#13707 Add usage note to check-rpc-mappings.py (masonicboom)</li>
    <li>#14036 travis: Run unit tests –with-sanitizers=undefined (MarcoFalke)</li>
    <li>#13861 Add testing of <code class="language-text highlighter-rouge">value_ret</code> for SelectCoinsBnB (Empact)</li>
    <li>#13863 travis: Move script sections to files in <code class="language-text highlighter-rouge">.travis/</code> subject to shellcheck (scravy)</li>
    <li>#14081 travis: Fix missing differentiation between unit and functional tests (scravy)</li>
    <li>#14042 travis: Add cxxflags=-wno-psabi at arm job (ken2812221)</li>
    <li>#14051 Make <code class="language-text highlighter-rouge">combine_logs.py</code> handle multi-line logs (jnewbery)</li>
    <li>#14093 Fix accidental trunction from int to bool (practicalswift)</li>
    <li>#14108 Add missing locking annotations and locks (<code class="language-text highlighter-rouge">g_cs_orphans</code>) (practicalswift)</li>
    <li>#14088 Don’t assert(…) with side effects (practicalswift)</li>
    <li>#14086 appveyor: Use clcache to speed up build (ken2812221)</li>
    <li>#13954 Warn (don’t fail!) on spelling errors. Fix typos reported by codespell (practicalswift)</li>
    <li>#12775 Integration of property based testing into Bitcoin Core (Christewart)</li>
    <li>#14119 Read reject reasons from debug log, not P2P messages (MarcoFalke)</li>
    <li>#14189 Fix silent merge conflict in <code class="language-text highlighter-rouge">wallet_importmulti</code> (MarcoFalke)</li>
    <li>#13419 Speed up <code class="language-text highlighter-rouge">knapsack_solver_test</code> by not recreating wallet 100 times (lucash-dev)</li>
    <li>#14199 Remove redundant BIP174 test from <code class="language-text highlighter-rouge">rpc_psbt.json</code> (araspitzu)</li>
    <li>#14179 Fixups to “Run all tests even if wallet is not compiled” (MarcoFalke)</li>
    <li>#14225 Reorder tests and move most of extended tests up to normal tests (ken2812221)</li>
    <li>#14236 <code class="language-text highlighter-rouge">generate</code> –&gt; <code class="language-text highlighter-rouge">generatetoaddress</code> change to allow tests run without wallet (sanket1729)</li>
    <li>#14287 Use MakeUnique to construct objects owned by <code class="language-text highlighter-rouge">unique_ptrs</code> (practicalswift)</li>
    <li>#14007 Run functional test on Windows and enable it on Appveyor (ken2812221)</li>
    <li>#14275 Write the notification message to different files to avoid race condition in <code class="language-text highlighter-rouge">feature_notifications.py</code> (ken2812221)</li>
    <li>#14306 appveyor: Move AppVeyor YAML to dot-file-style YAML (MitchellCash)</li>
    <li>#14305 Enforce critical class instance attributes in functional tests, fix segwit test specificity (JustinTArthur)</li>
    <li>#12246 Bugfix: Only run bitcoin-tx tests when bitcoin-tx is enabled (luke-jr)</li>
    <li>#14316 Exclude all tests with difference parameters in <code class="language-text highlighter-rouge">--exclude</code> list (ken2812221)</li>
    <li>#14381 Add missing call to <code class="language-text highlighter-rouge">skip_if_no_cli()</code> (practicalswift)</li>
    <li>#14389 travis: Set codespell version to avoid breakage (MarcoFalke)</li>
    <li>#14398 Don’t access out of bounds array index: array[sizeof(array)] (Empact)</li>
    <li>#14419 Remove <code class="language-text highlighter-rouge">rpc_zmq.py</code> (jnewbery)</li>
    <li>#14241 appveyor: Script improvement (ken2812221)</li>
    <li>#14413 Allow closed RPC handler in <code class="language-text highlighter-rouge">assert_start_raises_init_error</code> (ken2812221)</li>
    <li>#14324 Run more tests with wallet disabled (MarcoFalke)</li>
    <li>#13649 Allow arguments to be forwarded to flake8 in lint-python.sh (jamesob)</li>
    <li>#14465 Stop node before removing the notification file (ken2812221)</li>
    <li>#14460 Improve ‘CAmount’ tests (hebasto)</li>
    <li>#14456 forward timeouts properly in <code class="language-text highlighter-rouge">send_blocks_and_test</code> (jamesob)</li>
    <li>#14527 Revert “Make qt wallet test compatible with qt4” (MarcoFalke)</li>
    <li>#14504 Show the progress of functional tests (isghe)</li>
    <li>#14559 appveyor: Enable multiwallet tests (ken2812221)</li>
    <li>#13515 travis: Enable qt for all jobs (ken2812221)</li>
    <li>#14571 Test that nodes respond to <code class="language-text highlighter-rouge">getdata</code> with <code class="language-text highlighter-rouge">notfound</code> (MarcoFalke)</li>
    <li>#14569 Print dots by default in functional tests (ken2812221)</li>
    <li>#14631 Move deterministic address import to <code class="language-text highlighter-rouge">setup_nodes</code> (jnewbery)</li>
    <li>#14630 test: Remove travis specific code (MarcoFalke)</li>
    <li>#14528 travis: Compile once on xenial (MarcoFalke)</li>
    <li>#14092 Dry run <code class="language-text highlighter-rouge">bench_bitcoin</code> as part <code class="language-text highlighter-rouge">make check</code> to allow for quick identification of assertion/sanitizer failures in benchmarking code (practicalswift)</li>
    <li>#14664 <code class="language-text highlighter-rouge">example_test.py</code>: fixup coinbase height argument, derive number clearly (instagibbs)</li>
    <li>#14522 Add invalid P2P message tests (jamesob)</li>
    <li>#14619 Fix value display name in <code class="language-text highlighter-rouge">test_runner</code> help text (merland)</li>
    <li>#14672 Send fewer spam messages in <code class="language-text highlighter-rouge">p2p_invalid_messages</code> (jamesob)</li>
    <li>#14673 travis: Fail the ubsan travis build in case of newly introduced ubsan errors (practicalswift)</li>
    <li>#14665 appveyor: Script improvement part II (ken2812221)</li>
    <li>#14365 Add Python dead code linter (vulture) to Travis (practicalswift)</li>
    <li>#14693 <code class="language-text highlighter-rouge">test_node</code>: <code class="language-text highlighter-rouge">get_mem_rss</code> fixups (MarcoFalke)</li>
    <li>#14714 util.h: explicitly include required QString header (1Il1)</li>
    <li>#14705 travis: Avoid timeout on verify-commits check (MarcoFalke)</li>
    <li>#14770 travis: Do not specify sudo in <code class="language-text highlighter-rouge">.travis</code> (scravy)</li>
    <li>#14719 Check specific reject reasons in <code class="language-text highlighter-rouge">feature_block</code> (MarcoFalke)</li>
    <li>#14771 Add <code class="language-text highlighter-rouge">BOOST_REQUIRE</code> to getters returning optional (MarcoFalke)</li>
    <li>#14777 Add regtest for JSON-RPC batch calls (domob1812)</li>
    <li>#14764 travis: Run thread sanitizer on unit tests (MarcoFalke)</li>
    <li>#14400 Add Benchmark to test input de-duplication worst case (JeremyRubin)</li>
    <li>#14812 Fix <code class="language-text highlighter-rouge">p2p_invalid_messages</code> on macOS (jamesob)</li>
    <li>#14813 Add <code class="language-text highlighter-rouge">wallet_encryption</code> error tests (MarcoFalke)</li>
    <li>#14820 Fix <code class="language-text highlighter-rouge">descriptor_tests</code> not checking ToString output of public descriptors (ryanofsky)</li>
    <li>#14794 Add AddressSanitizer (ASan) Travis build (practicalswift)</li>
    <li>#14819 Bugfix: <code class="language-text highlighter-rouge">test/functional/mempool_accept</code>: Ensure oversize transaction is actually oversize (luke-jr)</li>
    <li>#14822 bench: Destroy wallet txs instead of leaking their memory (MarcoFalke)</li>
    <li>#14683 Better <code class="language-text highlighter-rouge">combine_logs.py</code> behavior (jamesob)</li>
    <li>#14231 travis: Save cache even when build or test fail (ken2812221)</li>
    <li>#14816 Add CScriptNum decode python implementation in functional suite (instagibbs)</li>
    <li>#14861 Modify <code class="language-text highlighter-rouge">rpc_bind</code> to conform to #14532 behaviour (dongcarl)</li>
    <li>#14864 Run scripted-diff in subshell (dongcarl)</li>
    <li>#14795 Allow <code class="language-text highlighter-rouge">test_runner</code> command line to receive parameters for each test (marcoagner)</li>
    <li>#14788 Possible fix the permission error when the tests open the cookie file (ken2812221)</li>
    <li>#14857 <code class="language-text highlighter-rouge">wallet_keypool_topup.py</code>: Test for all keypool address types (instagibbs)</li>
    <li>#14886 Refactor importmulti tests (jnewbery)</li>
    <li>#14908 Removed implicit CTransaction constructor calls from tests and benchmarks (lucash-dev)</li>
    <li>#14903 Handle ImportError explicitly, improve comparisons against None (daniel-s-ingram)</li>
    <li>#14884 travis: Enforce python 3.4 support through linter (Sjors)</li>
    <li>#14940 Add test for truncated pushdata script (MarcoFalke)</li>
    <li>#14926 consensus: Check that final transactions are valid (MarcoFalke)</li>
    <li>#14937 travis: Fix travis would always be green even if it fail (ken2812221)</li>
    <li>#14953 Make <code class="language-text highlighter-rouge">g_insecure_rand_ctx</code> <code class="language-text highlighter-rouge">thread_local</code> (MarcoFalke)</li>
    <li>#14931 mempool: Verify prioritization is dumped correctly (MarcoFalke)</li>
    <li>#14935 Test for expected return values when calling functions returning a success code (practicalswift)</li>
    <li>#14969 Fix <code class="language-text highlighter-rouge">cuckoocache_tests</code> TSAN failure introduced in 14935 (practicalswift)</li>
    <li>#14964 Fix race in <code class="language-text highlighter-rouge">mempool_accept</code> (MarcoFalke)</li>
    <li>#14829 travis: Enable functional tests in the threadsanitizer (tsan) build job (practicalswift)</li>
    <li>#14985 Remove <code class="language-text highlighter-rouge">thread_local</code> from <code class="language-text highlighter-rouge">test_bitcoin</code> (MarcoFalke)</li>
    <li>#15005 Bump timeout to run tests in travis thread sanitizer (MarcoFalke)</li>
    <li>#15013 Avoid race in <code class="language-text highlighter-rouge">p2p_timeouts</code> (MarcoFalke)</li>
    <li>#14960 lint/format-strings: Correctly exclude escaped percent symbols (luke-jr)</li>
    <li>#14930 pruning: Check that verifychain can be called when pruned (MarcoFalke)</li>
    <li>#15022 Upgrade Travis OS to Xenial (gkrizek)</li>
    <li>#14738 Fix running <code class="language-text highlighter-rouge">wallet_listtransactions.py</code> individually through <code class="language-text highlighter-rouge">test_runner.py</code> (kristapsk)</li>
    <li>#15026 Rename <code class="language-text highlighter-rouge">rpc_timewait</code> to <code class="language-text highlighter-rouge">rpc_timeout</code> (MarcoFalke)</li>
    <li>#15069 Fix <code class="language-text highlighter-rouge">rpc_net.py</code> <code class="language-text highlighter-rouge">pong</code> race condition (Empact)</li>
    <li>#14790 Allow running <code class="language-text highlighter-rouge">rpc_bind.py</code> –nonloopback test without IPv6 (kristapsk)</li>
    <li>#14457 add invalid tx templates for use in functional tests (jamesob)</li>
    <li>#14855 Correct ineffectual WithOrVersion from <code class="language-text highlighter-rouge">transactions_tests</code> (Empact)</li>
    <li>#15099 Use <code class="language-text highlighter-rouge">std::vector</code> API for construction of test data (domob1812)</li>
    <li>#15102 Run <code class="language-text highlighter-rouge">invalid_txs.InputMissing</code> test in <code class="language-text highlighter-rouge">feature_block</code> (MarcoFalke)</li>
    <li>#15059 Add basic test for BIP34 (MarcoFalke)</li>
    <li>#15108 Tidy up <code class="language-text highlighter-rouge">wallet_importmulti.py</code> (amitiuttarwar)</li>
    <li>#15164 Ignore shellcheck warning SC2236 (promag)</li>
    <li>#15170 refactor/lint: Add ignored shellcheck suggestions to an array (koalaman)</li>
    <li>#14958 Remove race between connecting and shutdown on separate connections (promag)</li>
    <li>#15166 Pin shellcheck version (practicalswift)</li>
    <li>#15196 Update all <code class="language-text highlighter-rouge">subprocess.check_output</code> functions to be Python 3.4 compatible (gkrizek)</li>
    <li>#15043 Build fuzz targets into seperate executables (MarcoFalke)</li>
    <li>#15276 travis: Compile once on trusty (MarcoFalke)</li>
    <li>#15246 Add tests for invalid message headers (MarcoFalke)</li>
    <li>#15301 When testing with –usecli, unify RPC arg to cli arg conversion and handle dicts and lists (achow101)</li>
    <li>#15247 Use wallet to retrieve raw transactions (MarcoFalke)</li>
    <li>#15303 travis: Remove unused <code class="language-text highlighter-rouge">functional_tests_config</code> (MarcoFalke)</li>
    <li>#15330 Fix race in <code class="language-text highlighter-rouge">p2p_invalid_messages</code> (MarcoFalke)</li>
    <li>#15324 Make bloom tests deterministic (MarcoFalke)</li>
    <li>#15328 travis: Revert “run extended tests once daily” (MarcoFalke)</li>
    <li>#15327 Make test <code class="language-text highlighter-rouge">updatecoins_simulation_test</code> deterministic (practicalswift)</li>
    <li>#14519 add utility to easily profile node performance with perf (jamesob)</li>
    <li>#15349 travis: Only exit early if compilation took longer than 30 min (MarcoFalke)</li>
    <li>#15350 Drop RPC connection if –usecli (promag)</li>
    <li>#15370 test: Remove unused –force option (MarcoFalke)</li>
    <li>#14543 minor <code class="language-text highlighter-rouge">p2p_sendheaders</code> fix of height in coinbase (instagibbs)</li>
    <li>#13787 Test for Windows encoding issue (ken2812221)</li>
    <li>#15378 Added missing tests for RPC wallet errors (benthecarman)</li>
    <li>#15238 remove some magic mining constants in functional tests (instagibbs)</li>
    <li>#15411 travis: Combine –disable-bip70 into existing job (MarcoFalke)</li>
    <li>#15295 fuzz: Add <code class="language-text highlighter-rouge">test/fuzz/test_runner.py</code> and run it in travis (MarcoFalke)</li>
    <li>#15413 Add missing <code class="language-text highlighter-rouge">cs_main</code> locks required when accessing pcoinsdbview, pcoinsTip or pblocktree (practicalswift)</li>
    <li>#15399 fuzz: Script validation flags (MarcoFalke)</li>
    <li>#15410 txindex: interrupt threadGroup before calling destructor (MarcoFalke)</li>
    <li>#15397 Remove manual byte editing in <code class="language-text highlighter-rouge">wallet_tx_clone</code> func test (instagibbs)</li>
    <li>#15415 functional: allow custom cwd, use tmpdir as default (Sjors)</li>
    <li>#15404 Remove <code class="language-text highlighter-rouge">-txindex</code> to start nodes (amitiuttarwar)</li>
    <li>#15439 remove <code class="language-text highlighter-rouge">byte.hex()</code> to keep compatibility (AkioNak)</li>
    <li>#15419 Always refresh cache to be out of ibd (MarcoFalke)</li>
    <li>#15507 Bump timeout on tests that timeout on windows (MarcoFalke)</li>
    <li>#15506 appveyor: fix cache issue and reduce dependencies build time (ken2812221)</li>
    <li>#15485 add <code class="language-text highlighter-rouge">rpc_misc.py</code>, mv test getmemoryinfo, add test mallocinfo (adamjonas)</li>
    <li>#15321 Add <code class="language-text highlighter-rouge">cs_main</code> lock annotations for mapBlockIndex (MarcoFalke)</li>
    <li>#14128 lint: Make sure we read the command line inputs using UTF-8 decoding in python (ken2812221)</li>
    <li>#14115 lint: Make all linters work under the default macos dev environment (build-osx.md) (practicalswift)</li>
    <li>#15219 lint: Enable python linters via an array (Empact)</li>
  </ul>

  <h3 id="platform-support">Platform support</h3>
  <ul>
    <li>#13866 utils: Use <code class="language-text highlighter-rouge">_wfopen</code> and <code class="language-text highlighter-rouge">_wfreopen</code> on windows (ken2812221)</li>
    <li>#13886 utils: Run commands using UTF-8 string on windows (ken2812221)</li>
    <li>#14192 utils: Convert <code class="language-text highlighter-rouge">fs::filesystem_error</code> messages from local multibyte to UTF-8 on windows (ken2812221)</li>
    <li>#13877 utils: Make fs::path::string() always return UTF-8 string on windows (ken2812221)</li>
    <li>#13883 utils: Convert windows args to UTF-8 string (ken2812221)</li>
    <li>#13878 utils: Add fstream wrapper to allow to pass unicode filename on windows (ken2812221)</li>
    <li>#14426 utils: Fix broken windows filelock (ken2812221)</li>
    <li>#14686 Fix windows build error if <code class="language-text highlighter-rouge">--disable-bip70</code> (ken2812221)</li>
    <li>#14922 windows: Set <code class="language-text highlighter-rouge">_WIN32_WINNT</code> to 0x0601 (Windows 7) (ken2812221)</li>
    <li>#13888 Call unicode API on Windows (ken2812221)</li>
    <li>#15468 Use <code class="language-text highlighter-rouge">fsbridge::ifstream</code> to fix Windows path issue (ken2812221)</li>
    <li>#13734 Drop <code class="language-text highlighter-rouge">boost::scoped_array</code> and use <code class="language-text highlighter-rouge">wchar_t</code> API explicitly on Windows (ken2812221)</li>
    <li>#13884 Enable bdb unicode support for Windows (ken2812221)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#13935 contrib: Adjust output to current test format (AkioNak)</li>
    <li>#14097 validation: Log FormatStateMessage on ConnectBlock error in ConnectTip (MarcoFalke)</li>
    <li>#13724 contrib: Support ARM and RISC-V symbol check (ken2812221)</li>
    <li>#13159 Don’t close old debug log file handle prematurely when trying to re-open (on SIGHUP) (practicalswift)</li>
    <li>#14186 bitcoin-cli: don’t translate command line options (HashUnlimited)</li>
    <li>#14057 logging: Only log <code class="language-text highlighter-rouge">using config file path_to_bitcoin.conf</code> message on startup if conf file exists (leishman)</li>
    <li>#14164 Update univalue subtree (MarcoFalke)</li>
    <li>#14272 init: Remove deprecated args from hidden args (MarcoFalke)</li>
    <li>#14494 Error if # is used in rpcpassword in conf (MeshCollider)</li>
    <li>#14742 Properly generate salt in rpcauth.py (dongcarl)</li>
    <li>#14708 Warn unrecognised sections in the config file (AkioNak)</li>
    <li>#14756 Improve rpcauth.py by using argparse and getpass modules (promag)</li>
    <li>#14785 scripts: Fix detection of copyright holders (cornelius)</li>
    <li>#14831 scripts: Use <code class="language-text highlighter-rouge">#!/usr/bin/env bash</code> instead of <code class="language-text highlighter-rouge">#!/bin/bash</code> (vim88)</li>
    <li>#14869 Scripts: Add trusted key for samuel dobson (laanwj)</li>
    <li>#14809 Tools: improve verify-commits.py script (jlopp)</li>
    <li>#14624 Some simple improvements to the RNG code (sipa)</li>
    <li>#14947 scripts: Remove python 2 import workarounds (practicalswift)</li>
    <li>#15087 Error if rpcpassword contains hash in conf sections (MeshCollider)</li>
    <li>#14433 Add checksum in gitian build scripts for ossl (TheCharlatan)</li>
    <li>#15165 contrib: Allow use of github api authentication in github-merge (laanwj)</li>
    <li>#14409 utils and libraries: Make ‘blocksdir’ always net specific (hebasto)</li>
    <li>#14839 threads: Fix unitialized members in <code class="language-text highlighter-rouge">sched_param</code> (fanquake)</li>
    <li>#14955 Switch all RNG code to the built-in PRNG (sipa)</li>
    <li>#15258 Scripts and tools: Fix <code class="language-text highlighter-rouge">devtools/copyright_header.py</code> to always honor exclusions (Empact)</li>
    <li>#12255 Update bitcoin.service to conform to init.md (dongcarl)</li>
    <li>#15266 memory: Construct globals on first use (MarcoFalke)</li>
    <li>#15347 Fix build after pr 15266 merged (hebasto)</li>
    <li>#15351 Update linearize-hashes.py (OverlordQ)</li>
    <li>#15358 util: Add setuphelpoptions() (MarcoFalke)</li>
    <li>#15216 Scripts and tools: Replace script name with a special parameter (hebasto)</li>
    <li>#15250 Use RdSeed when available, and reduce RdRand load (sipa)</li>
    <li>#15278 Improve PID file error handling (hebasto)</li>
    <li>#15270 Pull leveldb subtree (MarcoFalke)</li>
    <li>#15456 Enable PID file creation on WIN (riordant)</li>
    <li>#12783 macOS: disable AppNap during sync (krab)</li>
    <li>#13910 Log progress while verifying blocks at level 4 (domob1812)</li>
    <li>#15124 Fail AppInitMain if either disk space check fails (Empact)</li>
    <li>#15117 Fix invalid memory write in case of failing mmap(…) in PosixLockedPageAllocator::AllocateLocked (practicalswift)</li>
    <li>#14357 streams: Fix broken <code class="language-text highlighter-rouge">streams_vector_reader</code> test. Remove unused <code class="language-text highlighter-rouge">seek(size_t)</code></li>
    <li>#11640 Make <code class="language-text highlighter-rouge">LOCK</code>, <code class="language-text highlighter-rouge">LOCK2</code>, <code class="language-text highlighter-rouge">TRY_LOCK</code> work with CWaitableCriticalSection (ryanofsky)</li>
    <li>#14074 Use <code class="language-text highlighter-rouge">std::unordered_set</code> instead of <code class="language-text highlighter-rouge">set</code> in blockfilter interface (jimpo)</li>
    <li>#15275 Add gitian PGP key for hebasto (hebasto)</li>
  </ul>

  <h3 id="documentation-1">Documentation</h3>
  <ul>
    <li>#14120 Notes about control port and read access to cookie (JBaczuk)</li>
    <li>#14135 correct GetDifficulty doc after #13288 (fanquake)</li>
    <li>#14013 Add new regtest ports in man following #10825 ports reattributions (ariard)</li>
    <li>#14149 Remove misleading checkpoints comment in CMainParams (MarcoFalke)</li>
    <li>#14153 Add disable-wallet section to OSX build instructions, update line in Unix instructions (bitstein)</li>
    <li>#13662 Explain when reindex-chainstate can be used instead of reindex (Sjors)</li>
    <li>#14207 <code class="language-text highlighter-rouge">-help-debug</code> implies <code class="language-text highlighter-rouge">-help</code> (laanwj)</li>
    <li>#14213 Fix reference to lint-locale-dependence.sh (hebasto)</li>
    <li>#14206 Document <code class="language-text highlighter-rouge">-checklevel</code> levels (laanwj)</li>
    <li>#14217 Add GitHub PR template (MarcoFalke)</li>
    <li>#14331 doxygen: Fix member comments (MarcoFalke)</li>
    <li>#14264 Split depends installation instructions per arch (MarcoFalke)</li>
    <li>#14393 Add missing apt-get install (poiuty)</li>
    <li>#14428 Fix macOS files description in qt/README.md (hebasto)</li>
    <li>#14390 release process: RPC documentation (karel-3d)</li>
    <li>#14472 getblocktemplate: use SegWit in example (Sjors)</li>
    <li>#14497 Add doc/bitcoin-conf.md (hebasto)</li>
    <li>#14526 Document lint tests (fanquake)</li>
    <li>#14511 Remove explicit storage requirement from README.md (merland)</li>
    <li>#14600 Clarify commit message guidelines (merland)</li>
    <li>#14617 FreeBSD: Document Python 3 requirement for ‘gmake check’ (murrayn)</li>
    <li>#14592 Add external interface consistency guarantees (MarcoFalke)</li>
    <li>#14625 Make clear function argument case in dev notes (dongcarl)</li>
    <li>#14515 Update OpenBSD build guide for 6.4 (fanquake)</li>
    <li>#14436 Add comment explaining recentRejects-DoS behavior (jamesob)</li>
    <li>#14684 conf: Remove deprecated options from docs, Other cleanup (MarcoFalke)</li>
    <li>#14731 Improve scripted-diff developer docs (dongcarl)</li>
    <li>#14778 A few minor formatting fixes and clarifications to descriptors.md (jnewbery)</li>
    <li>#14448 Clarify rpcwallet flag url change (JBaczuk)</li>
    <li>#14808 Clarify RPC rawtransaction documentation (jlopp)</li>
    <li>#14804 Less confusing documentation for <code class="language-text highlighter-rouge">torpassword</code> (fanquake)</li>
    <li>#14848 Fix broken Gmane URL in security-check.py (cyounkins-bot)</li>
    <li>#14882 developer-notes.md: Point out that UniValue deviates from upstream (Sjors)</li>
    <li>#14909 Update minimum required Qt (fanquake)</li>
    <li>#14914 Add nice table to files.md (emilengler)</li>
    <li>#14741 Indicate <code class="language-text highlighter-rouge">-rpcauth</code> option password hashing alg (dongcarl)</li>
    <li>#14950 Add NSIS setup/install steps to windows docs (fanquake)</li>
    <li>#13930 Better explain GetAncestor check for <code class="language-text highlighter-rouge">m_failed_blocks</code> in AcceptBlockHeader (Sjors)</li>
    <li>#14973 Improve Windows native build instructions (murrayn)</li>
    <li>#15073 Botbot.me (IRC logs) not available anymore (anduck)</li>
    <li>#15038 Get more info about GUI-related issue on Linux (hebasto)</li>
    <li>#14832 Add more Doxygen information to Developer Notes (ch4ot1c)</li>
    <li>#15128 Fix download link in doc/README.md (merland)</li>
    <li>#15127 Clarifying testing instructions (benthecarman)</li>
    <li>#15132 Add FreeBSD build notes link to doc/README.md (fanquake)</li>
    <li>#15173 Explain what .python-version does (Sjors)</li>
    <li>#15223 Add information about security to the JSON-RPC doc (harding)</li>
    <li>#15249 Update python docs to reflect that wildcard imports are disallowed (Empact)</li>
    <li>#15176 Get rid of badly named <code class="language-text highlighter-rouge">doc/README_osx.md</code> (merland)</li>
    <li>#15272 Correct logging return type and RPC example (fanquake)</li>
    <li>#15244 Gdb attaching to process during tests has non-sudo solution (instagibbs)</li>
    <li>#15332 Small updates to <code class="language-text highlighter-rouge">getrawtransaction</code> description (amitiuttarwar)</li>
    <li>#15354 Add missing <code class="language-text highlighter-rouge">bitcoin-wallet</code> tool manpages (MarcoFalke)</li>
    <li>#15343 netaddress: Make IPv4 loopback comment more descriptive (dongcarl)</li>
    <li>#15353 Minor textual improvements in <code class="language-text highlighter-rouge">translation_strings_policy.md</code> (merland)</li>
    <li>#15426 importmulti: add missing description of keypool option (harding)</li>
    <li>#15425 Add missing newline to listunspent help for witnessScript (harding)</li>
    <li>#15348 Add separate productivity notes document (dongcarl)</li>
    <li>#15416 Update FreeBSD build guide for 12.0 (fanquake)</li>
    <li>#15222 Add info about factors that affect dependency list (merland)</li>
    <li>#13676 Explain that mempool memory is added to <code class="language-text highlighter-rouge">-dbcache</code> (Sjors)</li>
    <li>#15273 Slight tweak to the verify-commits script directions (droark)</li>
    <li>#15477 Remove misleading hint in getrawtransaction (MarcoFalke)</li>
    <li>#15489 Update release process for snap package (MarcoFalke)</li>
    <li>#15524 doc: Remove berkeleydb PPA from linux build instructions (MarcoFalke)</li>
    <li>#15559 Correct <code class="language-text highlighter-rouge">analyzepsbt</code> rpc doc (fanquake)</li>
    <li>#15194 Add comment describing <code class="language-text highlighter-rouge">fDisconnect</code> behavior (dongcarl)</li>
    <li>#15754 getrpcinfo docs (benthecarman)</li>
    <li>#15763 Update bips.md for 0.18.0 (sipa)</li>
    <li>#15757 List new RPCs in psbt.md and descriptors.md (sipa)</li>
    <li>#15765 correct bitcoinconsensus_version in shared-libraries.md (fanquake)</li>
    <li>#15792 describe onlynet option in doc/tor.md (jonatack)</li>
    <li>#15802 mention creating application support bitcoin folder on OSX (JimmyMow)</li>
    <li>#15799 Clarify RPC versioning (MarcoFalke)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>1Il1</li>
    <li>251</li>
    <li>Aaron Clauson</li>
    <li>Adam Jonas</li>
    <li>Akio Nakamura</li>
    <li>Alexander Leishman</li>
    <li>Alexey Ivanov</li>
    <li>Alexey Poghilenkov</li>
    <li>Amir Abrams</li>
    <li>Amiti Uttarwar</li>
    <li>Andrew Chow</li>
    <li>andrewtoth</li>
    <li>Anthony Towns</li>
    <li>Antoine Le Calvez</li>
    <li>Antoine Riard</li>
    <li>Antti Majakivi</li>
    <li>araspitzu</li>
    <li>Arvid Norberg</li>
    <li>Ben Carman</li>
    <li>Ben Woosley</li>
    <li>benthecarman</li>
    <li>bitcoinhodler</li>
    <li>Carl Dong</li>
    <li>Chakib Benziane</li>
    <li>Chris Moore</li>
    <li>Chris Stewart</li>
    <li>chris-belcher</li>
    <li>Chun Kuan Lee</li>
    <li>Cornelius Schumacher</li>
    <li>Cory Fields</li>
    <li>Craig Younkins</li>
    <li>Cristian Mircea Messel</li>
    <li>Damian Mee</li>
    <li>Daniel Ingram</li>
    <li>Daniel Kraft</li>
    <li>David A. Harding</li>
    <li>DesWurstes</li>
    <li>dexX7</li>
    <li>Dimitri Deijs</li>
    <li>Dimitris Apostolou</li>
    <li>Douglas Roark</li>
    <li>DrahtBot</li>
    <li>Emanuele Cisbani</li>
    <li>Emil Engler</li>
    <li>Eric Scrivner</li>
    <li>fridokus</li>
    <li>Gal Buki</li>
    <li>Gleb Naumenko</li>
    <li>Glenn Willen</li>
    <li>Graham Krizek</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>gustavonalle</li>
    <li>Harry Moreno</li>
    <li>Hennadii Stepanov</li>
    <li>Isidoro Ghezzi</li>
    <li>Jack Mallers</li>
    <li>James Hilliard</li>
    <li>James O’Beirne</li>
    <li>Jameson Lopp</li>
    <li>Jeremy Rubin</li>
    <li>Jesse Cohen</li>
    <li>Jim Posen</li>
    <li>John Newbery</li>
    <li>Jon Layton</li>
    <li>Jonas Schnelli</li>
    <li>João Barbosa</li>
    <li>Jordan Baczuk</li>
    <li>Jorge Timón</li>
    <li>Julian Fleischer</li>
    <li>Justin Turner Arthur</li>
    <li>Karel Bílek</li>
    <li>Karl-Johan Alm</li>
    <li>Kaz Wesley</li>
    <li>ken2812221</li>
    <li>Kostiantyn Stepaniuk</li>
    <li>Kristaps Kaupe</li>
    <li>Lawrence Nahum</li>
    <li>Lenny Maiorani</li>
    <li>liuyujun</li>
    <li>lucash-dev</li>
    <li>luciana</li>
    <li>Luke Dashjr</li>
    <li>marcaiaf</li>
    <li>marcoagner</li>
    <li>MarcoFalke</li>
    <li>Martin Erlandsson</li>
    <li>Marty Jones</li>
    <li>Mason Simon</li>
    <li>Michael Ford</li>
    <li>Michael Goldstein</li>
    <li>Michael Polzer</li>
    <li>Mitchell Cash</li>
    <li>mruddy</li>
    <li>Murray Nesbitt</li>
    <li>OverlordQ</li>
    <li>Patrick Strateman</li>
    <li>Pierre Rochard</li>
    <li>Pieter Wuille</li>
    <li>poiuty</li>
    <li>practicalswift</li>
    <li>priscoan</li>
    <li>qubenix</li>
    <li>riordant</li>
    <li>Russell Yanofsky</li>
    <li>Samuel Dobson</li>
    <li>sanket1729</li>
    <li>Sjors Provoost</li>
    <li>Stephan Oeste</li>
    <li>Steven Roose</li>
    <li>Suhas Daftuar</li>
    <li>TheCharlatan</li>
    <li>Tim Ruffing</li>
    <li>Vidar Holen</li>
    <li>vim88</li>
    <li>Walter</li>
    <li>whythat</li>
    <li>Wladimir J. van der Laan</li>
    <li>Zain Iqbal Allarakhia</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.17.1 released</title>
            <link>https://bitcoin.org/en/release/v0.17.1</link>
            <guid>https://bitcoin.org/en/release/v0.17.1</guid>
          
            <pubDate>Tue, 25 Dec 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.17.1 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.17.1/">https://bitcoincore.org/bin/bitcoin-core-0.17.1/</a></p>

  <p>This is a new minor version release, with various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>If your node has a txindex, the txindex db will be migrated the first time you run 0.17.0 or newer, which may take up to a few hours. Your node will not be functional until this migration completes.</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading
directly from 0.7.x and earlier without redownloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>The chainstate database for this release is not compatible with previous
releases, so if you run 0.15 and then decide to switch back to any
older version, you will need to run the old release with the <code class="language-text highlighter-rouge">-reindex-chainstate</code>
option to rebuild the chainstate data structures in the old format.</p>

  <p>If your node has pruning enabled, this will entail re-downloading and
processing the entire blockchain.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.10+, and Windows 7 and newer (Windows XP is not supported).</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <p>From 0.17.0 onwards macOS &lt;10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn’t
support versions of macOS older than 10.10.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="listtransactions-label-support"><code class="language-text highlighter-rouge">listtransactions</code> label support</h2>

  <p>The <code class="language-text highlighter-rouge">listtransactions</code> RPC <code class="language-text highlighter-rouge">account</code> parameter which was deprecated in 0.17.0
and renamed to <code class="language-text highlighter-rouge">dummy</code> has been un-deprecated and renamed again to <code class="language-text highlighter-rouge">label</code>.</p>

  <p>When bitcoin is configured with the <code class="language-text highlighter-rouge">-deprecatedrpc=accounts</code> setting, specifying
a label/account/dummy argument will return both outgoing and incoming
transactions. Without the <code class="language-text highlighter-rouge">-deprecatedrpc=accounts</code> setting, it will only return
incoming transactions (because it used to be possible to create transactions
spending from specific accounts, but this is no longer possible with labels).</p>

  <p>When <code class="language-text highlighter-rouge">-deprecatedrpc=accounts</code> is set, it’s possible to pass the empty string “”
to list transactions that don’t have any label. Without
<code class="language-text highlighter-rouge">-deprecatedrpc=accounts</code>, passing the empty string is an error because returning
only non-labeled transactions is not generally useful behavior and can cause
confusion.</p>

  <h1 id="change-log">0.17.1 change log</h1>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#14685 <code class="language-text highlighter-rouge">9406502</code> Fix a deserialization overflow edge case (kazcw)</li>
    <li>#14728 <code class="language-text highlighter-rouge">b901578</code> Fix uninitialized read when stringifying an addrLocal (kazcw)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#14441 <code class="language-text highlighter-rouge">5150acc</code> Restore ability to list incoming transactions by label (jnewbery)</li>
    <li>#13546 <code class="language-text highlighter-rouge">91fa15a</code> Fix use of uninitialized value <code class="language-text highlighter-rouge">bnb_used</code> in CWallet::CreateTransaction(…) (practicalswift)</li>
    <li>#14310 <code class="language-text highlighter-rouge">bb90695</code> Ensure wallet is unlocked before signing (gustavonalle)</li>
    <li>#14690 <code class="language-text highlighter-rouge">5782fdc</code> Throw error if CPubKey is invalid during PSBT keypath serialization (instagibbs)</li>
    <li>#14852 <code class="language-text highlighter-rouge">2528443</code> backport: [tests] Add <code class="language-text highlighter-rouge">wallet_balance.py</code> (MarcoFalke)</li>
    <li>#14196 <code class="language-text highlighter-rouge">3362a95</code> psbt: always drop the unnecessary utxo and convert non-witness utxo to witness when necessary (achow101)</li>
    <li>#14588 <code class="language-text highlighter-rouge">70ee1f8</code> Refactor PSBT signing logic to enforce invariant and fix signing bug (gwillen)</li>
    <li>#14424 <code class="language-text highlighter-rouge">89a9a9d</code> Stop requiring imported pubkey to sign non-PKH schemes (sipa, MeshCollider)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#14417 <code class="language-text highlighter-rouge">fb9ad04</code> Fix listreceivedbyaddress not taking address as a string (etscrivner)</li>
    <li>#14596 <code class="language-text highlighter-rouge">de5e48a</code> Bugfix: RPC: Add <code class="language-text highlighter-rouge">address_type</code> named param for createmultisig (luke-jr)</li>
    <li>#14618 <code class="language-text highlighter-rouge">9666dba</code> Make HTTP RPC debug logging more informative (practicalswift)</li>
    <li>#14197 <code class="language-text highlighter-rouge">7bee414</code> [psbt] Convert non-witness UTXOs to witness if witness sig created (achow101)</li>
    <li>#14377 <code class="language-text highlighter-rouge">a3fe125</code> Check that a separator is found for psbt inputs, outputs, and global map (achow101)</li>
    <li>#14356 <code class="language-text highlighter-rouge">7a590d8</code> Fix converttopsbt permitsigdata arg, add basic test (instagibbs)</li>
    <li>#14453 <code class="language-text highlighter-rouge">75b5d8c</code> Fix wallet unload during walletpassphrase timeout (promag)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#14403 <code class="language-text highlighter-rouge">0242b5a</code> Revert “Force TLS1.0+ for SSL connections” (real-or-random)</li>
    <li>#14593 <code class="language-text highlighter-rouge">df5131b</code> Explicitly disable “Dark Mode” appearance on macOS (fanquake)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#14647 <code class="language-text highlighter-rouge">7edebed</code> Remove illegal spacing in darwin.mk (ch4ot1c)</li>
    <li>#14698 <code class="language-text highlighter-rouge">ec71f06</code> Add bitcoin-tx.exe into Windows installer (ken2812221)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#13965 <code class="language-text highlighter-rouge">29899ec</code> Fix extended functional tests fail (ken2812221)</li>
    <li>#14011 <code class="language-text highlighter-rouge">9461f98</code> Disable wallet and address book Qt tests on macOS minimal platform (ryanofsky)</li>
    <li>#14180 <code class="language-text highlighter-rouge">86fadee</code> Run all tests even if wallet is not compiled (MarcoFalke)</li>
    <li>#14122 <code class="language-text highlighter-rouge">8bc1bad</code> Test <code class="language-text highlighter-rouge">rpc_help.py</code> failed: Check whether ZMQ is enabled or not (Kvaciral)</li>
    <li>#14101 <code class="language-text highlighter-rouge">96dc936</code> Use named args in validation acceptance tests (MarcoFalke)</li>
    <li>#14020 <code class="language-text highlighter-rouge">24d796a</code> Add tests for RPC help (promag)</li>
    <li>#14052 <code class="language-text highlighter-rouge">7ff32a6</code> Add some actual witness in <code class="language-text highlighter-rouge">rpc_rawtransaction</code> (MarcoFalke)</li>
    <li>#14215 <code class="language-text highlighter-rouge">b72fbab</code> Use correct python index slices in example test (sdaftuar)</li>
    <li>#14024 <code class="language-text highlighter-rouge">06544fa</code> Add <code class="language-text highlighter-rouge">TestNode::assert_debug_log</code> (MarcoFalke)</li>
    <li>#14658 <code class="language-text highlighter-rouge">60f7a97</code> Add test to ensure node can generate all rpc help texts at runtime (MarcoFalke)</li>
    <li>#14632 <code class="language-text highlighter-rouge">96f15e8</code> Fix a comment (fridokus)</li>
    <li>#14700 <code class="language-text highlighter-rouge">f9db08e</code> Avoid race in <code class="language-text highlighter-rouge">p2p_invalid_block</code> by waiting for the block request (MarcoFalke)</li>
    <li>#14845 <code class="language-text highlighter-rouge">67225e2</code> Add <code class="language-text highlighter-rouge">wallet_balance.py</code> (jnewbery)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#14161 <code class="language-text highlighter-rouge">5f51fd6</code> doc/descriptors.md tweaks (ryanofsky)</li>
    <li>#14276 <code class="language-text highlighter-rouge">85aacc4</code> Add autogen.sh in ARM Cross-compilation (walterwhite81)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Andrew Chow</li>
    <li>Chun Kuan Lee</li>
    <li>David A. Harding</li>
    <li>Eric Scrivner</li>
    <li>fanquake</li>
    <li>fridokus</li>
    <li>Glenn Willen</li>
    <li>Gregory Sanders</li>
    <li>gustavonalle</li>
    <li>John Newbery</li>
    <li>Jon Layton</li>
    <li>Jonas Schnelli</li>
    <li>João Barbosa</li>
    <li>Kaz Wesley</li>
    <li>Kvaciral</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>MeshCollider</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>Russell Yanofsky</li>
    <li>Sjors Provoost</li>
    <li>Suhas Daftuar</li>
    <li>Tim Ruffing</li>
    <li>Walter</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.17.0.1 released</title>
            <link>https://bitcoin.org/en/release/v0.17.0.1</link>
            <guid>https://bitcoin.org/en/release/v0.17.0.1</guid>
          
            <pubDate>Tue, 30 Oct 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.17.0.1 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.17.0.1/">https://bitcoincore.org/bin/bitcoin-core-0.17.0.1/</a></p>

  <p>or through BitTorrent:</p>

  <p>magnet:?xt=urn:btih:70749cf2cf2922a21208b4ae760c9f2f9d1e7f11&amp;dn=bitcoin-core-0.17.0.1&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&amp;tr=udp%3A%2F%2Fzer0day.ch%3A1337&amp;tr=udp%3A%2F%2Fexplodie.org%3A6969</p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="notable-changes">Notable changes</h1>

  <p>An issue was solved with OSX dmg generation, affecting macOS 10.12 to 10.14,
which could cause Finder to crash on install.</p>

  <p>There are no significant changes for other operating systems.</p>

  <h1 id="change-log">0.17.0.1 change log</h1>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#14416 <code class="language-text highlighter-rouge">eb2cc84</code> Fix OSX dmg issue (10.12 to 10.14) (jonasschnelli)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#14509 <code class="language-text highlighter-rouge">1b5af2c</code> [0.17] doc: use SegWit in getblocktemplate example (Sjors)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Jonas Schnelli</li>
    <li>Pieter Wuille</li>
    <li>Sjors Provoost</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.17.0 released</title>
            <link>https://bitcoin.org/en/release/v0.17.0</link>
            <guid>https://bitcoin.org/en/release/v0.17.0</guid>
          
            <pubDate>Wed, 03 Oct 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.17.0 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.17.0/">https://bitcoincore.org/bin/bitcoin-core-0.17.0/</a></p>

  <p>or through BitTorrent:</p>

  <p>magnet:?xt=urn:btih:1c72f17bc1667a2ce81860b75135e491f6637d05&amp;dn=bitcoin-core-0.17.0&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&amp;tr=udp%3A%2F%2Fzer0day.ch%3A1337&amp;tr=udp%3A%2F%2Fexplodie.org%3A6969</p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>If your node has a txindex, the txindex db will be migrated the first time you run 0.17.0 or newer, which may take up to a few hours. Your node will not be functional until this migration completes.</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading
directly from 0.7.x and earlier without redownloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>The chainstate database for this release is not compatible with previous
releases, so if you run 0.15 and then decide to switch back to any
older version, you will need to run the old release with the <code class="language-text highlighter-rouge">-reindex-chainstate</code>
option to rebuild the chainstate data structures in the old format.</p>

  <p>If your node has pruning enabled, this will entail re-downloading and
processing the entire blockchain.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.10+, and Windows 7 and newer (Windows XP is not supported).</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <p>From 0.17.0 onwards macOS &lt;10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn’t
support versions of macOS older than 10.10.</p>

  <h1 id="known-issues">Known issues</h1>

  <ul>
    <li>
      <p>Upgrading from 0.13.0 or older currently results in memory blow-up during the roll-back of blocks to the SegWit activation point. In these cases, a full <code class="language-text highlighter-rouge">-reindex</code> is necessary.</p>
    </li>
    <li>
      <p>The GUI suffers from visual glitches in the new MacOS dark mode. This has to do with our Qt theme handling and is not a new problem in 0.17.0, but is expected to be resolved in 0.17.1.</p>
    </li>
  </ul>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="changed-configuration-options">Changed configuration options</h2>

  <ul>
    <li><code class="language-text highlighter-rouge">-includeconf=&lt;file&gt;</code> can be used to include additional configuration files.
Only works inside the <code class="language-text highlighter-rouge">bitcoin.conf</code> file, not inside included files or from
command-line. Multiple files may be included. Can be disabled from command-
line via <code class="language-text highlighter-rouge">-noincludeconf</code>. Note that multi-argument commands like
<code class="language-text highlighter-rouge">-includeconf</code> will override preceding <code class="language-text highlighter-rouge">-noincludeconf</code>, i.e.
      <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>noincludeconf=1
includeconf=relative.conf
</code></pre></div>      </div>

      <p>as bitcoin.conf will still include <code class="language-text highlighter-rouge">relative.conf</code>.</p>
    </li>
  </ul>

  <h2 id="gui-changes">GUI changes</h2>

  <ul>
    <li>Block storage can be limited under Preferences, in the Main tab. Undoing this setting requires downloading the full blockchain again. This mode is incompatible with -txindex and -rescan.</li>
  </ul>

  <h2 id="external-wallet-files">External wallet files</h2>

  <p>The <code class="language-text highlighter-rouge">-wallet=&lt;path&gt;</code> option now accepts full paths instead of requiring wallets
to be located in the -walletdir directory.</p>

  <h2 id="newly-created-wallet-format">Newly created wallet format</h2>

  <p>If <code class="language-text highlighter-rouge">-wallet=&lt;path&gt;</code> is specified with a path that does not exist, it will now
create a wallet directory at the specified location (containing a wallet.dat
data file, a db.log file, and database/log.?????????? files) instead of just
creating a data file at the path and storing log files in the parent
directory. This should make backing up wallets more straightforward than
before because the specified wallet path can just be directly archived without
having to look in the parent directory for transaction log files.</p>

  <p>For backwards compatibility, wallet paths that are names of existing data files
in the <code class="language-text highlighter-rouge">-walletdir</code> directory will continue to be accepted and interpreted the
same as before.</p>

  <h2 id="dynamic-loading-and-creation-of-wallets">Dynamic loading and creation of wallets</h2>

  <p>Previously, wallets could only be loaded or created at startup, by specifying <code class="language-text highlighter-rouge">-wallet</code> parameters on the command line or in the bitcoin.conf file. It is now possible to load, create and unload wallets dynamically at runtime:</p>

  <ul>
    <li>Existing wallets can be loaded by calling the <code class="language-text highlighter-rouge">loadwallet</code> RPC. The wallet can be specified as file/directory basename (which must be located in the <code class="language-text highlighter-rouge">walletdir</code> directory), or as an absolute path to a file/directory.</li>
    <li>New wallets can be created (and loaded) by calling the <code class="language-text highlighter-rouge">createwallet</code> RPC. The provided name must not match a wallet file in the <code class="language-text highlighter-rouge">walletdir</code> directory or the name of a wallet that is currently loaded.</li>
    <li>Loaded wallets can be unloaded by calling the <code class="language-text highlighter-rouge">unloadwallet</code> RPC.</li>
  </ul>

  <p>This feature is currently only available through the RPC interface.</p>

  <h2 id="coin-selection">Coin selection</h2>

  <h3 id="partial-spend-avoidance">Partial spend avoidance</h3>

  <p>When an address is paid multiple times the coins from those separate payments can be spent separately which hurts privacy due to linking otherwise separate addresses. A new <code class="language-text highlighter-rouge">-avoidpartialspends</code> flag has been added (default=false). If enabled, the wallet will always spend existing UTXO to the same address together even if it results in higher fees. If someone were to send coins to an address after it was used, those coins will still be included in future coin selections.</p>

  <h2 id="configuration-sections-for-testnet-and-regtest">Configuration sections for testnet and regtest</h2>

  <p>It is now possible for a single configuration file to set different
options for different networks. This is done by using sections or by
prefixing the option with the network, such as:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>main.uacomment=bitcoin
test.uacomment=bitcoin-testnet
regtest.uacomment=regtest
[main]
mempoolsize=300
[test]
mempoolsize=100
[regtest]
mempoolsize=20
</code></pre></div>  </div>

  <p>If the following options are not in a section, they will only apply to mainnet:
<code class="language-text highlighter-rouge">addnode=</code>, <code class="language-text highlighter-rouge">connect=</code>, <code class="language-text highlighter-rouge">port=</code>, <code class="language-text highlighter-rouge">bind=</code>, <code class="language-text highlighter-rouge">rpcport=</code>, <code class="language-text highlighter-rouge">rpcbind=</code> and <code class="language-text highlighter-rouge">wallet=</code>.
The options to choose a network (<code class="language-text highlighter-rouge">regtest=</code> and <code class="language-text highlighter-rouge">testnet=</code>) must be specified
outside of sections.</p>

  <h2 id="label-and-account-apis-for-wallet">‘label’ and ‘account’ APIs for wallet</h2>

  <p>A new ‘label’ API has been introduced for the wallet. This is intended as a
replacement for the deprecated ‘account’ API. The ‘account’ can continue to
be used in V0.17 by starting bitcoind with the ‘-deprecatedrpc=accounts’
argument, and will be fully removed in V0.18.</p>

  <p>The label RPC methods mirror the account functionality, with the following functional differences:</p>

  <ul>
    <li>Labels can be set on any address, not just receiving addresses. This functionality was previously only available through the GUI.</li>
    <li>Labels can be deleted by reassigning all addresses using the <code class="language-text highlighter-rouge">setlabel</code> RPC method.</li>
    <li>There isn’t support for sending transactions <em>from</em> a label, or for determining which label a transaction was sent from.</li>
    <li>Labels do not have a balance.</li>
  </ul>

  <p>Here are the changes to RPC methods:</p>

  <table>
    <thead>
      <tr>
        <th style="text-align: left">Deprecated Method</th>
        <th style="text-align: left">New Method</th>
        <th style="text-align: left">Notes</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaccount</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaddressinfo</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaddressinfo</code> returns a json object with address information instead of just the name of the account as a string.</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaccountaddress</code></td>
        <td style="text-align: left">n/a</td>
        <td style="text-align: left">There is no replacement for <code class="language-text highlighter-rouge">getaccountaddress</code> since labels do not have an associated receive address.</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaddressesbyaccount</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaddressesbylabel</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getaddressesbylabel</code> returns a json object with the addresses as keys, instead of a list of strings.</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getreceivedbyaccount</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getreceivedbylabel</code></td>
        <td style="text-align: left"><em>no change in behavior</em></td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listaccounts</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listlabels</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listlabels</code> does not return a balance or accept <code class="language-text highlighter-rouge">minconf</code> and <code class="language-text highlighter-rouge">watchonly</code> arguments.</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listreceivedbyaccount</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listreceivedbylabel</code></td>
        <td style="text-align: left">Both methods return new <code class="language-text highlighter-rouge">label</code> fields, along with <code class="language-text highlighter-rouge">account</code> fields for backward compatibility.</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">move</code></td>
        <td style="text-align: left">n/a</td>
        <td style="text-align: left"><em>no replacement</em></td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">sendfrom</code></td>
        <td style="text-align: left">n/a</td>
        <td style="text-align: left"><em>no replacement</em></td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">setaccount</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">setlabel</code></td>
        <td style="text-align: left">Both methods now: &lt;ul&gt;&lt;li&gt;allow assigning labels to any address, instead of raising an error if the address is not receiving address.&lt;li&gt;delete the previous label associated with an address when the final address using that label is reassigned to a different label, instead of making an implicit <code class="language-text highlighter-rouge">getaccountaddress</code> call to ensure the previous label still has a receiving address.</td>
      </tr>
    </tbody>
  </table>

  <table>
    <thead>
      <tr>
        <th style="text-align: left">Changed Method</th>
        <th style="text-align: left">Notes</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">addmultisigaddress</code></td>
        <td style="text-align: left">Renamed <code class="language-text highlighter-rouge">account</code> named parameter to <code class="language-text highlighter-rouge">label</code>. Still accepts <code class="language-text highlighter-rouge">account</code> for backward compatibility if running with ‘-deprecatedrpc=accounts’.</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getnewaddress</code></td>
        <td style="text-align: left">Renamed <code class="language-text highlighter-rouge">account</code> named parameter to <code class="language-text highlighter-rouge">label</code>. Still accepts <code class="language-text highlighter-rouge">account</code> for backward compatibility. if running with ‘-deprecatedrpc=accounts’</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listunspent</code></td>
        <td style="text-align: left">Returns new <code class="language-text highlighter-rouge">label</code> fields. <code class="language-text highlighter-rouge">account</code> field will be returned for backward compatibility if running with ‘-deprecatedrpc=accounts’</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">sendmany</code></td>
        <td style="text-align: left">The <code class="language-text highlighter-rouge">account</code> named parameter has been renamed to <code class="language-text highlighter-rouge">dummy</code>. If provided, the <code class="language-text highlighter-rouge">dummy</code> parameter must be set to the empty string, unless running with the <code class="language-text highlighter-rouge">-deprecatedrpc=accounts</code> argument (in which case functionality is unchanged).</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">listtransactions</code></td>
        <td style="text-align: left">The <code class="language-text highlighter-rouge">account</code> named parameter has been renamed to <code class="language-text highlighter-rouge">dummy</code>. If provided, the <code class="language-text highlighter-rouge">dummy</code> parameter must be set to the string <code class="language-text highlighter-rouge">*</code>, unless running with the <code class="language-text highlighter-rouge">-deprecatedrpc=accounts</code> argument (in which case functionality is unchanged).</td>
      </tr>
      <tr>
        <td style="text-align: left"><code class="language-text highlighter-rouge">getbalance</code></td>
        <td style="text-align: left"><code class="language-text highlighter-rouge">account</code>, <code class="language-text highlighter-rouge">minconf</code> and <code class="language-text highlighter-rouge">include_watchonly</code> parameters are deprecated, and can only be used if running with ‘-deprecatedrpc=accounts’</td>
      </tr>
    </tbody>
  </table>

  <h2 id="bip-174-partially-signed-bitcoin-transactions-support">BIP 174 Partially Signed Bitcoin Transactions support</h2>

  <p><a href="https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki">BIP 174 PSBT</a> is an interchange format for Bitcoin transactions that are not fully signed
yet, together with relevant metadata to help entities work towards signing it.
It is intended to simplify workflows where multiple parties need to cooperate to
produce a transaction. Examples include hardware wallets, multisig setups, and
<a href="https://bitcointalk.org/?topic=279249">CoinJoin</a> transactions.</p>

  <h3 id="overall-workflow">Overall workflow</h3>

  <p>Overall, the construction of a fully signed Bitcoin transaction goes through the
following steps:</p>

  <ul>
    <li>A <strong>Creator</strong> proposes a particular transaction to be created. He constructs
a PSBT that contains certain inputs and outputs, but no additional metadata.</li>
    <li>For each input, an <strong>Updater</strong> adds information about the UTXOs being spent by
the transaction to the PSBT.</li>
    <li>A potentially other Updater adds information about the scripts and public keys
involved in each of the inputs (and possibly outputs) of the PSBT.</li>
    <li><strong>Signers</strong> inspect the transaction and its metadata to decide whether they
agree with the transaction. They can use amount information from the UTXOs
to assess the values and fees involved. If they agree, they produce a
partial signature for the inputs for which they have relevant key(s).</li>
    <li>A <strong>Finalizer</strong> is run for each input to convert the partial signatures and
possibly script information into a final <code class="language-text highlighter-rouge">scriptSig</code> and/or <code class="language-text highlighter-rouge">scriptWitness</code>.</li>
    <li>An <strong>Extractor</strong> produces a valid Bitcoin transaction (in network format)
from a PSBT for which all inputs are finalized.</li>
  </ul>

  <p>Generally, each of the above (excluding Creator and Extractor) will simply
add more and more data to a particular PSBT. In a naive workflow, they all have
to operate sequentially, passing the PSBT from one to the next, until the
Extractor can convert it to a real transaction. In order to permit parallel
operation, <strong>Combiners</strong> can be employed which merge metadata from different
PSBTs for the same unsigned transaction.</p>

  <p>The names above in bold are the names of the roles defined in BIP174. They’re
useful in understanding the underlying steps, but in practice, software and
hardware implementations will typically implement multiple roles simultaneously.</p>

  <h3 id="rpcs">RPCs</h3>

  <ul>
    <li><strong><code class="language-text highlighter-rouge">converttopsbt</code> (Creator)</strong> is a utility RPC that converts an
unsigned raw transaction to PSBT format. It ignores existing signatures.</li>
    <li><strong><code class="language-text highlighter-rouge">createpsbt</code> (Creator)</strong> is a utility RPC that takes a list of inputs and
outputs and converts them to a PSBT with no additional information. It is
equivalent to calling <code class="language-text highlighter-rouge">createrawtransaction</code> followed by <code class="language-text highlighter-rouge">converttopsbt</code>.</li>
    <li><strong><code class="language-text highlighter-rouge">walletcreatefundedpsbt</code> (Creator, Updater)</strong> is a wallet RPC that creates a
PSBT with the specified inputs and outputs, adds additional inputs and change
to it to balance it out, and adds relevant metadata. In particular, for inputs
that the wallet knows about (counting towards its normal or watch-only
balance), UTXO information will be added. For outputs and inputs with UTXO
information present, key and script information will be added which the wallet
knows about. It is equivalent to running <code class="language-text highlighter-rouge">createrawtransaction</code>, followed by
<code class="language-text highlighter-rouge">fundrawtransaction</code>, and <code class="language-text highlighter-rouge">converttopsbt</code>.</li>
    <li><strong><code class="language-text highlighter-rouge">walletprocesspsbt</code> (Updater, Signer, Finalizer)</strong> is a wallet RPC that takes as
input a PSBT, adds UTXO, key, and script data to inputs and outputs that miss
it, and optionally signs inputs. Where possible it also finalizes the partial
signatures.</li>
    <li><strong><code class="language-text highlighter-rouge">finalizepsbt</code> (Finalizer, Extractor)</strong> is a utility RPC that finalizes any
partial signatures, and if all inputs are finalized, converts the result to a
fully signed transaction which can be broadcast with <code class="language-text highlighter-rouge">sendrawtransaction</code>.</li>
    <li><strong><code class="language-text highlighter-rouge">combinepsbt</code> (Combiner)</strong> is a utility RPC that implements a Combiner. It
can be used at any point in the workflow to merge information added to
different versions of the same PSBT. In particular it is useful to combine the
output of multiple Updaters or Signers.</li>
    <li><strong><code class="language-text highlighter-rouge">decodepsbt</code></strong> is a diagnostic utility RPC which will show all information in
a PSBT in human-readable form, as well as compute its eventual fee if known.</li>
  </ul>

  <h2 id="upgrading-non-hd-wallets-to-hd-wallets">Upgrading non-HD wallets to HD wallets</h2>

  <p>Since Bitcoin Core 0.13.0, creating new BIP 32 Hierarchical Deterministic wallets has been supported by Bitcoin Core but old non-HD wallets could not be upgraded to HD. Now non-HD wallets can be upgraded to HD using the <code class="language-text highlighter-rouge">-upgradewallet</code> command line option. This upgrade will result in the all keys in the keypool being marked as used and a new keypool generated. <strong>A new backup must be made when this upgrade is performed.</strong></p>

  <p>Additionally, <code class="language-text highlighter-rouge">-upgradewallet</code> can be used to upgraded from a non-split HD chain (all keys generated with <code class="language-text highlighter-rouge">m/0'/0'/i'</code>) to a split HD chain (receiving keys generated with <code class="language-text highlighter-rouge">'m/0'/0'/i'</code> and change keys generated with <code class="language-text highlighter-rouge">m'/0'/1'/i'</code>). When this upgrade occurs, all keys already in the keypool will remain in the keypool to be used until all keys from before the upgrade are exhausted. This is to avoid issues with backups and downgrades when some keys may come from the change key keypool. Users can begin using the new split HD chain keypools by using the <code class="language-text highlighter-rouge">newkeypool</code> RPC to mark all keys in the keypool as used and begin using a new keypool generated from the split HD chain.</p>

  <h2 id="hd-master-key-rotation">HD Master key rotation</h2>

  <p>A new RPC, <code class="language-text highlighter-rouge">sethdseed</code>, has been introduced which allows users to set a new HD seed or set their own HD seed. This allows for a new HD seed to be used. <strong>A new backup must be made when a new HD seed is set.</strong></p>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li>
      <p>The new RPC <code class="language-text highlighter-rouge">scantxoutset</code> can be used to scan the UTXO set for entries
that match certain output descriptors. Refer to the <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md">output descriptors
reference documentation</a> for more details. This call
is similar to <code class="language-text highlighter-rouge">listunspent</code> but does not use a wallet, meaning that the
wallet can be disabled at compile or run time. This call is experimental,
as such, is subject to changes or removal in future releases.</p>
    </li>
    <li>The <code class="language-text highlighter-rouge">createrawtransaction</code> RPC will now accept an array or dictionary (kept for compatibility) for the <code class="language-text highlighter-rouge">outputs</code> parameter. This means the order of transaction outputs can be specified by the client.</li>
    <li>The <code class="language-text highlighter-rouge">fundrawtransaction</code> RPC will reject the previously deprecated <code class="language-text highlighter-rouge">reserveChangeKey</code> option.</li>
    <li><code class="language-text highlighter-rouge">sendmany</code> now shuffles outputs to improve privacy, so any previously expected behavior with regards to output ordering can no longer be relied upon.</li>
    <li>The new RPC <code class="language-text highlighter-rouge">testmempoolaccept</code> can be used to test acceptance of a transaction to the mempool without adding it.</li>
    <li>JSON transaction decomposition now includes a <code class="language-text highlighter-rouge">weight</code> field which provides
the transaction’s exact weight. This is included in REST /rest/tx/ and
/rest/block/ endpoints when in json mode. This is also included in <code class="language-text highlighter-rouge">getblock</code>
(with verbosity=2), <code class="language-text highlighter-rouge">listsinceblock</code>, <code class="language-text highlighter-rouge">listtransactions</code>, and
<code class="language-text highlighter-rouge">getrawtransaction</code> RPC commands.</li>
    <li>New <code class="language-text highlighter-rouge">fees</code> field introduced in <code class="language-text highlighter-rouge">getrawmempool</code>, <code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code> and
 <code class="language-text highlighter-rouge">getmempoolentry</code> when verbosity is set to <code class="language-text highlighter-rouge">true</code> with sub-fields <code class="language-text highlighter-rouge">ancestor</code>, <code class="language-text highlighter-rouge">base</code>, <code class="language-text highlighter-rouge">modified</code>
 and <code class="language-text highlighter-rouge">descendant</code> denominated in BTC. This new field deprecates previous fee fields, such as
 <code class="language-text highlighter-rouge">fee</code>, <code class="language-text highlighter-rouge">modifiedfee</code>, <code class="language-text highlighter-rouge">ancestorfee</code> and <code class="language-text highlighter-rouge">descendantfee</code>.</li>
    <li>The new RPC <code class="language-text highlighter-rouge">getzmqnotifications</code> returns information about active ZMQ
notifications.</li>
    <li>When bitcoin is not started with any <code class="language-text highlighter-rouge">-wallet=&lt;path&gt;</code> options, the name of
the default wallet returned by <code class="language-text highlighter-rouge">getwalletinfo</code> and <code class="language-text highlighter-rouge">listwallets</code> RPCs is
now the empty string <code class="language-text highlighter-rouge">""</code> instead of <code class="language-text highlighter-rouge">"wallet.dat"</code>. If bitcoin is started
with any <code class="language-text highlighter-rouge">-wallet=&lt;path&gt;</code> options, there is no change in behavior, and the
name of any wallet is just its <code class="language-text highlighter-rouge">&lt;path&gt;</code> string.</li>
    <li>
      <p>Passing an empty string (<code class="language-text highlighter-rouge">""</code>) as the <code class="language-text highlighter-rouge">address_type</code> parameter to
<code class="language-text highlighter-rouge">getnewaddress</code>, <code class="language-text highlighter-rouge">getrawchangeaddress</code>, <code class="language-text highlighter-rouge">addmultisigaddress</code>,
<code class="language-text highlighter-rouge">fundrawtransaction</code> RPCs is now an error. Previously, this would fall back
to using the default address type. It is still possible to pass null or leave
the parameter unset to use the default address type.</p>
    </li>
    <li>
      <p>Bare multisig outputs to our keys are no longer automatically treated as
incoming payments. As this feature was only available for multisig outputs for
which you had all private keys in your wallet, there was generally no use for
them compared to single-key schemes. Furthermore, no address format for such
outputs is defined, and wallet software can’t easily send to it. These outputs
will no longer show up in <code class="language-text highlighter-rouge">listtransactions</code>, <code class="language-text highlighter-rouge">listunspent</code>, or contribute to
your balance, unless they are explicitly watched (using <code class="language-text highlighter-rouge">importaddress</code> or
<code class="language-text highlighter-rouge">importmulti</code> with hex script argument). <code class="language-text highlighter-rouge">signrawtransaction*</code> also still
works for them.</p>
    </li>
    <li>The <code class="language-text highlighter-rouge">getwalletinfo</code> RPC method now returns an <code class="language-text highlighter-rouge">hdseedid</code> value, which is always the same as the incorrectly-named <code class="language-text highlighter-rouge">hdmasterkeyid</code> value. <code class="language-text highlighter-rouge">hdmasterkeyid</code> will be removed in V0.18.</li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getaddressinfo</code> RPC method now returns an <code class="language-text highlighter-rouge">hdseedid</code> value, which is always the same as the incorrectly-named <code class="language-text highlighter-rouge">hdmasterkeyid</code> value. <code class="language-text highlighter-rouge">hdmasterkeyid</code> will be removed in V0.18.</p>
    </li>
    <li>Parts of the <code class="language-text highlighter-rouge">validateaddress</code> RPC method have been deprecated and moved to
<code class="language-text highlighter-rouge">getaddressinfo</code>. Clients must transition to using <code class="language-text highlighter-rouge">getaddressinfo</code> to access
this information before upgrading to v0.18. The following deprecated fields
have moved to <code class="language-text highlighter-rouge">getaddressinfo</code> and will only be shown with
<code class="language-text highlighter-rouge">-deprecatedrpc=validateaddress</code>: <code class="language-text highlighter-rouge">ismine</code>, <code class="language-text highlighter-rouge">iswatchonly</code>, <code class="language-text highlighter-rouge">script</code>, <code class="language-text highlighter-rouge">hex</code>,
<code class="language-text highlighter-rouge">pubkeys</code>, <code class="language-text highlighter-rouge">sigsrequired</code>, <code class="language-text highlighter-rouge">pubkey</code>, <code class="language-text highlighter-rouge">addresses</code>, <code class="language-text highlighter-rouge">embedded</code>, <code class="language-text highlighter-rouge">iscompressed</code>,
<code class="language-text highlighter-rouge">account</code>, <code class="language-text highlighter-rouge">timestamp</code>, <code class="language-text highlighter-rouge">hdkeypath</code>, <code class="language-text highlighter-rouge">hdmasterkeyid</code>.</li>
    <li><code class="language-text highlighter-rouge">signrawtransaction</code> is deprecated and will be fully removed in v0.18. To use
<code class="language-text highlighter-rouge">signrawtransaction</code> in v0.17, restart bitcoind with
<code class="language-text highlighter-rouge">-deprecatedrpc=signrawtransaction</code>. Projects should transition to using
<code class="language-text highlighter-rouge">signrawtransactionwithkey</code> and <code class="language-text highlighter-rouge">signrawtransactionwithwallet</code> before
upgrading to v0.18.</li>
  </ul>

  <h2 id="other-api-changes">Other API changes</h2>

  <ul>
    <li>The <code class="language-text highlighter-rouge">inactivehdmaster</code> property in the <code class="language-text highlighter-rouge">dumpwallet</code> output has been corrected to <code class="language-text highlighter-rouge">inactivehdseed</code></li>
  </ul>

  <h3 id="logging">Logging</h3>

  <ul>
    <li>
      <p>The log timestamp format is now ISO 8601 (e.g. “2018-02-28T12:34:56Z”).</p>
    </li>
    <li>
      <p>When running bitcoind with <code class="language-text highlighter-rouge">-debug</code> but without <code class="language-text highlighter-rouge">-daemon</code>, logging to stdout
is now the default behavior. Setting <code class="language-text highlighter-rouge">-printtoconsole=1</code> no longer implicitly
disables logging to debug.log. Instead, logging to file can be explicitly disabled
by setting <code class="language-text highlighter-rouge">-debuglogfile=0</code>.</p>
    </li>
  </ul>

  <h2 id="transaction-index-changes">Transaction index changes</h2>

  <p>The transaction index is now built separately from the main node procedure,
meaning the <code class="language-text highlighter-rouge">-txindex</code> flag can be toggled without a full reindex. If bitcoind
is run with <code class="language-text highlighter-rouge">-txindex</code> on a node that is already partially or fully synced
without one, the transaction index will be built in the background and become
available once caught up. When switching from running <code class="language-text highlighter-rouge">-txindex</code> to running
without the flag, the transaction index database will <em>not</em> be deleted
automatically, meaning it could be turned back on at a later time without a full
resync.</p>

  <h2 id="miner-block-size-removed">Miner block size removed</h2>

  <p>The <code class="language-text highlighter-rouge">-blockmaxsize</code> option for miners to limit their blocks’ sizes was
deprecated in V0.15.1, and has now been removed. Miners should use the
<code class="language-text highlighter-rouge">-blockmaxweight</code> option if they want to limit the weight of their blocks.</p>

  <h2 id="python-support">Python Support</h2>

  <p>Support for Python 2 has been discontinued for all test files and tools.</p>

  <h1 id="change-log">0.17.0 change log</h1>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#12204 <code class="language-text highlighter-rouge">3fa24bb</code> Fix overly eager BIP30 bypass (morcos)</li>
  </ul>

  <h3 id="policy">Policy</h3>
  <ul>
    <li>#12568 <code class="language-text highlighter-rouge">ed6ae80</code> Allow dustrelayfee to be set to zero (luke-jr)</li>
    <li>#13120 <code class="language-text highlighter-rouge">ca2a233</code> Treat segwit as always active (MarcoFalke)</li>
    <li>#13096 <code class="language-text highlighter-rouge">062738c</code> Fix <code class="language-text highlighter-rouge">MAX_STANDARD_TX_WEIGHT</code> check (jl2012)</li>
  </ul>

  <h3 id="mining">Mining</h3>
  <ul>
    <li>#12693 <code class="language-text highlighter-rouge">df529dc</code> Remove unused variable in SortForBlock (drewx2)</li>
    <li>#12448 <code class="language-text highlighter-rouge">84efa9a</code> Interrupt block generation on shutdown request (promag)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#12225 <code class="language-text highlighter-rouge">67447ba</code> Mempool cleanups (sdaftuar)</li>
    <li>#12356 <code class="language-text highlighter-rouge">fd65937</code> Fix ‘mempool min fee not met’ debug output (Empact)</li>
    <li>#12287 <code class="language-text highlighter-rouge">bf3353d</code> Optimise lock behaviour for GuessVerificationProgress() (jonasschnelli)</li>
    <li>#11889 <code class="language-text highlighter-rouge">47a7666</code> Drop extra script variable in ProduceSignature (ryanofsky)</li>
    <li>#11880 <code class="language-text highlighter-rouge">d59b8d6</code> Stop special-casing phashBlock handling in validation for TBV (TheBlueMatt)</li>
    <li>#12431 <code class="language-text highlighter-rouge">947c25e</code> Only call NotifyBlockTip when chainActive changes (jamesob)</li>
    <li>#12653 <code class="language-text highlighter-rouge">534b8fa</code> Allow to optional specify the directory for the blocks storage (jonasschnelli)</li>
    <li>#12172 <code class="language-text highlighter-rouge">3b62a91</code> Bugfix: RPC: savemempool: Don’t save until LoadMempool() is finished (jtimon)</li>
    <li>#12167 <code class="language-text highlighter-rouge">88430cb</code> Make segwit failure due to <code class="language-text highlighter-rouge">CLEANSTACK</code> violation return a <code class="language-text highlighter-rouge">SCRIPT_ERR_CLEANSTACK</code> error code (maaku)</li>
    <li>#12561 <code class="language-text highlighter-rouge">24133b1</code> Check for block corruption in ConnectBlock() (sdaftuar)</li>
    <li>#11617 <code class="language-text highlighter-rouge">1b5723e</code> Avoid lock: Call FlushStateToDisk(…) regardless of fCheckForPruning (practicalswift)</li>
    <li>#11739 <code class="language-text highlighter-rouge">0a8b7b4</code> Enforce <code class="language-text highlighter-rouge">SCRIPT_VERIFY_P2SH</code> and <code class="language-text highlighter-rouge">SCRIPT_VERIFY_WITNESS</code> from genesis (sdaftuar)</li>
    <li>#12885 <code class="language-text highlighter-rouge">a49381d</code> Reduce implementation code inside CScript (sipa)</li>
    <li>#13032 <code class="language-text highlighter-rouge">34dd1a6</code> Output values for “min relay fee not met” error (kristapsk)</li>
    <li>#13033 <code class="language-text highlighter-rouge">a07e8ca</code> Build txindex in parallel with validation (jimpo)</li>
    <li>#13080 <code class="language-text highlighter-rouge">66cc47b</code> Add compile time checking for ::mempool.cs runtime locking assertions (practicalswift)</li>
    <li>#13185 <code class="language-text highlighter-rouge">08c1caf</code> Bugfix: the end of a reorged chain is invalid when connect fails (sipa)</li>
    <li>#11689 <code class="language-text highlighter-rouge">0264836</code> Fix missing locking in CTxMemPool::check(…) and CTxMemPool::setSanityCheck(…) (practicalswift)</li>
    <li>#13011 <code class="language-text highlighter-rouge">3c2a41a</code> Cache witness hash in CTransaction (MarcoFalke)</li>
    <li>#13191 <code class="language-text highlighter-rouge">0de7cc8</code> Specialized double-SHA256 with 64 byte inputs with SSE4.1 and AVX2 (sipa)</li>
    <li>#13243 <code class="language-text highlighter-rouge">ea263e1</code> Make reusable base class for auxiliary indices (jimpo)</li>
    <li>#13393 <code class="language-text highlighter-rouge">a607d23</code> Enable double-SHA256-for-64-byte code on 32-bit x86 (sipa)</li>
    <li>#13428 <code class="language-text highlighter-rouge">caabdea</code> validation: check the specified number of blocks (off-by-one) (kallewoof)</li>
    <li>#13438 <code class="language-text highlighter-rouge">450055b</code> Improve coverage of SHA256 SelfTest code (sipa)</li>
    <li>#13431 <code class="language-text highlighter-rouge">954f4a9</code> validation: count blocks correctly for check level &lt; 3 (kallewoof)</li>
    <li>#13386 <code class="language-text highlighter-rouge">3a3eabe</code> SHA256 implementations based on Intel SHA Extensions (sipa)</li>
    <li>#11658 <code class="language-text highlighter-rouge">9a1ad2c</code> During IBD, when doing pruning, prune 10% extra to avoid pruning again soon after (luke-jr)</li>
    <li>#13794 <code class="language-text highlighter-rouge">8ce55df</code> chainparams: Update with data from assumed valid chain (MarcoFalke)</li>
    <li>#13527 <code class="language-text highlighter-rouge">e7ea858</code> Remove promiscuousmempoolflags (MarcoFalke)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#12342 <code class="language-text highlighter-rouge">eaeaa2d</code> Extend #11583 (“Do not make it trivial for inbound peers to generate log entries”) to include “version handshake timeout” message (clemtaylor)</li>
    <li>#12218 <code class="language-text highlighter-rouge">9a32114</code> Move misbehaving logging to net logging category (laanwj)</li>
    <li>#10387 <code class="language-text highlighter-rouge">5c2aff8</code> Eventually connect to <code class="language-text highlighter-rouge">NODE_NETWORK_LIMITED</code> peers (jonasschnelli)</li>
    <li>#9037 <code class="language-text highlighter-rouge">a36834f</code> Add test-before-evict discipline to addrman (EthanHeilman)</li>
    <li>#12622 <code class="language-text highlighter-rouge">e1d6e2a</code> Correct addrman logging (laanwj)</li>
    <li>#11962 <code class="language-text highlighter-rouge">0a01843</code> add seed.bitcoin.sprovoost.nl to DNS seeds (Sjors)</li>
    <li>#12569 <code class="language-text highlighter-rouge">23e7fe8</code> Increase signal-to-noise ratio in debug.log by adjusting log level when logging failed non-manual connect():s (practicalswift)</li>
    <li>#12855 <code class="language-text highlighter-rouge">c199869</code> Minor accumulated cleanups (tjps)</li>
    <li>#13153 <code class="language-text highlighter-rouge">ef46c99</code> Add missing newlines to debug logging (laanwj)</li>
    <li>#13162 <code class="language-text highlighter-rouge">a174702</code> Don’t incorrectly log that REJECT messages are unknown (jnewbery)</li>
    <li>#13151 <code class="language-text highlighter-rouge">7f4db9a</code> Serve blocks directly from disk when possible (laanwj)</li>
    <li>#13134 <code class="language-text highlighter-rouge">70d3541</code> Add option <code class="language-text highlighter-rouge">-enablebip61</code> to configure sending of BIP61 notifications (laanwj)</li>
    <li>#13532 <code class="language-text highlighter-rouge">7209fec</code> Log warning when deprecated network name ‘tor’ is used (wodry)</li>
    <li>#13615 <code class="language-text highlighter-rouge">172f984</code> Remove unused interrupt from SendMessages (fanquake)</li>
    <li>#13417 <code class="language-text highlighter-rouge">1e90862</code> Tighten scope in <code class="language-text highlighter-rouge">net_processing</code> (skeees)</li>
    <li>#13298 <code class="language-text highlighter-rouge">f8d470e</code> Bucketing INV delays (1 bucket) for incoming connections to hide tx time (naumenkogs)</li>
    <li>#13672 <code class="language-text highlighter-rouge">0d8d6be</code> Modified <code class="language-text highlighter-rouge">in_addr6</code> cast in CConman class to work with msvc (sipsorcery)</li>
    <li>#11637 <code class="language-text highlighter-rouge">c575260</code> Remove dead service bits code (MarcoFalke)</li>
    <li>#13212 <code class="language-text highlighter-rouge">a6f00ce</code> Fixed a race condition when disabling the network (lmanners)</li>
    <li>#13656 <code class="language-text highlighter-rouge">1211b15</code> Remove the boost/algorithm/string/predicate.hpp dependency (251Labs)</li>
    <li>#13423 <code class="language-text highlighter-rouge">f58674a</code> Thread safety annotations in <code class="language-text highlighter-rouge">net_processing</code> (skeees)</li>
    <li>#13776 <code class="language-text highlighter-rouge">7d36237</code> Add missing verification of IPv6 address in CNetAddr::GetIn6Addr(…) (practicalswift)</li>
    <li>#13907 <code class="language-text highlighter-rouge">48bf8ff</code> Introduce a maximum size for locators (gmaxwell)</li>
    <li>#13951 <code class="language-text highlighter-rouge">8a9ffec</code> Hardcoded seeds update pre-0.17 branch (laanwj)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#12330 <code class="language-text highlighter-rouge">2a30e67</code> Reduce scope of <code class="language-text highlighter-rouge">cs_main</code> and <code class="language-text highlighter-rouge">cs_wallet</code> locks in listtransactions (promag)</li>
    <li>#12298 <code class="language-text highlighter-rouge">a1ffddb</code> Refactor HaveKeys to early return on false result (promag)</li>
    <li>#12282 <code class="language-text highlighter-rouge">663911e</code> Disallow abandon of conflicted txes (MarcoFalke)</li>
    <li>#12333 <code class="language-text highlighter-rouge">d405bee</code> Make CWallet::ListCoins atomic (promag)</li>
    <li>#12296 <code class="language-text highlighter-rouge">8e6f9f4</code> Only fee-bump non-conflicted/non-confirmed txes (MarcoFalke)</li>
    <li>#11866 <code class="language-text highlighter-rouge">6bb9c13</code> Do not un-mark fInMempool on wallet txn if ATMP fails (TheBlueMatt)</li>
    <li>#11882 <code class="language-text highlighter-rouge">987a809</code> Disable default fallbackfee on mainnet (jonasschnelli)</li>
    <li>#9991 <code class="language-text highlighter-rouge">4ca7c1e</code> listreceivedbyaddress Filter Address (NicolasDorier)</li>
    <li>#11687 <code class="language-text highlighter-rouge">98bc27f</code> External wallet files (ryanofsky)</li>
    <li>#12658 <code class="language-text highlighter-rouge">af88094</code> Sanitize some wallet serialization (sipa)</li>
    <li>#9680 <code class="language-text highlighter-rouge">6acd870</code> Unify CWalletTx construction (ryanofsky)</li>
    <li>#10637 <code class="language-text highlighter-rouge">e057589</code> Coin Selection with Murch’s algorithm (achow101, Xekyo)</li>
    <li>#12408 <code class="language-text highlighter-rouge">c39dd2e</code> Change output type globals to members (MarcoFalke)</li>
    <li>#12694 <code class="language-text highlighter-rouge">9552dfb</code> Actually disable BnB when there are preset inputs (achow101)</li>
    <li>#11536 <code class="language-text highlighter-rouge">cead84b</code> Rename account to label where appropriate (ryanofsky)</li>
    <li>#12709 <code class="language-text highlighter-rouge">02b7e83</code> shuffle sendmany recipients ordering (instagibbs)</li>
    <li>#12699 <code class="language-text highlighter-rouge">c948dc8</code> Shuffle transaction inputs before signing (instagibbs)</li>
    <li>#10762 <code class="language-text highlighter-rouge">6d53663</code> Remove Wallet dependencies from init.cpp (jnewbery)</li>
    <li>#12857 <code class="language-text highlighter-rouge">821980c</code> Avoid travis lint-include-guards error (ken2812221)</li>
    <li>#12702 <code class="language-text highlighter-rouge">dab0d68</code> importprivkey: hint about importmulti (kallewoof)</li>
    <li>#12836 <code class="language-text highlighter-rouge">9abdb7c</code> Make WalletInitInterface and DummyWalletInit private, fix nullptr deref (promag)</li>
    <li>#12785 <code class="language-text highlighter-rouge">215158a</code> Initialize <code class="language-text highlighter-rouge">m_last_block_processed</code> to nullptr (practicalswift)</li>
    <li>#12932 <code class="language-text highlighter-rouge">8d651ae</code> Remove redundant lambda function arg in handleTransactionChanged (laanwj)</li>
    <li>#12749 <code class="language-text highlighter-rouge">a84b056</code> feebumper: discard change outputs below discard rate (instagibbs)</li>
    <li>#12892 <code class="language-text highlighter-rouge">9b3370d</code> introduce ‘label’ API for wallet (jnewbery)</li>
    <li>#12925 <code class="language-text highlighter-rouge">6d3de17</code> Logprint the start of a rescan (jonasschnelli)</li>
    <li>#12888 <code class="language-text highlighter-rouge">39439e5</code> debug log number of unknown wallet records on load (instagibbs)</li>
    <li>#12977 <code class="language-text highlighter-rouge">434150a</code> Refactor <code class="language-text highlighter-rouge">g_wallet_init_interface</code> to const reference (promag)</li>
    <li>#13017 <code class="language-text highlighter-rouge">65d7083</code> Add wallets management functions (promag)</li>
    <li>#12953 <code class="language-text highlighter-rouge">d1d54ae</code> Deprecate accounts (jnewbery)</li>
    <li>#12909 <code class="language-text highlighter-rouge">476cb35</code> Make fee settings to be non-static members (MarcoFalke)</li>
    <li>#13002 <code class="language-text highlighter-rouge">487dcbe</code> Do not treat bare multisig outputs as IsMine unless watched (sipa)</li>
    <li>#13028 <code class="language-text highlighter-rouge">783bb64</code> Make vpwallets usage thread safe (promag)</li>
    <li>#12507 <code class="language-text highlighter-rouge">2afdc29</code> Interrupt rescan on shutdown request (promag)</li>
    <li>#12729 <code class="language-text highlighter-rouge">979150b</code> Get rid of ambiguous OutputType::NONE value (ryanofsky)</li>
    <li>#13079 <code class="language-text highlighter-rouge">5778d44</code> Fix rescanblockchain rpc to properly report progress (Empact)</li>
    <li>#12560 <code class="language-text highlighter-rouge">e03c0db</code> Upgrade path for non-HD wallets to HD (achow101)</li>
    <li>#13161 <code class="language-text highlighter-rouge">7cc1bd3</code> Reset BerkeleyDB handle after connection fails (real-or-random)</li>
    <li>#13081 <code class="language-text highlighter-rouge">0dec5b5</code> Add compile time checking for <code class="language-text highlighter-rouge">cs_wallet</code> runtime locking assertions (practicalswift)</li>
    <li>#13127 <code class="language-text highlighter-rouge">19a3a9e</code> Add Clang thread safety annotations for variables guarded by <code class="language-text highlighter-rouge">cs_db</code> (practicalswift)</li>
    <li>#10740 <code class="language-text highlighter-rouge">4cfe17c</code> <code class="language-text highlighter-rouge">loadwallet</code> RPC - load wallet at runtime (jnewbery)</li>
    <li>#12924 <code class="language-text highlighter-rouge">6738813</code> Fix hdmaster-key / seed-key confusion (scripted diff) (jnewbery)</li>
    <li>#13297 <code class="language-text highlighter-rouge">d82c5d1</code> Fix incorrect comment for DeriveNewSeed (jnewbery)</li>
    <li>#13063 <code class="language-text highlighter-rouge">6378eef</code> Use shared pointer to retain wallet instance (promag)</li>
    <li>#13142 <code class="language-text highlighter-rouge">56fe3dc</code> Separate IsMine from solvability (sipa)</li>
    <li>#13194 <code class="language-text highlighter-rouge">fd96d54</code> Remove template matching and pseudo opcodes (sipa)</li>
    <li>#13252 <code class="language-text highlighter-rouge">c4cc8d9</code> Refactor ReserveKeyFromKeyPool for safety (Empact)</li>
    <li>#13058 <code class="language-text highlighter-rouge">343d4e4</code> <code class="language-text highlighter-rouge">createwallet</code> RPC - create new wallet at runtime (jnewbery)</li>
    <li>#13351 <code class="language-text highlighter-rouge">2140f6c</code> Prevent segfault when sending to unspendable witness (MarcoFalke)</li>
    <li>#13060 <code class="language-text highlighter-rouge">3f0f394</code> Remove getlabeladdress RPC (jnewbery)</li>
    <li>#13111 <code class="language-text highlighter-rouge">000abbb</code> Add unloadwallet RPC (promag)</li>
    <li>#13160 <code class="language-text highlighter-rouge">868cf43</code> Unlock spent outputs (promag)</li>
    <li>#13498 <code class="language-text highlighter-rouge">f54f373</code> Fixups from account API deprecation (jnewbery)</li>
    <li>#13491 <code class="language-text highlighter-rouge">61a044a</code> Improve handling of INVALID in IsMine (sipa)</li>
    <li>#13425 <code class="language-text highlighter-rouge">028b0d9</code> Moving final scriptSig construction from CombineSignatures to ProduceSignature (PSBT signer logic) (achow101)</li>
    <li>#13564 <code class="language-text highlighter-rouge">88a15eb</code> loadwallet shouldn’t create new wallets (jnewbery)</li>
    <li>#12944 <code class="language-text highlighter-rouge">619cd29</code> ScanforWalletTransactions should mark input txns as dirty (instagibbs)</li>
    <li>#13630 <code class="language-text highlighter-rouge">d6b2235</code> Drop unused pindexRet arg to CMerkleTx::GetDepthInMainChain (Empact)</li>
    <li>#13566 <code class="language-text highlighter-rouge">ad552a5</code> Fix get balance (jnewbery)</li>
    <li>#13500 <code class="language-text highlighter-rouge">4a3e8c5</code> Decouple wallet version from client version (achow101)</li>
    <li>#13712 <code class="language-text highlighter-rouge">aba2e66</code> Fix non-determinism in ParseHDKeypath(…). Avoid using an uninitialized variable in path calculation (practicalswift)</li>
    <li>#9662 <code class="language-text highlighter-rouge">6b6e854</code> Add createwallet “disableprivatekeys” option: a sane mode for watchonly-wallets (jonasschnelli)</li>
    <li>#13683 <code class="language-text highlighter-rouge">e8c7434</code> Introduce assertion to document the assumption that cache and cache_used are always set in tandem (practicalswift)</li>
    <li>#12257 <code class="language-text highlighter-rouge">5f7575e</code> Use destination groups instead of coins in coin select (kallewoof)</li>
    <li>#13773 <code class="language-text highlighter-rouge">89a116d</code> Fix accidental use of the comma operator (practicalswift)</li>
    <li>#13805 <code class="language-text highlighter-rouge">c88529a</code> Correctly limit output group size (sdaftuar)</li>
    <li>#12992 <code class="language-text highlighter-rouge">26f59f5</code> Add wallet name to log messages (PierreRochard)</li>
    <li>#13667 <code class="language-text highlighter-rouge">b81a8a5</code> Fix backupwallet for multiwallets (domob1812)</li>
    <li>#13657 <code class="language-text highlighter-rouge">51c693d</code> assert to ensure accuracy of CMerkleTx::GetBlocksToMaturity (Empact)</li>
    <li>#13812 <code class="language-text highlighter-rouge">9d86aad</code> sum ancestors rather than taking max in output groups (kallewoof)</li>
    <li>#13876 <code class="language-text highlighter-rouge">8eb9870</code> Catch <code class="language-text highlighter-rouge">filesystem_error</code> and raise <code class="language-text highlighter-rouge">InitError</code> (MarcoFalke)</li>
    <li>#13808 <code class="language-text highlighter-rouge">13d51a2</code> shuffle coins before grouping, where warranted (kallewoof)</li>
    <li>#13666 <code class="language-text highlighter-rouge">2115cba</code> Always create signatures with Low R values (achow101)</li>
    <li>#13917 <code class="language-text highlighter-rouge">0333914</code> Additional safety checks in PSBT signer (sipa)</li>
    <li>#13968 <code class="language-text highlighter-rouge">65e7a8b</code> couple of walletcreatefundedpsbt fixes (instagibbs)</li>
    <li>#14055 <code class="language-text highlighter-rouge">2307a6e</code> fix walletcreatefundedpsbt deriv paths, add test (instagibbs)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#12336 <code class="language-text highlighter-rouge">3843780</code> Remove deprecated rpc options (jnewbery)</li>
    <li>#12193 <code class="language-text highlighter-rouge">5dc00f6</code> Consistently use UniValue.pushKV instead of push_back(Pair()) (karel-3d) (MarcoFalke)</li>
    <li>#12409 <code class="language-text highlighter-rouge">0cc45ed</code> Reject deprecated reserveChangeKey in fundrawtransaction (MarcoFalke)</li>
    <li>#10583 <code class="language-text highlighter-rouge">8a98dfe</code> Split part of validateaddress into getaddressinfo (achow101)</li>
    <li>#10579 <code class="language-text highlighter-rouge">ffc6e48</code> Split signrawtransaction into wallet and non-wallet RPC command (achow101)</li>
    <li>#12494 <code class="language-text highlighter-rouge">e4ffcac</code> Declare CMutableTransaction a struct in rawtransaction.h (Empact)</li>
    <li>#12503 <code class="language-text highlighter-rouge">0e26591</code> createmultisig no longer takes addresses (instagibbs)</li>
    <li>#12083 <code class="language-text highlighter-rouge">228b086</code> Improve getchaintxstats test coverage (promag)</li>
    <li>#12479 <code class="language-text highlighter-rouge">cd5e438</code> Add child transactions to getrawmempool verbose output (conscott)</li>
    <li>#11872 <code class="language-text highlighter-rouge">702e8b7</code> createrawtransaction: Accept sorted outputs (MarcoFalke)</li>
    <li>#12700 <code class="language-text highlighter-rouge">ebdf84c</code> Document RPC method aliasing (ryanofsky)</li>
    <li>#12727 <code class="language-text highlighter-rouge">8ee5c7b</code> Remove unreachable help conditions in rpcwallet.cpp (lutangar)</li>
    <li>#12778 <code class="language-text highlighter-rouge">b648974</code> Add username and ip logging for RPC method requests (GabrielDav)</li>
    <li>#12717 <code class="language-text highlighter-rouge">ac898b6</code> rest: Handle utxo retrieval when ignoring the mempool (romanz)</li>
    <li>#12787 <code class="language-text highlighter-rouge">cd99e5b</code> Adjust ifdef to avoid unreachable code (practicalswift)</li>
    <li>#11742 <code class="language-text highlighter-rouge">18815b4</code> Add testmempoolaccept (MarcoFalke)</li>
    <li>#12942 <code class="language-text highlighter-rouge">fefb817</code> Drop redundant testing of signrawtransaction prevtxs args (Empact)</li>
    <li>#11200 <code class="language-text highlighter-rouge">5f2a399</code> Allow for aborting rescans in the GUI (achow101)</li>
    <li>#12791 <code class="language-text highlighter-rouge">3a8a4dc</code> Expose a transaction’s weight via RPC (TheBlueMatt)</li>
    <li>#12436 <code class="language-text highlighter-rouge">6e67754</code> Adds a functional test to validate the transaction version number in the RPC output (251Labs)</li>
    <li>#12240 <code class="language-text highlighter-rouge">6f8b345</code> Introduced a new <code class="language-text highlighter-rouge">fees</code> structure that aggregates all sub-field fee types denominated in BTC (mryandao)</li>
    <li>#12321 <code class="language-text highlighter-rouge">eac067a</code> p2wsh and p2sh-p2wsh address in decodescript (fivepiece)</li>
    <li>#13090 <code class="language-text highlighter-rouge">17266a1</code> Remove Safe mode (achow101, laanwj)</li>
    <li>#12639 <code class="language-text highlighter-rouge">7eb7076</code> Reduce <code class="language-text highlighter-rouge">cs_main</code> lock in listunspent (promag)</li>
    <li>#10267 <code class="language-text highlighter-rouge">7b966d9</code> New -includeconf argument for including external configuration files (kallewoof)</li>
    <li>#10757 <code class="language-text highlighter-rouge">b9551d3</code> Introduce getblockstats to plot things (jtimon)</li>
    <li>#13288 <code class="language-text highlighter-rouge">a589f53</code> Remove the need to include rpc/blockchain.cpp in order to put <code class="language-text highlighter-rouge">GetDifficulty</code> under test (Empact)</li>
    <li>#13394 <code class="language-text highlighter-rouge">e1f8dce</code> cli: Ignore libevent warnings (theuni)</li>
    <li>#13439 <code class="language-text highlighter-rouge">3f398d7</code> Avoid “duplicate” return value for invalid submitblock (TheBlueMatt)</li>
    <li>#13570 <code class="language-text highlighter-rouge">a247594</code> Add new “getzmqnotifications” method (domob1812)</li>
    <li>#13072 <code class="language-text highlighter-rouge">b25a4c2</code> Update createmultisig RPC to support segwit (ajtowns)</li>
    <li>#12196 <code class="language-text highlighter-rouge">8fceae0</code> Add scantxoutset RPC method (jonasschnelli)</li>
    <li>#13557 <code class="language-text highlighter-rouge">b654723</code> BIP 174 PSBT Serializations and RPCs (achow101)</li>
    <li>#13697 <code class="language-text highlighter-rouge">f030410</code> Support output descriptors in scantxoutset (sipa)</li>
    <li>#13927 <code class="language-text highlighter-rouge">bced8ea</code> Use pushKV in some new PSBT RPCs (domob1812)</li>
    <li>#13918 <code class="language-text highlighter-rouge">a9c56b6</code> Replace median fee rate with feerate percentiles in getblockstats (marcinja)</li>
    <li>#13721 <code class="language-text highlighter-rouge">9f23c16</code> Bugfixes for BIP 174 combining and deserialization (achow101)</li>
    <li>#13960 <code class="language-text highlighter-rouge">517010e</code> Fix PSBT deserialization of 0-input transactions (achow101)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#12416 <code class="language-text highlighter-rouge">c997f88</code> Fix Windows build errors introduced in #10498 (practicalswift)</li>
    <li>#11733 <code class="language-text highlighter-rouge">e782099</code> Remove redundant locks (practicalswift)</li>
    <li>#12426 <code class="language-text highlighter-rouge">bfa3911</code> Initialize members in WalletModel (MarcoFalke)</li>
    <li>#12489 <code class="language-text highlighter-rouge">e117cfe</code> Bugfix: respect user defined configuration file (-conf) in QT settings (jonasschnelli)</li>
    <li>#12421 <code class="language-text highlighter-rouge">be263fa</code> navigate to  transaction history page after send (Sjors)</li>
    <li>#12580 <code class="language-text highlighter-rouge">ce56fdd</code> Show a transaction’s virtual size in its details dialog (dooglus)</li>
    <li>#12501 <code class="language-text highlighter-rouge">c8ea91a</code> Improved “custom fee” explanation in tooltip (randolf)</li>
    <li>#12616 <code class="language-text highlighter-rouge">cff95a6</code> Set modal overlay hide button as default (promag)</li>
    <li>#12620 <code class="language-text highlighter-rouge">8a43bdc</code> Remove TransactionTableModel::TxIDRole (promag)</li>
    <li>#12080 <code class="language-text highlighter-rouge">56cc022</code> Add support to search the address book (promag)</li>
    <li>#12621 <code class="language-text highlighter-rouge">2bac3e4</code> Avoid querying unnecessary model data when filtering transactions (promag)</li>
    <li>#12721 <code class="language-text highlighter-rouge">e476826</code> remove “new” button during receive-mode in addressbook (jonasschnelli)</li>
    <li>#12723 <code class="language-text highlighter-rouge">310dc61</code> Qt5: Warning users about invalid-BIP21 URI bitcoin:// (krab)</li>
    <li>#12610 <code class="language-text highlighter-rouge">25cf18f</code> Multiwallet for the GUI (jonasschnelli)</li>
    <li>#12779 <code class="language-text highlighter-rouge">f4353da</code> Remove unused method setupAmountWidget(…) (practicalswift)</li>
    <li>#12795 <code class="language-text highlighter-rouge">68484d6</code> do not truncate .dat extension for wallets in gui (instagibbs)</li>
    <li>#12870 <code class="language-text highlighter-rouge">1d54004</code> make clean removes <code class="language-text highlighter-rouge">src/qt/moc_</code> files (Sjors)</li>
    <li>#13055 <code class="language-text highlighter-rouge">bdda14d</code> Don’t log to console by default (laanwj)</li>
    <li>#13141 <code class="language-text highlighter-rouge">57c57df</code> fixes broken link on readme (marcoagner)</li>
    <li>#12928 <code class="language-text highlighter-rouge">ef006d9</code> Initialize non-static class members that were previously neither initialized where defined nor in constructor (practicalswift)</li>
    <li>#13158 <code class="language-text highlighter-rouge">81c533c</code> Improve sendcoinsdialog readability (marcoagner)</li>
    <li>#11491 <code class="language-text highlighter-rouge">40c34a0</code> Add proxy icon in statusbar (mess110)</li>
    <li>#13264 <code class="language-text highlighter-rouge">2a7c53b</code> Satoshi unit (GreatSock)</li>
    <li>#13097 <code class="language-text highlighter-rouge">e545503</code> Support wallets loaded dynamically (promag)</li>
    <li>#13284 <code class="language-text highlighter-rouge">f8be434</code> fix visual “overflow” of amount input (brandonrninefive)</li>
    <li>#13275 <code class="language-text highlighter-rouge">a315b79</code> use <code class="language-text highlighter-rouge">[default wallet]</code> as name for wallet with no name (jonasschnelli)</li>
    <li>#13273 <code class="language-text highlighter-rouge">3fd0c23</code> Qt/Bugfix: fix handling default wallet with no name (jonasschnelli)</li>
    <li>#13341 <code class="language-text highlighter-rouge">25d2df2</code> Stop translating command line options (laanwj)</li>
    <li>#13043 <code class="language-text highlighter-rouge">6e249e4</code> OptionsDialog: add prune setting (Sjors)</li>
    <li>#13506 <code class="language-text highlighter-rouge">6579d80</code> load wallet in UI after possible init aborts (jonasschnelli)</li>
    <li>#13458 <code class="language-text highlighter-rouge">dc53f7f</code> Drop qt4 support (laanwj)</li>
    <li>#13528 <code class="language-text highlighter-rouge">b877c39</code> Move BitcoinGUI initializers to class, fix initializer order warning (laanwj)</li>
    <li>#13536 <code class="language-text highlighter-rouge">baf3a3a</code> coincontrol: Remove unused qt4 workaround (MarcoFalke)</li>
    <li>#13537 <code class="language-text highlighter-rouge">10ffca7</code> Peer table: Visualize inbound/outbound state for every row (wodry)</li>
    <li>#13791 <code class="language-text highlighter-rouge">2c14c1f</code> Reject dialogs if key escape is pressed (promag)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#12371 <code class="language-text highlighter-rouge">c9ca4f6</code> Add gitian PGP key: akx20000 (ghost)</li>
    <li>#11966 <code class="language-text highlighter-rouge">f4f4f51</code> clientversion: Use full commit hash for commit-based version descriptions (luke-jr)</li>
    <li>#12417 <code class="language-text highlighter-rouge">ae0fbf0</code> Upgrade <code class="language-text highlighter-rouge">mac_alias</code> to 2.0.7 (droark)</li>
    <li>#12444 <code class="language-text highlighter-rouge">1f055ef</code> gitian: Bump descriptors for (0.)17 (theuni)</li>
    <li>#12402 <code class="language-text highlighter-rouge">59e032b</code> expat 2.2.5, ccache 3.4.1, miniupnpc 2.0.20180203 (fanquake)</li>
    <li>#12029 <code class="language-text highlighter-rouge">daa84b3</code> Add a makefile target for Doxygen documentation (Ov3rlo4d)</li>
    <li>#12466 <code class="language-text highlighter-rouge">6645eaf</code> Only use <code class="language-text highlighter-rouge">D_DARWIN_C_SOURCE</code> when building miniupnpc on darwin (fanquake)</li>
    <li>#11986 <code class="language-text highlighter-rouge">765a3eb</code> zeromq 4.2.3 (fanquake)</li>
    <li>#12373 <code class="language-text highlighter-rouge">f13d756</code> Add build support for profiling (murrayn)</li>
    <li>#12631 <code class="language-text highlighter-rouge">a312e20</code> gitian: Alphabetize signing keys &amp; add kallewoof key (kallewoof)</li>
    <li>#12607 <code class="language-text highlighter-rouge">29fad97</code> Remove ccache (fanquake)</li>
    <li>#12625 <code class="language-text highlighter-rouge">c4219ff</code> biplist 1.0.3 (fanquake)</li>
    <li>#12666 <code class="language-text highlighter-rouge">05042d3</code> configure: UniValue 1.0.4 is required for pushKV(, bool) (luke-jr)</li>
    <li>#12678 <code class="language-text highlighter-rouge">6324c68</code> Fix a few compilation issues with Clang 7 and -Werror (vasild)</li>
    <li>#12692 <code class="language-text highlighter-rouge">de6bdfd</code> Add configure options for various -fsanitize flags (eklitzke)</li>
    <li>#12901 <code class="language-text highlighter-rouge">7e23972</code> Show enabled sanitizers in configure output (practicalswift)</li>
    <li>#12899 <code class="language-text highlighter-rouge">3076993</code> macOS: Prevent Xcode 9.3 build warnings (AkioNak)</li>
    <li>#12715 <code class="language-text highlighter-rouge">8fd6243</code> Add ‘make clean’ rule (hkjn)</li>
    <li>#13133 <code class="language-text highlighter-rouge">a024a18</code> Remove python2 from configure.ac (ken2812221)</li>
    <li>#13005 <code class="language-text highlighter-rouge">cb088b1</code> Make –enable-debug to pick better options (practicalswift)</li>
    <li>#13254 <code class="language-text highlighter-rouge">092b366</code> Remove improper <code class="language-text highlighter-rouge">qt/moc_*</code> cleaning glob from the general Makefile (Empact)</li>
    <li>#13306 <code class="language-text highlighter-rouge">f5a7733</code> split warnings out of CXXFLAGS (theuni)</li>
    <li>#13385 <code class="language-text highlighter-rouge">7c7508c</code> Guard against accidental introduction of new Boost dependencies (practicalswift)</li>
    <li>#13041 <code class="language-text highlighter-rouge">5779dc4</code> Add linter checking for accidental introduction of locale dependence (practicalswift)</li>
    <li>#13408 <code class="language-text highlighter-rouge">70a03c6</code> crypto: cleanup sha256 build (theuni)</li>
    <li>#13435 <code class="language-text highlighter-rouge">cf7ca60</code> When build fails due to lib missing, indicate which one (Empact)</li>
    <li>#13445 <code class="language-text highlighter-rouge">8eb76f3</code> Reset default -g -O2 flags when enable debug (ken2812221)</li>
    <li>#13465 <code class="language-text highlighter-rouge">81069a7</code> Avoid concurrency issue when make multiple target (ken2812221)</li>
    <li>#13454 <code class="language-text highlighter-rouge">45c00f8</code> Make sure <code class="language-text highlighter-rouge">LC_ALL=C</code> is set in all shell scripts (practicalswift)</li>
    <li>#13480 <code class="language-text highlighter-rouge">31145a3</code> Avoid copies in range-for loops and add a warning to detect them (theuni)</li>
    <li>#13486 <code class="language-text highlighter-rouge">66e1a08</code> Move rpc/util.cpp from libbitcoin-util to libbitcoin-server (ken2812221)</li>
    <li>#13580 <code class="language-text highlighter-rouge">40334c7</code> Detect if char equals <code class="language-text highlighter-rouge">int8_t</code> (ken2812221)</li>
    <li>#12788 <code class="language-text highlighter-rouge">287e4ed</code> Tune wildcards for LIBSECP256K1 target (kallewoof)</li>
    <li>#13611 <code class="language-text highlighter-rouge">b55f0c3</code> bugfix: Use <code class="language-text highlighter-rouge">__cpuid_count</code> for gnu C to avoid gitian build fail (ken2812221)</li>
    <li>#12971 <code class="language-text highlighter-rouge">a6d14b1</code> Upgrade Qt to 5.9.6 (TheCharlatan)</li>
    <li>#13543 <code class="language-text highlighter-rouge">6c6a300</code> Add RISC-V support (laanwj)</li>
    <li>#13177 <code class="language-text highlighter-rouge">dcb154e</code> GCC-7 and glibc-2.27 back compat code (ken2812221)</li>
    <li>#13659 <code class="language-text highlighter-rouge">90b1c7e</code> add missing leveldb defines (theuni)</li>
    <li>#13368 <code class="language-text highlighter-rouge">c0f1569</code> Update gitian-build.sh for docker (achow101)</li>
    <li>#13171 <code class="language-text highlighter-rouge">19d8ca5</code> Change gitian-descriptors to use bionic instead (ken2812221)</li>
    <li>#13604 <code class="language-text highlighter-rouge">75bea05</code> Add depends 32-bit arm support for bitcoin-qt (TheCharlatan)</li>
    <li>#13623 <code class="language-text highlighter-rouge">9cdb19f</code> Migrate gitian-build.sh to python (ken2812221)</li>
    <li>#13689 <code class="language-text highlighter-rouge">8c36432</code> disable Werror when building zmq (greenaddress)</li>
    <li>#13617 <code class="language-text highlighter-rouge">cf7f9ae</code> release: Require macos 10.10+ (fanquake)</li>
    <li>#13750 <code class="language-text highlighter-rouge">c883653</code> use MacOS friendly sed syntax in qt.mk (Sjors)</li>
    <li>#13095 <code class="language-text highlighter-rouge">415f2bf</code> update <code class="language-text highlighter-rouge">ax_boost_chrono</code>/<code class="language-text highlighter-rouge">unit_test_framework</code> (fanquake)</li>
    <li>#13732 <code class="language-text highlighter-rouge">e8ffec6</code> Fix Qt’s rcc determinism (Fuzzbawls)</li>
    <li>#13782 <code class="language-text highlighter-rouge">8284f1d</code> Fix osslsigncode compile issue in gitian-build (ken2812221)</li>
    <li>#13696 <code class="language-text highlighter-rouge">2ab7208</code> Add aarch64 qt depends support for cross compiling bitcoin-qt (TheCharlatan)</li>
    <li>#13705 <code class="language-text highlighter-rouge">b413ba0</code> Add format string linter (practicalswift)</li>
    <li>#14000 <code class="language-text highlighter-rouge">48c8459</code> fix qt determinism (theuni)</li>
    <li>#14018 <code class="language-text highlighter-rouge">3e4829a</code> Bugfix: NSIS: Exclude <code class="language-text highlighter-rouge">Makefile*</code> from docs (luke-jr)</li>
    <li>#12906 <code class="language-text highlighter-rouge">048ac83</code> Avoid <code class="language-text highlighter-rouge">interface</code> keyword to fix windows gitian build (ryanofsky)</li>
    <li>#13314 <code class="language-text highlighter-rouge">a9b6957</code> Fix FreeBSD build by including utilstrencodings.h (laanwj)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#12252 <code class="language-text highlighter-rouge">8d57319</code> Require all tests to follow naming convention (ajtowns)</li>
    <li>#12295 <code class="language-text highlighter-rouge">935eb8d</code> Enable flake8 warnings for all currently non-violated rules (practicalswift)</li>
    <li>#11858 <code class="language-text highlighter-rouge">b4d8549</code> Prepare tests for Windows (MarcoFalke)</li>
    <li>#11771 <code class="language-text highlighter-rouge">2dbc4a4</code> Change invalidtxrequest to use BitcoinTestFramework (jnewbery)</li>
    <li>#12200 <code class="language-text highlighter-rouge">d09968f</code> Bind functional test nodes to 127.0.0.1 (Sjors)</li>
    <li>#12425 <code class="language-text highlighter-rouge">26dc2da</code> Add some script tests (richardkiss)</li>
    <li>#12455 <code class="language-text highlighter-rouge">23481fa</code> Fix bip68 sequence test to reflect updated rpc error message (Empact)</li>
    <li>#12477 <code class="language-text highlighter-rouge">acd1e61</code> Plug memory leaks and stack-use-after-scope (MarcoFalke)</li>
    <li>#12443 <code class="language-text highlighter-rouge">07090c5</code> Move common args to bitcoin.conf (MarcoFalke)</li>
    <li>#12570 <code class="language-text highlighter-rouge">39dcac2</code> Add test cases for HexStr (<code class="language-text highlighter-rouge">std::reverse_iterator</code> and corner cases) (kostaz)</li>
    <li>#12582 <code class="language-text highlighter-rouge">6012f1c</code> Fix ListCoins test failure due to unset <code class="language-text highlighter-rouge">g_wallet_allow_fallback_fee</code> (ryanofsky)</li>
    <li>#12516 <code class="language-text highlighter-rouge">7f99964</code> Avoid unintentional unsigned integer wraparounds in tests (practicalswift)</li>
    <li>#12512 <code class="language-text highlighter-rouge">955fd23</code> Don’t test against the mempool min fee information in mempool_limit.py (Empact)</li>
    <li>#12600 <code class="language-text highlighter-rouge">29088b1</code> Add a test for large tx output scripts with segwit input (richardkiss)</li>
    <li>#12627 <code class="language-text highlighter-rouge">791c3ea</code> Fix some tests to work on native windows (MarcoFalke)</li>
    <li>#12405 <code class="language-text highlighter-rouge">0f58d7f</code> travis: Full clone for git subtree check (MarcoFalke)</li>
    <li>#11772 <code class="language-text highlighter-rouge">0630974</code> Change invalidblockrequest to use BitcoinTestFramework (jnewbery)</li>
    <li>#12681 <code class="language-text highlighter-rouge">1846296</code> Fix ComputeTimeSmart test failure with <code class="language-text highlighter-rouge">-DDEBUG_LOCKORDER</code> (ryanofsky)</li>
    <li>#12682 <code class="language-text highlighter-rouge">9f04c8e</code> travis: Clone depth 1 unless <code class="language-text highlighter-rouge">$check_doc</code> (MarcoFalke)</li>
    <li>#12710 <code class="language-text highlighter-rouge">00d1680</code> Append scripts to new <code class="language-text highlighter-rouge">test_list</code> array to fix bad assignment (jeffrade)</li>
    <li>#12720 <code class="language-text highlighter-rouge">872c921</code> Avoiding ‘file’ function name from python2 (jeffrade)</li>
    <li>#12728 <code class="language-text highlighter-rouge">4ba3d4f</code> rename TestNode to TestP2PConn in tests (jnewbery)</li>
    <li>#12746 <code class="language-text highlighter-rouge">2405ce1</code> Remove unused argument <code class="language-text highlighter-rouge">max_invalid</code> from <code class="language-text highlighter-rouge">check_estimates(…)</code> (practicalswift)</li>
    <li>#12718 <code class="language-text highlighter-rouge">185d484</code> Require exact match in <code class="language-text highlighter-rouge">assert_start_raises_init_eror</code> (jnewbery, MarcoFalke)</li>
    <li>#12076 <code class="language-text highlighter-rouge">6d36f59</code> Use node.datadir instead of tmpdir in test framework (MarcoFalke)</li>
    <li>#12772 <code class="language-text highlighter-rouge">b43aba8</code> ci: Bump travis timeout for make check to 50m (jnewbery)</li>
    <li>#12806 <code class="language-text highlighter-rouge">18606eb</code> Fix function names in <code class="language-text highlighter-rouge">feature_blocksdir</code> (MarcoFalke)</li>
    <li>#12811 <code class="language-text highlighter-rouge">0d8fc8d</code> Make summary row bold-red if any test failed and show failed tests at end of table (laanwj)</li>
    <li>#12790 <code class="language-text highlighter-rouge">490644d</code> Use blockmaxweight where tests previously had blockmaxsize (conscott)</li>
    <li>#11773 <code class="language-text highlighter-rouge">f0f9732</code> Change <code class="language-text highlighter-rouge">feature_block.py</code> to use BitcoinTestFramework (jnewbery)</li>
    <li>#12839 <code class="language-text highlighter-rouge">40f4baf</code> Remove travis checkout depth (laanwj)</li>
    <li>#11817 <code class="language-text highlighter-rouge">2a09a78</code> Change <code class="language-text highlighter-rouge">feature_csv_activation.py</code> to use BitcoinTestFramework (jnewbery)</li>
    <li>#12284 <code class="language-text highlighter-rouge">fa5825d</code> Remove assigned but never used local variables. Enable Travis checking for unused local variables (practicalswift)</li>
    <li>#12719 <code class="language-text highlighter-rouge">9beded5</code> Add note about test suite naming convention in developer-notes.md (practicalswift)</li>
    <li>#12861 <code class="language-text highlighter-rouge">c564424</code> Stop <code class="language-text highlighter-rouge">feature_block.py</code> from blowing up memory (jnewbery)</li>
    <li>#12851 <code class="language-text highlighter-rouge">648252e</code> travis: Run verify-commits only on cron jobs (MarcoFalke)</li>
    <li>#12853 <code class="language-text highlighter-rouge">2106c4c</code> Match full plain text by default (MarcoFalke)</li>
    <li>#11818 <code class="language-text highlighter-rouge">9a2db3b</code> I accidentally (deliberately) killed it (the ComparisonTestFramework) (jnewbery)</li>
    <li>#12766 <code class="language-text highlighter-rouge">69310a3</code> Tidy up REST interface functional tests (romanz)</li>
    <li>#12849 <code class="language-text highlighter-rouge">83c7533</code> Add logging in loops in <code class="language-text highlighter-rouge">p2p_sendhears.py</code> (ccdle12)</li>
    <li>#12895 <code class="language-text highlighter-rouge">d6f10b2</code> Add note about test suite name uniqueness requirement to developer notes (practicalswift)</li>
    <li>#12856 <code class="language-text highlighter-rouge">27278df</code> Add Metaclass for BitcoinTestFramework (WillAyd)</li>
    <li>#12918 <code class="language-text highlighter-rouge">6fc5a05</code> Assert on correct variable (kallewoof)</li>
    <li>#11878 <code class="language-text highlighter-rouge">a04440f</code> Add Travis check for duplicate includes (practicalswift)</li>
    <li>#12917 <code class="language-text highlighter-rouge">cf8073f</code> Windows fixups for functional tests (MarcoFalke)</li>
    <li>#12926 <code class="language-text highlighter-rouge">dd1ca9e</code> Run unit tests in parallel (sipa)</li>
    <li>#12920 <code class="language-text highlighter-rouge">b1fdfc1</code> Fix sign for expected values (kallewoof)</li>
    <li>#12947 <code class="language-text highlighter-rouge">979f598</code> Wallet hd functional test speedup and clarification (instagibbs)</li>
    <li>#12993 <code class="language-text highlighter-rouge">0d69921</code> Remove compatibility code not needed now when we’re on Python 3 (practicalswift)</li>
    <li>#12996 <code class="language-text highlighter-rouge">6a278e0</code> Remove redundant bytes(…) calls (practicalswift)</li>
    <li>#12949 <code class="language-text highlighter-rouge">6b46288</code> Avoid copies of CTransaction (MarcoFalke)</li>
    <li>#13007 <code class="language-text highlighter-rouge">0d12570</code> Fix dangling wallet pointer in vpwallets (promag)</li>
    <li>#13048 <code class="language-text highlighter-rouge">cac6d11</code> Fix <code class="language-text highlighter-rouge">feature_block</code> flakiness (jnewbery)</li>
    <li>#12510 <code class="language-text highlighter-rouge">d5b2e98</code> Add <code class="language-text highlighter-rouge">rpc_bind</code> test to default-run tests (laanwj)</li>
    <li>#13022 <code class="language-text highlighter-rouge">896a9d0</code> Attach node index to <code class="language-text highlighter-rouge">test_node</code> AssertionError and print messages (jamesob)</li>
    <li>#13024 <code class="language-text highlighter-rouge">018c7e5</code> Add rpcauth pair that generated by rpcauth.py (ken2812221)</li>
    <li>#13013 <code class="language-text highlighter-rouge">a0079d4</code> bench: Amend <code class="language-text highlighter-rouge">mempool_eviction</code> test for witness txs (MarcoFalke)</li>
    <li>#13051 <code class="language-text highlighter-rouge">e074097</code> Normalize executable location (MarcoFalke)</li>
    <li>#13056 <code class="language-text highlighter-rouge">106d929</code> Make rpcauth.py testable and add unit tests (nixbox)</li>
    <li>#13073 <code class="language-text highlighter-rouge">a785bc3</code> add rpcauth-test to <code class="language-text highlighter-rouge">AC_CONFIG_LINKS</code> to fix out-of-tree make check (laanwj)</li>
    <li>#12830 <code class="language-text highlighter-rouge">25ad2f7</code> Clarify address book error messages, add tests (jamesob)</li>
    <li>#13082 <code class="language-text highlighter-rouge">24106a8</code> don’t test against min relay fee information in <code class="language-text highlighter-rouge">mining_prioritisetransaction.py</code> (kristapsk)</li>
    <li>#13003 <code class="language-text highlighter-rouge">8d045a0</code> Add test for orphan handling (MarcoFalke)</li>
    <li>#13105 <code class="language-text highlighter-rouge">9e9b48d</code> Add –failfast option to functional test runner (jamesob)</li>
    <li>#13130 <code class="language-text highlighter-rouge">3186ad4</code> Fix race in <code class="language-text highlighter-rouge">rpc_deprecated.py</code> (jnewbery)</li>
    <li>#13136 <code class="language-text highlighter-rouge">baf6b4e</code> Fix flake8 warnings in several wallet functional tests (jnewbery)</li>
    <li>#13094 <code class="language-text highlighter-rouge">bf9b03d</code> Add test for 64-bit Windows PE, modify 32-bit test results (ken2812221)</li>
    <li>#13183 <code class="language-text highlighter-rouge">9458b05</code> travis: New travis job for <code class="language-text highlighter-rouge">check_docs</code> steps (glaksmono)</li>
    <li>#12265 <code class="language-text highlighter-rouge">1834d4d</code> fundrawtransaction: lock watch-only shared address (kallewoof)</li>
    <li>#13188 <code class="language-text highlighter-rouge">4a50ec0</code> Remove unused option –srcdir (MarcoFalke)</li>
    <li>#12755 <code class="language-text highlighter-rouge">612ba35</code> Better stderr testing (jnewbery)</li>
    <li>#13198 <code class="language-text highlighter-rouge">196c5a9</code> Avoid printing to console during cache creation (sdaftuar)</li>
    <li>#13075 <code class="language-text highlighter-rouge">cb9bbf7</code> Remove ‘account’ API from wallet functional tests (jnewbery)</li>
    <li>#13221 <code class="language-text highlighter-rouge">ffa86af</code> travis: Rename the build stage <code class="language-text highlighter-rouge">check_doc</code> to <code class="language-text highlighter-rouge">lint</code> (practicalswift)</li>
    <li>#13205 <code class="language-text highlighter-rouge">3cbd25f</code> Remove spurious error log in <code class="language-text highlighter-rouge">p2p_segwit.py</code> (jnewbery)</li>
    <li>#13291 <code class="language-text highlighter-rouge">536120e</code> Don’t include torcontrol.cpp into the test file (Empact)</li>
    <li>#13281 <code class="language-text highlighter-rouge">2ac6315</code> Move linters to test/lint, add readme (MarcoFalke)</li>
    <li>#13215 <code class="language-text highlighter-rouge">f8a29ca</code> travis: Build tests on ubuntu 18.04 with docker (ken2812221)</li>
    <li>#13349 <code class="language-text highlighter-rouge">24f7011</code> bench: Don’t return a bool from main (laanwj)</li>
    <li>#13347 <code class="language-text highlighter-rouge">87a9d03</code> travis: Skip cache for lint stage (MarcoFalke)</li>
    <li>#13355 <code class="language-text highlighter-rouge">0b1c0c4</code> Fix “gmake check” under OpenBSD 6.3 (probably <code class="language-text highlighter-rouge">*BSD</code>): Avoid using GNU grep specific regexp handling (practicalswift)</li>
    <li>#13353 <code class="language-text highlighter-rouge">d4f6dac</code> Fixup setting of PATH env var (MarcoFalke)</li>
    <li>#13352 <code class="language-text highlighter-rouge">e24bf1c</code> Avoid checking reject code for now (MarcoFalke)</li>
    <li>#13383 <code class="language-text highlighter-rouge">2722a1f</code> bench: Use non-throwing parsedouble(…) instead of throwing boost::lexical_cast&lt;double&gt;(…) (practicalswift)</li>
    <li>#13367 <code class="language-text highlighter-rouge">264efdc</code> Increase includeconf test coverage (MarcoFalke)</li>
    <li>#13404 <code class="language-text highlighter-rouge">3d3d8ae</code> speed up of <code class="language-text highlighter-rouge">tx_validationcache_tests</code> by reusing of CTransaction (lucash-dev)</li>
    <li>#13421 <code class="language-text highlighter-rouge">531a033</code> Remove <code class="language-text highlighter-rouge">portseed_offset</code> from test runner (MarcoFalke)</li>
    <li>#13440 <code class="language-text highlighter-rouge">5315660</code> Log as utf-8 (MarcoFalke)</li>
    <li>#13066 <code class="language-text highlighter-rouge">fa4b906</code> Migrate verify-commits script to python, run in travis (ken2812221)</li>
    <li>#13447 <code class="language-text highlighter-rouge">4b1edd3</code> travis: Increase <code class="language-text highlighter-rouge">travis_wait</code> time while verifying commits (ken2812221)</li>
    <li>#13350 <code class="language-text highlighter-rouge">f532d52</code> Add logging to provide anchor points when debugging p2p_sendheaders (lmanners)</li>
    <li>#13406 <code class="language-text highlighter-rouge">4382f19</code> travis: Change mac goal to all deploy (ken2812221)</li>
    <li>#13457 <code class="language-text highlighter-rouge">b222138</code> Drop variadic macro (MarcoFalke)</li>
    <li>#13512 <code class="language-text highlighter-rouge">3a45493</code> mininode: Expose connection state through <code class="language-text highlighter-rouge">is_connected</code> (MarcoFalke)</li>
    <li>#13496 <code class="language-text highlighter-rouge">9ab4c2a</code> Harden lint-filenames.sh (wodry)</li>
    <li>#13219 <code class="language-text highlighter-rouge">08516e0</code> bench: Add block assemble benchmark (MarcoFalke)</li>
    <li>#13530 <code class="language-text highlighter-rouge">b1dc39d</code> bench: Add missing pow.h header (laanwj)</li>
    <li>#12686 <code class="language-text highlighter-rouge">2643fa5</code> Add -ftrapv to CFLAGS and CXXFLAGS when –enable-debug is used. Enable -ftrapv in Travis (practicalswift)</li>
    <li>#12882 <code class="language-text highlighter-rouge">d96bdd7</code> Make <code class="language-text highlighter-rouge">test_bitcoin</code> pass under ThreadSanitzer (clang). Fix lock-order-inversion (potential deadlock) (practicalswift)</li>
    <li>#13535 <code class="language-text highlighter-rouge">2328039</code> <code class="language-text highlighter-rouge">wallet_basic</code>: Specify minimum required amount for listunspent (MarcoFalke)</li>
    <li>#13551 <code class="language-text highlighter-rouge">c93c360</code> Fix incorrect documentation for test case <code class="language-text highlighter-rouge">cuckoocache_hit_rate_ok</code> (practicalswift)</li>
    <li>#13563 <code class="language-text highlighter-rouge">b330f3f</code> bench: Simplify coinselection (promag)</li>
    <li>#13517 <code class="language-text highlighter-rouge">a6ed99a</code> Remove need to handle the network thread in tests (MarcoFalke)</li>
    <li>#13522 <code class="language-text highlighter-rouge">686e97a</code> Fix <code class="language-text highlighter-rouge">p2p_sendheaders</code> race (jnewbery)</li>
    <li>#13467 <code class="language-text highlighter-rouge">3dc2dcf</code> Make <code class="language-text highlighter-rouge">p2p_segwit</code> easier to debug (jnewbery)</li>
    <li>#13598 <code class="language-text highlighter-rouge">0212187</code> bench: Fix incorrect behaviour in prevector.cpp (AkioNak)</li>
    <li>#13565 <code class="language-text highlighter-rouge">b05ded1</code> Fix AreInputsStandard test to reference the proper scriptPubKey (Empact)</li>
    <li>#13145 <code class="language-text highlighter-rouge">d3dae3d</code> Use common getPath method to create temp directory in tests (winder)</li>
    <li>#13645 <code class="language-text highlighter-rouge">2ea7eb6</code> skip <code class="language-text highlighter-rouge">rpc_zmq</code> functional test as necessary (jamesob)</li>
    <li>#13626 <code class="language-text highlighter-rouge">8f1106d</code> Fix some TODOs in <code class="language-text highlighter-rouge">p2p_segwit</code> (MarcoFalke)</li>
    <li>#13138 <code class="language-text highlighter-rouge">8803c91</code> Remove accounts from <code class="language-text highlighter-rouge">wallet_importprunedfunds.py</code> (jnewbery)</li>
    <li>#13663 <code class="language-text highlighter-rouge">cbc9b50</code> Avoid read/write to default datadir (MarcoFalke)</li>
    <li>#13682 <code class="language-text highlighter-rouge">f8a32a3</code> bench: Remove unused variable (practicalswift)</li>
    <li>#13638 <code class="language-text highlighter-rouge">6fcdb5e</code> Use <code class="language-text highlighter-rouge">MAX_SCRIPT_ELEMENT_SIZE</code> from script.py (domob1812)</li>
    <li>#13687 <code class="language-text highlighter-rouge">9d26b69</code> travis: Check that ~/.bitcoin is never created (MarcoFalke)</li>
    <li>#13715 <code class="language-text highlighter-rouge">e1260a7</code> fixes mininode’s P2PConnection sending messages on closing transport (marcoagner)</li>
    <li>#13729 <code class="language-text highlighter-rouge">aa9429a</code> travis: Avoid unnecessarily setting env variables on the lint build (Empact)</li>
    <li>#13747 <code class="language-text highlighter-rouge">ab28b5b</code> Skip P2PConnection’s <code class="language-text highlighter-rouge">is_closing()</code> check when not available (domob1812)</li>
    <li>#13650 <code class="language-text highlighter-rouge">7a9bca6</code> travis: Don’t store debug info if –enable-debug is set (ken2812221)</li>
    <li>#13711 <code class="language-text highlighter-rouge">f98d1e0</code> bench: Add benchmark for unserialize prevector (AkioNak)</li>
    <li>#13771 <code class="language-text highlighter-rouge">365384f</code> travis: Retry to fetch docker image (MarcoFalke)</li>
    <li>#13806 <code class="language-text highlighter-rouge">4d550ff</code> Fix <code class="language-text highlighter-rouge">bench/block_assemble</code> assert failure (jamesob)</li>
    <li>#13779 <code class="language-text highlighter-rouge">d25079a</code> travis: Improve readability of travis.yml and log outputs (scravy)</li>
    <li>#13822 <code class="language-text highlighter-rouge">0fb9c87</code> bench: Make coinselection output groups pass eligibility filter (achow101)</li>
    <li>#13247 <code class="language-text highlighter-rouge">e83d82a</code> Add tests to SingleThreadedSchedulerClient() and document the memory model (skeees)</li>
    <li>#13811 <code class="language-text highlighter-rouge">660abc1</code> travis: Run <code class="language-text highlighter-rouge">bench_bitcoin</code> once (MarcoFalke)</li>
    <li>#13837 <code class="language-text highlighter-rouge">990e182</code> Extract <code class="language-text highlighter-rouge">rpc_timewait</code> as test param (MarcoFalke)</li>
    <li>#13851 <code class="language-text highlighter-rouge">9c4324d</code> fix locale for lint-shell (scravy)</li>
    <li>#13823 <code class="language-text highlighter-rouge">489b51b</code> quote path in authproxy for external multiwallets (MarcoFalke)</li>
    <li>#13849 <code class="language-text highlighter-rouge">2b67354</code> travis: Use only travis jobs: instead of mix of jobs+matrix (scravy)</li>
    <li>#13859 <code class="language-text highlighter-rouge">2384323</code> Add emojis to <code class="language-text highlighter-rouge">test_runner</code> path and wallet filename (MarcoFalke)</li>
    <li>#13916 <code class="language-text highlighter-rouge">8ac7125</code> <code class="language-text highlighter-rouge">wait_for_verack</code> by default (MarcoFalke)</li>
    <li>#13669 <code class="language-text highlighter-rouge">f66e1c7</code> Cleanup <code class="language-text highlighter-rouge">create_transaction</code> implementations (conscott)</li>
    <li>#13924 <code class="language-text highlighter-rouge">09ada21</code> Simplify comparison in <code class="language-text highlighter-rouge">rpc_blockchain.py</code> (domob1812)</li>
    <li>#13913 <code class="language-text highlighter-rouge">a08533c</code> Remove redundant checkmempool/checkblockindex <code class="language-text highlighter-rouge">extra_args</code> (MarcoFalke)</li>
    <li>#13915 <code class="language-text highlighter-rouge">a04888a</code> Add test for max number of entries in locator (MarcoFalke)</li>
    <li>#13867 <code class="language-text highlighter-rouge">1b04b55</code> Make extended tests pass on native Windows (MarcoFalke)</li>
    <li>#13944 <code class="language-text highlighter-rouge">0df7a6c</code> Port usage of deprecated optparse module to argparse module (Kvaciral)</li>
    <li>#13928 <code class="language-text highlighter-rouge">b8eb0df</code> blocktools enforce named args for amount (MarcoFalke)</li>
    <li>#13054 <code class="language-text highlighter-rouge">bffb35f</code> Enable automatic detection of undefined names in Python tests scripts. Remove wildcard imports (practicalswift)</li>
    <li>#14069 <code class="language-text highlighter-rouge">cf3d7f9</code> Use assert not <code class="language-text highlighter-rouge">BOOST_CHECK_*</code> from multithreaded tests (skeees)</li>
    <li>#14071 <code class="language-text highlighter-rouge">fab0fbe</code> Stop txindex thread before calling destructor (MarcoFalke)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#11909 <code class="language-text highlighter-rouge">8897135</code> contrib: Replace developer keys with list of pgp fingerprints (MarcoFalke)</li>
    <li>#12394 <code class="language-text highlighter-rouge">fe53d5f</code> gitian-builder.sh: fix –setup doc, since lxc is default (Sjors)</li>
    <li>#12468 <code class="language-text highlighter-rouge">294a766</code> Add missing newline in init.cpp log message (Aesti)</li>
    <li>#12308 <code class="language-text highlighter-rouge">dcfe218</code> contrib: Add support for out-of-tree builds in gen-manpages.sh (laanwj)</li>
    <li>#12451 <code class="language-text highlighter-rouge">aae64a2</code> Bump leveldb subtree (MarcoFalke)</li>
    <li>#12527 <code class="language-text highlighter-rouge">d77b4a7</code> gitian-build.sh: fix signProg being recognized as two parameters (ken2812221)</li>
    <li>#12588 <code class="language-text highlighter-rouge">d74b01d</code> utils: Remove deprecated pyzmq call from python zmq example (kosciej)</li>
    <li>#10271 <code class="language-text highlighter-rouge">bc67982</code> Use <code class="language-text highlighter-rouge">std::thread::hardware_concurrency</code>, instead of Boost, to determine available cores (fanquake)</li>
    <li>#12097 <code class="language-text highlighter-rouge">14475e2</code> scripts: Lint-whitespace: use perl instead of grep -p (Sjors)</li>
    <li>#12098 <code class="language-text highlighter-rouge">17c44b2</code> scripts: Lint-whitespace: add param to check last n commits (Sjors)</li>
    <li>#11900 <code class="language-text highlighter-rouge">842f61a</code> script: Simplify checkminimalpush checks, add safety assert (instagibbs)</li>
    <li>#12567 <code class="language-text highlighter-rouge">bb98aec</code> util: Print timestamp strings in logs using iso 8601 formatting (practicalswift)</li>
    <li>#12572 <code class="language-text highlighter-rouge">d8d9162</code> script: Lint-whitespace: find errors more easily (AkioNak)</li>
    <li>#10694 <code class="language-text highlighter-rouge">ae5bcc7</code> Remove redundant code in MutateTxSign(CMutableTransaction&amp;, const std::string&amp;) (practicalswift)</li>
    <li>#12659 <code class="language-text highlighter-rouge">3d16f58</code> Improve Fatal LevelDB Log Messages (eklitzke)</li>
    <li>#12643 <code class="language-text highlighter-rouge">0f0229d</code> util: Remove unused <code class="language-text highlighter-rouge">sync_chain</code> (MarcoFalke)</li>
    <li>#12102 <code class="language-text highlighter-rouge">7fb8fb4</code> Apply hardening measures in bitcoind systemd service file (Flowdalic)</li>
    <li>#12652 <code class="language-text highlighter-rouge">55f490a</code> bitcoin-cli: Provide a better error message when bitcoind is not running (practicalswift)</li>
    <li>#12630 <code class="language-text highlighter-rouge">c290508</code> Provide useful error message if datadir is not writable (murrayn)</li>
    <li>#11881 <code class="language-text highlighter-rouge">624bee9</code> Remove Python2 support (jnewbery)</li>
    <li>#12821 <code class="language-text highlighter-rouge">082e26c</code> contrib: Remove unused import string (MarcoFalke)</li>
    <li>#12829 <code class="language-text highlighter-rouge">252c1b0</code> Python3 fixup (jnewbery)</li>
    <li>#12822 <code class="language-text highlighter-rouge">ff48f62</code> Revert 7deba93bdc76616011a9f493cbc203d60084416f and fix expired-key-sigs properly (TheBlueMatt)</li>
    <li>#12820 <code class="language-text highlighter-rouge">5e53b80</code> contrib: Fix check-doc script regexes (MarcoFalke)</li>
    <li>#12713 <code class="language-text highlighter-rouge">4490871</code> Track negated options in the option parser (eklitzke)</li>
    <li>#12708 <code class="language-text highlighter-rouge">b2e5fe8</code> Make verify-commits.sh test that merges are clean (sipa)</li>
    <li>#12891 <code class="language-text highlighter-rouge">3190785</code> logging: Add lint-logs.sh to check for newline termination (jnewbery)</li>
    <li>#12923 <code class="language-text highlighter-rouge">a7cbe38</code> util: Pass <code class="language-text highlighter-rouge">pthread_self()</code> to <code class="language-text highlighter-rouge">pthread_setschedparam</code> instead of 0 (laanwj)</li>
    <li>#12871 <code class="language-text highlighter-rouge">fb17fae</code> Add shell script linting: Check for shellcheck warnings in shell scripts (practicalswift)</li>
    <li>#12970 <code class="language-text highlighter-rouge">5df84de</code> logging: Bypass timestamp formatting when not logging (theuni)</li>
    <li>#12987 <code class="language-text highlighter-rouge">fe8fa22</code> tests/tools: Enable additional Python flake8 rules for automatic linting via Travis (practicalswift)</li>
    <li>#12972 <code class="language-text highlighter-rouge">0782508</code> Add python3 script shebang lint (ken2812221)</li>
    <li>#13004 <code class="language-text highlighter-rouge">58bbc55</code> Print to console by default when not run with -daemon (practicalswift)</li>
    <li>#13039 <code class="language-text highlighter-rouge">8b4081a</code> Add logging and error handling for file syncing (laanwj)</li>
    <li>#13020 <code class="language-text highlighter-rouge">4741ca5</code> Consistently log CValidationState on call failure (Empact)</li>
    <li>#13031 <code class="language-text highlighter-rouge">826acc9</code> Fix for utiltime to compile with msvc (sipsorcery)</li>
    <li>#13119 <code class="language-text highlighter-rouge">81743b5</code> Remove script to clean up datadirs (MarcoFalke)</li>
    <li>#12954 <code class="language-text highlighter-rouge">5a66642</code> util: Refactor logging code into a global object (jimpo)</li>
    <li>#12769 <code class="language-text highlighter-rouge">35eb9d6</code> Add systemd service to bitcoind in debian package (ghost)</li>
    <li>#13146 <code class="language-text highlighter-rouge">0bc980b</code> rpcauth: Make it possible to provide a custom password (laanwj)</li>
    <li>#13148 <code class="language-text highlighter-rouge">b62b437</code> logging: Fix potential use-after-free in logprintstr(…) (practicalswift)</li>
    <li>#13214 <code class="language-text highlighter-rouge">0612d96</code> Enable Travis checking for two Python linting rules we are currently not violating (practicalswift)</li>
    <li>#13197 <code class="language-text highlighter-rouge">6826989</code> util: Warn about ignored recursive -includeconf calls (kallewoof)</li>
    <li>#13176 <code class="language-text highlighter-rouge">d9ebb63</code> Improve CRollingBloomFilter performance: replace modulus with FastMod (martinus)</li>
    <li>#13228 <code class="language-text highlighter-rouge">d792e47</code> Add script to detect circular dependencies between source modules (sipa)</li>
    <li>#13320 <code class="language-text highlighter-rouge">e08c130</code> Ensure gitian-build.sh uses bash (jhfrontz)</li>
    <li>#13301 <code class="language-text highlighter-rouge">e4082d5</code> lint: Add linter to error on <code class="language-text highlighter-rouge">#include &lt;*.cpp&gt;</code> (Empact)</li>
    <li>#13374 <code class="language-text highlighter-rouge">56f6936</code> utils and libraries: checking for bitcoin address in translations (kaplanmaxe)</li>
    <li>#13230 <code class="language-text highlighter-rouge">7c32b41</code> Simplify include analysis by enforcing the developer guide’s include syntax (practicalswift)</li>
    <li>#13450 <code class="language-text highlighter-rouge">32bf4c6</code> Add linter: Enforce the source code file naming convention described in the developer notes (practicalswift)</li>
    <li>#13479 <code class="language-text highlighter-rouge">fa2ea37</code> contrib: Fix cve-2018-12356 by hardening the regex (loganaden)</li>
    <li>#13448 <code class="language-text highlighter-rouge">a90ca40</code> Add linter: Make sure we explicitly open all text files using UTF-8 encoding in Python (practicalswift)</li>
    <li>#13494 <code class="language-text highlighter-rouge">d67eff8</code> Follow-up to #13454: Fix broken build by exporting <code class="language-text highlighter-rouge">LC_ALL=C</code> (practicalswift)</li>
    <li>#13510 <code class="language-text highlighter-rouge">03f3925</code> Scripts and tools: Obsolete #!/bin/bash shebang (DesWurstes)</li>
    <li>#13577 <code class="language-text highlighter-rouge">c9eb8d1</code> logging: Avoid nstart may be used uninitialized in appinitmain warning (mruddy)</li>
    <li>#13603 <code class="language-text highlighter-rouge">453ae5e</code> bitcoin-tx: Stricter check for valid integers (domob1812)</li>
    <li>#13118 <code class="language-text highlighter-rouge">c05c93c</code> RPCAuth Detection in Logs (Linrono)</li>
    <li>#13647 <code class="language-text highlighter-rouge">4027ec1</code> Scripts and tools: Fix <code class="language-text highlighter-rouge">BIND_NOW</code> check in security-check.py (conradoplg)</li>
    <li>#13692 <code class="language-text highlighter-rouge">f5d166a</code> contrib: Clone core repo in gitian-build (MarcoFalke)</li>
    <li>#13699 <code class="language-text highlighter-rouge">4c6d1b9</code> contrib: Correct version check (kallewoof)</li>
    <li>#13695 <code class="language-text highlighter-rouge">dcc0cff</code> lint: Add linter for circular dependencies (Empact)</li>
    <li>#13733 <code class="language-text highlighter-rouge">0d1ebf4</code> utils: Refactor argsmanager a little (AtsukiTak)</li>
    <li>#13714 <code class="language-text highlighter-rouge">29b4ee6</code> contrib: Add lxc network setup for bionic host (ken2812221)</li>
    <li>#13764 <code class="language-text highlighter-rouge">f8685f4</code> contrib: Fix test-security-check fail in ubuntu 18.04 (ken2812221)</li>
    <li>#13809 <code class="language-text highlighter-rouge">77168f7</code> contrib: Remove debian and rpm subfolder (MarcoFalke)</li>
    <li>#13799 <code class="language-text highlighter-rouge">230652c</code> Ignore unknown config file options; warn instead of error (sipa)</li>
    <li>#13894 <code class="language-text highlighter-rouge">df9f712</code> shutdown: Stop threads before resetting ptrs (MarcoFalke)</li>
    <li>#13925 <code class="language-text highlighter-rouge">71dec5c</code> Merge leveldb subtree (MarcoFalke)</li>
    <li>#13939 <code class="language-text highlighter-rouge">ef86f26</code> lint: Make format string linter understand basic template parameter syntax (practicalswift)</li>
    <li>#14105 <code class="language-text highlighter-rouge">eb202ea</code> util: Report parse errors in configuration file (laanwj)</li>
    <li>#12604 <code class="language-text highlighter-rouge">9903537</code> Add DynamicMemoryUsage() to CDBWrapper to estimate LevelDB memory use (eklitzke)</li>
    <li>#12495 <code class="language-text highlighter-rouge">047865e</code> Increase LevelDB <code class="language-text highlighter-rouge">max_open_files</code> (eklitzke)</li>
    <li>#12784 <code class="language-text highlighter-rouge">e80716d</code> Fix bug in memory usage calculation (unintended integer division) (practicalswift)</li>
    <li>#12618 <code class="language-text highlighter-rouge">becd8dd</code> Set <code class="language-text highlighter-rouge">SCHED_BATCH</code> priority on the loadblk thread (eklitzke)</li>
    <li>#12854 <code class="language-text highlighter-rouge">5ca1509</code> Add P2P, Network, and Qt categories to the desktop icon (luke-jr)</li>
    <li>#11862 <code class="language-text highlighter-rouge">4366f61</code> Network specific conf sections (ajtowns)</li>
    <li>#13441 <code class="language-text highlighter-rouge">4a7e64f</code> Prevent shared conf files from failing with different available options in different binaries (achow101)</li>
    <li>#13471 <code class="language-text highlighter-rouge">5eca4e8</code> For AVX2 code, also check for AVX, XSAVE, and OS support (sipa)</li>
    <li>#13503 <code class="language-text highlighter-rouge">c655b2c</code> Document FreeBSD quirk. Fix FreeBSD build: Use std::min&lt;int&gt;(…) to allow for compilation under certain FreeBSD versions (practicalswift)</li>
    <li>#13725 <code class="language-text highlighter-rouge">07ce278</code> Fix bitcoin-cli –version (Empact)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#12306 <code class="language-text highlighter-rouge">216f9a4</code> Improvements to UNIX documentation (axvr)</li>
    <li>#12309 <code class="language-text highlighter-rouge">895fbd7</code> Explain how to update chainTxData in release process (laanwj)</li>
    <li>#12317 <code class="language-text highlighter-rouge">85123be</code> Document method for reviewers to verify chainTxData (jnewbery)</li>
    <li>#12331 <code class="language-text highlighter-rouge">d32528e</code> Properly alphabetize output of CLI –help option (murrayn)</li>
    <li>#12322 <code class="language-text highlighter-rouge">c345148</code> Remove step making cloned repository world-writable for Windows build (murrayn)</li>
    <li>#12354 <code class="language-text highlighter-rouge">b264528</code> add gpg key for fivepiece (fivepiece)</li>
    <li>#11761 <code class="language-text highlighter-rouge">89005dd</code> initial QT documentation (Sjors)</li>
    <li>#12232 <code class="language-text highlighter-rouge">fdc2188</code> Improve “Turn Windows Features On or Off” step (MCFX2)</li>
    <li>#12487 <code class="language-text highlighter-rouge">4528f74</code> init: Remove translation for <code class="language-text highlighter-rouge">-blockmaxsize</code> option help (laanwj)</li>
    <li>#12546 <code class="language-text highlighter-rouge">a4a5fc7</code> Minor improvements to Compatibility Notes (randolf)</li>
    <li>#12434 <code class="language-text highlighter-rouge">21e2670</code> dev-notes: Members should be initialized (MarcoFalke)</li>
    <li>#12452 <code class="language-text highlighter-rouge">71f56da</code> clarified systemd installation instructions in init.md for Ubuntu users (DaveFromBinary)</li>
    <li>#12615 <code class="language-text highlighter-rouge">1f93491</code> allow for SIGNER containing spaces (ken2812221)</li>
    <li>#12603 <code class="language-text highlighter-rouge">85424d7</code> PeerLogicValidation interface (jamesob)</li>
    <li>#12581 <code class="language-text highlighter-rouge">12ac2f0</code> Mention configure without wallet in FreeBSD instructions (dbolser)</li>
    <li>#12619 <code class="language-text highlighter-rouge">8a709fb</code> Give hint about gitian not able to download (kallewoof)</li>
    <li>#12668 <code class="language-text highlighter-rouge">de2fcaa</code> do update before fetching packages in WSL build guide (nvercamm)</li>
    <li>#12586 <code class="language-text highlighter-rouge">e7721e6</code> Update osx brew install instruction (fanquake)</li>
    <li>#12760 <code class="language-text highlighter-rouge">7466a26</code> Improve documentation on standard communication channels (jimpo)</li>
    <li>#12797 <code class="language-text highlighter-rouge">0415b1e</code> init: Fix help message for checkblockindex (MarcoFalke)</li>
    <li>#12800 <code class="language-text highlighter-rouge">2d97611</code> Add note about our preference for scoped enumerations (“enum class”) (practicalswift)</li>
    <li>#12798 <code class="language-text highlighter-rouge">174d016</code> Refer to witness reserved value as spec. in the BIP (MarcoFalke)</li>
    <li>#12759 <code class="language-text highlighter-rouge">d3908e2</code> Improve formatting of developer notes (eklitzke)</li>
    <li>#12877 <code class="language-text highlighter-rouge">2b54155</code> Use bitcoind in Tor documentation (knoxcard)</li>
    <li>#12896 <code class="language-text highlighter-rouge">b15485e</code> Fix conflicting statements about initialization in developer notes (practicalswift)</li>
    <li>#12850 <code class="language-text highlighter-rouge">319991d</code> add qrencode to brew install instructions (buddilla)</li>
    <li>#12007 <code class="language-text highlighter-rouge">cd8e45b</code> Clarify the meaning of fee delta not being a fee rate in prioritisetransaction RPC (honzik666)</li>
    <li>#12927 <code class="language-text highlighter-rouge">06ead15</code> fixed link, replaced QT with Qt (trulex)</li>
    <li>#12852 <code class="language-text highlighter-rouge">ebd786b</code> devtools: Setup ots git integration (MarcoFalke)</li>
    <li>#12933 <code class="language-text highlighter-rouge">3cf76c2</code> Refine header include policy (MarcoFalke)</li>
    <li>#12951 <code class="language-text highlighter-rouge">6df0c6c</code> Fix comment in FindForkInGlobalIndex (jamesob)</li>
    <li>#12982 <code class="language-text highlighter-rouge">a63b4e3</code> Fix inconsistent namespace formatting guidelines (ryanofsky)</li>
    <li>#13026 <code class="language-text highlighter-rouge">9b3a67e</code> Fix include comment in src/interfaces/wallet.h (promag)</li>
    <li>#13012 <code class="language-text highlighter-rouge">d1e3c5e</code> Add comments for chainparams.h, validation.cpp (jamesob)</li>
    <li>#13064 <code class="language-text highlighter-rouge">569e381</code> List support for BIP173 in bips.md (sipa)</li>
    <li>#12997 <code class="language-text highlighter-rouge">646b7f6</code> build-windows: Switch to Artful, since Zesty is EOL (MarcoFalke)</li>
    <li>#12384 <code class="language-text highlighter-rouge">c5f7efe</code> Add version footnote to tor.md (Willtech)</li>
    <li>#13165 <code class="language-text highlighter-rouge">627c376</code> Mention good first issue list in CONTRIBUTING.md (fanquake)</li>
    <li>#13295 <code class="language-text highlighter-rouge">fb77310</code> Update OpenBSD build instructions for OpenBSD 6.3 (practicalswift)</li>
    <li>#13340 <code class="language-text highlighter-rouge">3a8e3f4</code> remove leftover check-doc documentation (fanquake)</li>
    <li>#13346 <code class="language-text highlighter-rouge">60f0358</code> update bitcoin-dot-org links in release-process.md (fanquake)</li>
    <li>#13372 <code class="language-text highlighter-rouge">f014933</code> split FreeBSD build instructions out of build-unix.md (steverusso)</li>
    <li>#13366 <code class="language-text highlighter-rouge">861de3b</code> Rename “OS X” to the newer “macOS” convention (giulio92)</li>
    <li>#13369 <code class="language-text highlighter-rouge">f8bcef3</code> update transifex doc link (mess110)</li>
    <li>#13312 <code class="language-text highlighter-rouge">b22115d</code> Add a note about the source code filename naming convention (practicalswift)</li>
    <li>#13460 <code class="language-text highlighter-rouge">1939536</code> Remove note to install all boost dev packages (MarcoFalke)</li>
    <li>#13476 <code class="language-text highlighter-rouge">9501938</code> Fix incorrect shell quoting in FreeBSD build instructions (murrayn)</li>
    <li>#13402 <code class="language-text highlighter-rouge">43fa355</code> Document validationinterace callback blocking deadlock potential (TheBlueMatt)</li>
    <li>#13488 <code class="language-text highlighter-rouge">d6cf4bd</code> Improve readability of “Squashing commits” (wodry)</li>
    <li>#13531 <code class="language-text highlighter-rouge">ee02deb</code> Clarify that mempool txiter is <code class="language-text highlighter-rouge">const_iterator</code> (MarcoFalke)</li>
    <li>#13418 <code class="language-text highlighter-rouge">01f9098</code> More precise explanation of parameter onlynet (wodry)</li>
    <li>#13592 <code class="language-text highlighter-rouge">1756cb4</code> Modify policy to not translate command-line help (ken2812221)</li>
    <li>#13588 <code class="language-text highlighter-rouge">b77c38e</code> Improve doc of options addnode, connect, seednode (wodry)</li>
    <li>#13614 <code class="language-text highlighter-rouge">17e9106</code> Update command line help for -printtoconsole and -debuglogfile (satwo, fanquake)</li>
    <li>#13605 <code class="language-text highlighter-rouge">8cc048e</code> corrected text to reflect new(er) process of specifying fingerprints (jhfrontz)</li>
    <li>#13481 <code class="language-text highlighter-rouge">b641f60</code> Rewrite some validation docs as lock annotations (MarcoFalke)</li>
    <li>#13680 <code class="language-text highlighter-rouge">30640f8</code> Remove outdated comment about miner ignoring CPFP (jamesob)</li>
    <li>#13625 <code class="language-text highlighter-rouge">7146672</code> Add release notes for -printtoconsole and -debuglogfile changes (satwo)</li>
    <li>#13718 <code class="language-text highlighter-rouge">f7f574d</code> Specify preferred Python string formatting technique (masonicboom)</li>
    <li>#12764 <code class="language-text highlighter-rouge">10b9a81</code> Remove field in getblocktemplate help that has never been used (conscott)</li>
    <li>#13742 <code class="language-text highlighter-rouge">d2186b3</code> Adjust bitcoincore.org links (MarcoFalke)</li>
    <li>#13706 <code class="language-text highlighter-rouge">94dd89e</code> Minor improvements to release-process.md (MitchellCash)</li>
    <li>#13775 <code class="language-text highlighter-rouge">ef4fac0</code> Remove newlines from error message (practicalswift)</li>
    <li>#13803 <code class="language-text highlighter-rouge">feb7dd9</code> add note to contributor docs about warranted PR’s (kallewoof)</li>
    <li>#13814 <code class="language-text highlighter-rouge">67af7ef</code> Add BIP174 to list of implemented BIPs (sipa)</li>
    <li>#13835 <code class="language-text highlighter-rouge">c1cba35</code> Fix memory consistency model in comment (skeees)</li>
    <li>#13824 <code class="language-text highlighter-rouge">aa30e4b</code> Remove outdated net comment (MarcoFalke)</li>
    <li>#13853 <code class="language-text highlighter-rouge">317477a</code> correct versions in dependencies.md (fanquake)</li>
    <li>#13872 <code class="language-text highlighter-rouge">37ab117</code> Reformat -help output for help2man (real-or-random)</li>
    <li>#13717 <code class="language-text highlighter-rouge">8c3c402</code> Link to python style guidelines from developer notes (masonicboom)</li>
    <li>#13895 <code class="language-text highlighter-rouge">1cd5f2c</code> fix GetWarnings docs to reflect behavior (Empact)</li>
    <li>#13911 <code class="language-text highlighter-rouge">3e3a50a</code> Revert translated string change, clarify wallet log messages (PierreRochard)</li>
    <li>#13908 <code class="language-text highlighter-rouge">d6faea4</code> upgrade rescan time warning from minutes to &gt;1 hour (masonicboom)</li>
    <li>#13905 <code class="language-text highlighter-rouge">73a09b4</code> fixed bitcoin-cli -help output for help2man (hebasto)</li>
    <li>#14100 <code class="language-text highlighter-rouge">2936dbc</code> Change documentation for =0 for non-boolean options (laanwj)</li>
    <li>#14096 <code class="language-text highlighter-rouge">465a583</code> Add reference documentation for descriptors language (sipa)</li>
    <li>#12757 <code class="language-text highlighter-rouge">0c5f67b</code> Clarify include guard naming convention (practicalswift)</li>
    <li>#13844 <code class="language-text highlighter-rouge">d3325b0</code> Correct the help output for <code class="language-text highlighter-rouge">-prune</code> (hebasto)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>251</li>
    <li>532479301</li>
    <li>Aaron Clauson</li>
    <li>Akio Nakamura</li>
    <li>Akira Takizawa</li>
    <li>Alex Morcos</li>
    <li>Alex Vear</li>
    <li>Alexey Ivanov</li>
    <li>Alin Rus</li>
    <li>Andrea Comand</li>
    <li>Andrew Chow</li>
    <li>Anthony Towns</li>
    <li>AtsukiTak</li>
    <li>Ben Woosley</li>
    <li>Bernhard M. Wiedemann</li>
    <li>Brandon Ruggles</li>
    <li>buddilla</li>
    <li>ccdle12</li>
    <li>Chris Moore</li>
    <li>Chun Kuan Lee</li>
    <li>Clem Taylor</li>
    <li>Conor Scott</li>
    <li>Conrado Gouvea</li>
    <li>Cory Fields</li>
    <li>Cristian Mircea Messel</li>
    <li>ctp-tsteenholdt</li>
    <li>Damian Williamson</li>
    <li>Dan Bolser</li>
    <li>Daniel Kraft</li>
    <li>Darko Janković</li>
    <li>DaveFromBinary</li>
    <li>David A. Harding</li>
    <li>DesWurstes</li>
    <li>Dimitris Apostolou</li>
    <li>donaloconnor</li>
    <li>Douglas Roark</li>
    <li>DrahtBot</li>
    <li>Drew Rasmussen</li>
    <li>e0</li>
    <li>Ernest Hemingway</li>
    <li>Ethan Heilman</li>
    <li>Evan Klitzke</li>
    <li>fanquake</li>
    <li>Felix Wolfsteller</li>
    <li>fivepiece</li>
    <li>Florian Schmaus</li>
    <li>Fuzzbawls</li>
    <li>Gabriel Davidian</li>
    <li>Giulio Lombardo</li>
    <li>Gleb</li>
    <li>Grady Laksmono</li>
    <li>GreatSock</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>Hennadii Stepanov</li>
    <li>Henrik Jonsson</li>
    <li>Indospace.io</li>
    <li>James O’Beirne</li>
    <li>Jan Čapek</li>
    <li>Jeff Frontz</li>
    <li>Jeff Rade</li>
    <li>Jeremy Rubin</li>
    <li>JeremyRand</li>
    <li>Jesse Cohen</li>
    <li>Jim Posen</li>
    <li>joemphilips</li>
    <li>John Bampton</li>
    <li>John Newbery</li>
    <li>johnlow95</li>
    <li>Johnson Lau</li>
    <li>Jonas Nick</li>
    <li>Jonas Schnelli</li>
    <li>João Barbosa</li>
    <li>Jorge Timón</li>
    <li>Josh Hartshorn</li>
    <li>Julian Fleischer</li>
    <li>kallewoof</li>
    <li>Karel Bilek</li>
    <li>Karl-Johan Alm</li>
    <li>Ken Lee</li>
    <li>Kevin Pan</li>
    <li>Kosta Zertsekel</li>
    <li>Kristaps Kaupe</li>
    <li>Kvaciral</li>
    <li>Lawrence Nahum</li>
    <li>Linrono</li>
    <li>lmanners</li>
    <li>Loganaden Velvindron</li>
    <li>Lowell Manners</li>
    <li>lucash.dev@gmail.com</li>
    <li>Luke Dashjr</li>
    <li>lutangar</li>
    <li>Marcin Jachymiak</li>
    <li>marcoagner</li>
    <li>MarcoFalke</li>
    <li>Mark Erhardt</li>
    <li>Mark Friedenbach</li>
    <li>Martin Ankerl</li>
    <li>Mason Simon</li>
    <li>Matt Corallo</li>
    <li>Matteo Sumberaz</li>
    <li>Max Kaplan</li>
    <li>MeshCollider</li>
    <li>Michał Zabielski</li>
    <li>Mitchell Cash</li>
    <li>mruddy</li>
    <li>mryandao</li>
    <li>murrayn</li>
    <li>Nick Vercammen</li>
    <li>Nicolas Dorier</li>
    <li>Nikolay Mitev</li>
    <li>okayplanet</li>
    <li>Pierre Rochard</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>Qasim Javed</li>
    <li>Randolf Richardson</li>
    <li>Richard Kiss</li>
    <li>Roman Zeyde</li>
    <li>Russell Yanofsky</li>
    <li>Samuel B. Atwood</li>
    <li>Sebastian Kung</li>
    <li>Sjors Provoost</li>
    <li>Steve Lee</li>
    <li>steverusso</li>
    <li>Suhas Daftuar</li>
    <li>Tamas Blummer</li>
    <li>TheCharlatan</li>
    <li>Thomas Kerin</li>
    <li>Thomas Snider</li>
    <li>Tim Ruffing</li>
    <li>Varunram</li>
    <li>Vasil Dimov</li>
    <li>Will Ayd</li>
    <li>William Robinson</li>
    <li>winder</li>
    <li>Wladimir J. van der Laan</li>
    <li>wodry</li>
  </ul>

  <p>And to those that reported security issues:</p>

  <ul>
    <li>awemany (for CVE-2018-17144, previously credited as “anonymous reporter”)</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.15.2 released</title>
            <link>https://bitcoin.org/en/release/v0.15.2</link>
            <guid>https://bitcoin.org/en/release/v0.15.2</guid>
          
            <pubDate>Fri, 28 Sep 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version <em>0.15.2</em> is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.15.2/">https://bitcoincore.org/bin/bitcoin-core-0.15.2/</a></p>

  <p>This is a new minor version release, including various bugfixes and
performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the 
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0 or higher, your chainstate database will
be converted to a new format, which will take anywhere from a few minutes to
half an hour, depending on the speed of your machine.</p>

  <p>The file format of <code class="language-text highlighter-rouge">fee_estimates.dat</code> changed in version 0.15.0. Hence, a
downgrade from version 0.15 or upgrade to version 0.15 will cause all fee
estimates to be discarded.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading
directly from 0.7.x and earlier without redownloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>The chainstate database for this release is not compatible with previous
releases, so if you run 0.15 and then decide to switch back to any
older version, you will need to run the old release with the <code class="language-text highlighter-rouge">-reindex-chainstate</code>
option to rebuild the chainstate data structures in the old format.</p>

  <p>If your node has pruning enabled, this will entail re-downloading and
processing the entire blockchain.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="denial-of-service-vulnerability-cve-2018-17144">Denial-of-Service vulnerability CVE-2018-17144</h2>

  <p>A denial-of-service vulnerability exploitable by miners has been discovered in
Bitcoin Core versions 0.14.0 up to 0.16.2. It is recommended to upgrade any of
the vulnerable versions to 0.15.2 or 0.16.3 as soon as possible.</p>

  <h1 id="change-log">0.15.2 Change log</h1>

  <h3 id="build-system">Build system</h3>

  <ul>
    <li>#11995 <code class="language-text highlighter-rouge">9bb1a16</code> depends: Fix Qt build with XCode 9.2(fanquake)</li>
    <li>#12946 <code class="language-text highlighter-rouge">93b9a61</code> depends: Fix Qt build with XCode 9.3(fanquake)</li>
    <li>#13544 <code class="language-text highlighter-rouge">9fd3e00</code> depends: Update Qt download url (fanquake)</li>
    <li>#11847 <code class="language-text highlighter-rouge">cb7ef31</code> Make boost::multi_index comparators const (sdaftuar)</li>
  </ul>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#14247 <code class="language-text highlighter-rouge">4b8a3f5</code> Fix crash bug with duplicate inputs within a transaction (TheBlueMatt, sdaftuar)</li>
  </ul>

  <h3 id="rpc">RPC</h3>
  <ul>
    <li>#11676 <code class="language-text highlighter-rouge">7af2457</code> contrib/init: Update openrc-run filename (Luke Dashjr)</li>
    <li>#11277 <code class="language-text highlighter-rouge">7026845</code> Fix uninitialized URI in batch RPC requests (Russell Yanofsky)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#11289 <code class="language-text highlighter-rouge">3f1db56</code> Wrap dumpwallet warning and note scripts aren’t dumped (MeshCollider)</li>
    <li>#11289 <code class="language-text highlighter-rouge">42ea47d</code> Add wallet backup text to import<em>, add</em> and dumpwallet RPCs (MeshCollider)</li>
    <li>#11590 <code class="language-text highlighter-rouge">6372a75</code> [Wallet] always show help-line of wallet encryption calls (Jonas Schnelli)</li>
  </ul>

  <h3 id="bitcoin-tx">bitcoin-tx</h3>

  <ul>
    <li>#11554 <code class="language-text highlighter-rouge">a69cc07</code> Sanity-check script sizes in bitcoin-tx (TheBlueMatt)</li>
  </ul>

  <h3 id="tests">Tests</h3>
  <ul>
    <li>#11277 <code class="language-text highlighter-rouge">3a6cdd4</code> Add test for multiwallet batch RPC calls (Russell Yanofsky)</li>
    <li>#11647 <code class="language-text highlighter-rouge">1c8c7f8</code> Add missing batch rpc calls to python coverage logs (Russell Yanofsky)</li>
    <li>#11277 <code class="language-text highlighter-rouge">1036c43</code> Add missing multiwallet rpc calls to python coverage logs (Russell Yanofsky)</li>
    <li>#11277 <code class="language-text highlighter-rouge">305f768</code> Limit AuthServiceProxyWrapper.__getattr__ wrapping (Russell Yanofsky)</li>
    <li>#11277 <code class="language-text highlighter-rouge">2eea279</code> Make AuthServiceProxy._batch method usable (Russell Yanofsky)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>fanquake</li>
    <li>Jonas Schnelli</li>
    <li>Luke Dashjr</li>
    <li>Matt Corallo</li>
    <li>MeshCollider</li>
    <li>Russell Yanofsky</li>
    <li>Suhas Daftuar</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And to those that reported security issues:</p>

  <ul>
    <li>awemany (for CVE-2018-17144, previously credited as “anonymous reporter”)</li>
  </ul>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.14.3 released</title>
            <link>https://bitcoin.org/en/release/v0.14.3</link>
            <guid>https://bitcoin.org/en/release/v0.14.3</guid>
          
            <pubDate>Fri, 28 Sep 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version <em>0.14.3</em> is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.14.3/">https://bitcoin.org/bin/bitcoin-core-0.14.3/</a></p>

  <p>This is a new minor version release, including various bugfixes and
performance improvements.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later.</p>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
No attempt is made to prevent installing or running the software on Windows XP, you
can still do so at your own risk but be aware that there are known instabilities and issues.
Please do not report issues about Windows XP to the issue tracker.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <p>Denial-of-Service vulnerability CVE-2018-17144
 ——————————-</p>

  <p>A denial-of-service vulnerability exploitable by miners has been discovered in
Bitcoin Core versions 0.14.0 up to 0.16.2. It is recommended to upgrade any of
the vulnerable versions to 0.14.3, 0.15.2 or 0.16.3 as soon as possible.</p>

  <h1 id="known-bugs">Known Bugs</h1>

  <p>Since 0.14.0 the approximate transaction fee shown in Bitcoin-Qt when using coin
control and smart fee estimation does not reflect any change in target from the
smart fee slider. It will only present an approximate fee calculated using the
default target. The fee calculated using the correct target is still applied to
the transaction and shown in the final send confirmation dialog.</p>

  <h1 id="change-log">0.14.3 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#14247 <code class="language-text highlighter-rouge">52965fb</code> Fix crash bug with duplicate inputs within a transaction (TheBlueMatt, sdaftuar)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>

  <ul>
    <li>#10445 <code class="language-text highlighter-rouge">87a21d5</code> Fix: make CCoinsViewDbCursor::Seek work for missing keys (Pieter Wuille, Gregory Maxwell)</li>
    <li>#9853 Return correct error codes in setban(), fundrawtransaction(), removeprunedfunds(), bumpfee(), blockchain.cpp (John Newbery)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>

  <ul>
    <li>#10234 <code class="language-text highlighter-rouge">d289b56</code> [net] listbanned RPC and QT should show correct banned subnets (John Newbery)</li>
  </ul>

  <h3 id="build-system">Build system</h3>

  <h3 id="miscellaneous">Miscellaneous</h3>

  <ul>
    <li>#10451 <code class="language-text highlighter-rouge">3612219</code> contrib/init/bitcoind.openrcconf: Don’t disable wallet by default (Luke Dashjr)</li>
    <li>#10250 <code class="language-text highlighter-rouge">e23cef0</code> Fix some empty vector references (Pieter Wuille)</li>
    <li>#10196 <code class="language-text highlighter-rouge">d28d583</code> PrioritiseTransaction updates the mempool tx counter (Suhas Daftuar)</li>
    <li>#9497 <code class="language-text highlighter-rouge">e207342</code> Fix CCheckQueue IsIdle (potential) race condition and remove dangerous constructors. (Jeremy Rubin)</li>
  </ul>

  <h3 id="gui">GUI</h3>

  <ul>
    <li>#9481 <code class="language-text highlighter-rouge">7abe7bb</code> Give fallback fee a reasonable indent (Luke Dashjr)</li>
    <li>#9481 <code class="language-text highlighter-rouge">3e4d7bf</code> Qt/Send: Figure a decent warning colour from theme (Luke Dashjr)</li>
    <li>#9481 <code class="language-text highlighter-rouge">e207342</code> Show more significant warning if we fall back to the default fee (Jonas Schnelli)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>

  <ul>
    <li>#10308 <code class="language-text highlighter-rouge">28b8b8b</code> Securely erase potentially sensitive keys/values (tjps)</li>
    <li>#10265 <code class="language-text highlighter-rouge">ff13f59</code> Make sure pindex is non-null before possibly referencing in LogPrintf call. (Karl-Johan Alm)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Cory Fields</li>
    <li>CryptAxe</li>
    <li>fanquake</li>
    <li>Jeremy Rubin</li>
    <li>John Newbery</li>
    <li>Jonas Schnelli</li>
    <li>Gregory Maxwell</li>
    <li>Karl-Johan Alm</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Matt Corallo</li>
    <li>Mikerah</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>Suhas Daftuar</li>
    <li>Thomas Snider</li>
    <li>Tjps</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And to those that reported security issues:</p>

  <ul>
    <li>awemany (for CVE-2018-17144, previously credited as “anonymous reporter”)</li>
  </ul>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.16.3 released</title>
            <link>https://bitcoin.org/en/release/v0.16.3</link>
            <guid>https://bitcoin.org/en/release/v0.16.3</guid>
          
            <pubDate>Tue, 18 Sep 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.16.3 is now available from:</p>

  <p><a href="https://bitcoincore.org/bin/bitcoin-core-0.16.3/">https://bitcoincore.org/bin/bitcoin-core-0.16.3/</a></p>

  <p>This is a new minor version release, with various bugfixes.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0 or higher. Upgrading
directly from 0.7.x and earlier without re-downloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>Wallets created in 0.16 and later are not compatible with versions prior to 0.16
and will not work if you try to use newly created wallets in older versions. Existing
wallets that were created with older versions are not affected by this.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="denial-of-service-vulnerability">Denial-of-Service vulnerability</h2>

  <p>A denial-of-service vulnerability (CVE-2018-17144) exploitable by miners has
been discovered in Bitcoin Core versions 0.14.0 up to 0.16.2. It is recommended
to upgrade any of the vulnerable versions to 0.16.3 as soon as possible.</p>

  <h2 id="change-log">0.16.3 change log</h2>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#14249 <code class="language-text highlighter-rouge">696b936</code> Fix crash bug with duplicate inputs within a transaction (TheBlueMatt, sdaftuar)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#13547 <code class="language-text highlighter-rouge">212ef1f</code> Make <code class="language-text highlighter-rouge">signrawtransaction*</code> give an error when amount is needed but missing (ajtowns)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#13655 <code class="language-text highlighter-rouge">1cdbea7</code> bitcoinconsensus: invalid flags error should be set to <code class="language-text highlighter-rouge">bitcoinconsensus_err</code> (afk11)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#13844 <code class="language-text highlighter-rouge">11b9dbb</code> correct the help output for -prune (hebasto)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Anthony Towns</li>
    <li>Hennadii Stepanov</li>
    <li>Matt Corallo</li>
    <li>Suhas Daftuar</li>
    <li>Thomas Kerin</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And to those that reported security issues:</p>

  <ul>
    <li>(anonymous reporter)</li>
  </ul>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.16.2 released</title>
            <link>https://bitcoin.org/en/release/v0.16.2</link>
            <guid>https://bitcoin.org/en/release/v0.16.2</guid>
          
            <pubDate>Sun, 29 Jul 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.16.2 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoincore.org/bin/bitcoin-core-0.16.2/</del></p>

  <p>This is a new minor version release, with various bugfixes
as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0 or higher. Upgrading
directly from 0.7.x and earlier without re-downloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>Wallets created in 0.16 and later are not compatible with versions prior to 0.16
and will not work if you try to use newly created wallets in older versions. Existing
wallets that were created with older versions are not affected by this.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <h2 id="change-log">0.16.2 change log</h2>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#13622 <code class="language-text highlighter-rouge">c04a4a5</code> Remove mapRequest tracking that just effects Qt display. (TheBlueMatt)</li>
    <li>#12905 <code class="language-text highlighter-rouge">cfc6f74</code> [rpcwallet] Clamp walletpassphrase value at 100M seconds (sdaftuar)</li>
    <li>#13437 <code class="language-text highlighter-rouge">ed82e71</code> wallet: Erase wtxOrderd wtx pointer on removeprunedfunds (MarcoFalke)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#13451 <code class="language-text highlighter-rouge">cbd2f70</code> rpc: expose CBlockIndex::nTx in getblock(header) (instagibbs)</li>
    <li>#13507 <code class="language-text highlighter-rouge">f7401c8</code> RPC: Fix parameter count check for importpubkey (kristapsk)</li>
    <li>#13452 <code class="language-text highlighter-rouge">6b9dc8c</code> rpc: have verifytxoutproof check the number of txns in proof structure (instagibbs)</li>
    <li>#12837 <code class="language-text highlighter-rouge">bf1f150</code> rpc: fix type mistmatch in <code class="language-text highlighter-rouge">listreceivedbyaddress</code> (joemphilips)</li>
    <li>#12743 <code class="language-text highlighter-rouge">657dfc5</code> Fix csBestBlock/cvBlockChange waiting in rpc/mining (sipa)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#12432 <code class="language-text highlighter-rouge">f78e7f6</code> [qt] send: Clear All also resets coin control options (Sjors)</li>
    <li>#12617 <code class="language-text highlighter-rouge">21dd512</code> gui: Show messages as text not html (laanwj)</li>
    <li>#12793 <code class="language-text highlighter-rouge">cf6feb7</code> qt: Avoid reseting on resetguisettigs=0 (MarcoFalke)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#13544 <code class="language-text highlighter-rouge">9fd3e00</code> depends: Update Qt download url (fanquake)</li>
    <li>#12573 <code class="language-text highlighter-rouge">88d1a64</code> Fix compilation when compiler do not support <code class="language-text highlighter-rouge">__builtin_clz*</code> (532479301)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#13061 <code class="language-text highlighter-rouge">170b309</code> Make tests pass after 2020 (bmwiedemann)</li>
    <li>#13192 <code class="language-text highlighter-rouge">79c4fff</code> [tests] Fixed intermittent failure in <code class="language-text highlighter-rouge">p2p_sendheaders.py</code> (lmanners)</li>
    <li>#13300 <code class="language-text highlighter-rouge">d9c5630</code> qa: Initialize lockstack to prevent null pointer deref (MarcoFalke)</li>
    <li>#13545 <code class="language-text highlighter-rouge">e15e3a9</code> tests: Fix test case <code class="language-text highlighter-rouge">streams_serializedata_xor</code> Remove Boost dependency. (practicalswift)</li>
    <li>#13304 <code class="language-text highlighter-rouge">cbdabef</code> qa: Fix <code class="language-text highlighter-rouge">wallet_listreceivedby</code> race (MarcoFalke)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#12887 <code class="language-text highlighter-rouge">2291774</code> Add newlines to end of log messages (jnewbery)</li>
    <li>#12859 <code class="language-text highlighter-rouge">18b0c69</code> Bugfix: Include <code class="language-text highlighter-rouge">&lt;memory&gt;</code> for <code class="language-text highlighter-rouge">std::unique_ptr</code> (luke-jr)</li>
    <li>#13131 <code class="language-text highlighter-rouge">ce8aa54</code> Add Windows shutdown handler (ken2812221)</li>
    <li>#13652 <code class="language-text highlighter-rouge">20461fc</code> rpc: Fix that CWallet::AbandonTransaction would leave the grandchildren, etc. active (Empact)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>532479301</li>
    <li>Ben Woosley</li>
    <li>Bernhard M. Wiedemann</li>
    <li>Chun Kuan Lee</li>
    <li>Cory Fields</li>
    <li>fanquake</li>
    <li>Gregory Sanders</li>
    <li>joemphilips</li>
    <li>John Newbery</li>
    <li>Kristaps Kaupe</li>
    <li>lmanners</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Matt Corallo</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>Sjors Provoost</li>
    <li>Suhas Daftuar</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And to those that reported security issues:</p>

  <ul>
    <li>Braydon Fuller</li>
    <li>Himanshu Mehta</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.16.1 released</title>
            <link>https://bitcoin.org/en/release/v0.16.1</link>
            <guid>https://bitcoin.org/en/release/v0.16.1</guid>
          
            <pubDate>Fri, 15 Jun 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.16.1 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoincore.org/bin/bitcoin-core-0.16.1/</del></p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0 or higher. Upgrading
directly from 0.7.x and earlier without re-downloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>Wallets created in 0.16 and later are not compatible with versions prior to 0.16
and will not work if you try to use newly created wallets in older versions. Existing
wallets that were created with older versions are not affected by this.</p>

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="miner-block-size-removed">Miner block size removed</h2>

  <p>The <code class="language-text highlighter-rouge">-blockmaxsize</code> option for miners to limit their blocks’ sizes was
deprecated in version 0.15.1, and has now been removed. Miners should use the
<code class="language-text highlighter-rouge">-blockmaxweight</code> option if they want to limit the weight of their blocks’
weights.</p>

  <h2 id="change-log">0.16.1 change log</h2>

  <h3 id="policy">Policy</h3>
  <ul>
    <li>#11423 <code class="language-text highlighter-rouge">d353dd1</code> [Policy] Several transaction standardness rules (jl2012)</li>
  </ul>

  <h3 id="mining">Mining</h3>
  <ul>
    <li>#12756 <code class="language-text highlighter-rouge">e802c22</code> [config] Remove blockmaxsize option (jnewbery)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#13199 <code class="language-text highlighter-rouge">c71e535</code> Bugfix: ensure consistency of m_failed_blocks after reconsiderblock (sdaftuar)</li>
    <li>#13023 <code class="language-text highlighter-rouge">bb79aaf</code> Fix some concurrency issues in ActivateBestChain() (skeees)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#12626 <code class="language-text highlighter-rouge">f60e84d</code> Limit the number of IPs addrman learns from each DNS seeder (EthanHeilman)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#13265 <code class="language-text highlighter-rouge">5d8de76</code> Exit SyncMetaData if there are no transactions to sync (laanwj)</li>
    <li>#13030 <code class="language-text highlighter-rouge">5ff571e</code> Fix zapwallettxes/multiwallet interaction. (jnewbery)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#12999 <code class="language-text highlighter-rouge">1720eb3</code> Show the Window when double clicking the taskbar icon (ken2812221)</li>
    <li>#12650 <code class="language-text highlighter-rouge">f118a7a</code> Fix issue: “default port not shown correctly in settings dialog” (251Labs)</li>
    <li>#13251 <code class="language-text highlighter-rouge">ea487f9</code> Rephrase Bech32 checkbox texts, and enable it with legacy address default (fanquake)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#12474 <code class="language-text highlighter-rouge">b0f692f</code> Allow depends system to support armv7l (hkjn)</li>
    <li>#12585 <code class="language-text highlighter-rouge">72a3290</code> depends: Switch to downloading expat from GitHub (fanquake)</li>
    <li>#12648 <code class="language-text highlighter-rouge">46ca8f3</code> test: Update trusted git root (MarcoFalke)</li>
    <li>#11995 <code class="language-text highlighter-rouge">686cb86</code> depends: Fix Qt build with Xcode 9 (fanquake)</li>
    <li>#12636 <code class="language-text highlighter-rouge">845838c</code> backport: #11995 Fix Qt build with Xcode 9 (fanquake)</li>
    <li>#12946 <code class="language-text highlighter-rouge">e055bc0</code> depends: Fix Qt build with XCode 9.3 (fanquake)</li>
    <li>#12998 <code class="language-text highlighter-rouge">7847b92</code> Default to defining endian-conversion DECLs in compat w/o config (TheBlueMatt)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#12447 <code class="language-text highlighter-rouge">01f931b</code> Add missing signal.h header (laanwj)</li>
    <li>#12545 <code class="language-text highlighter-rouge">1286f3e</code> Use wait_until to ensure ping goes out (Empact)</li>
    <li>#12804 <code class="language-text highlighter-rouge">4bdb0ce</code> Fix intermittent rpc_net.py failure. (jnewbery)</li>
    <li>#12553 <code class="language-text highlighter-rouge">0e98f96</code> Prefer wait_until over polling with time.sleep (Empact)</li>
    <li>#12486 <code class="language-text highlighter-rouge">cfebd40</code> Round target fee to 8 decimals in assert_fee_amount (kallewoof)</li>
    <li>#12843 <code class="language-text highlighter-rouge">df38b13</code> Test starting bitcoind with -h and -version (jnewbery)</li>
    <li>#12475 <code class="language-text highlighter-rouge">41c29f6</code> Fix python TypeError in script.py (MarcoFalke)</li>
    <li>#12638 <code class="language-text highlighter-rouge">0a76ed2</code> Cache only chain and wallet for regtest datadir (MarcoFalke)</li>
    <li>#12902 <code class="language-text highlighter-rouge">7460945</code> Handle potential cookie race when starting node (sdaftuar)</li>
    <li>#12904 <code class="language-text highlighter-rouge">6c26df0</code> Ensure bitcoind processes are cleaned up when tests end (sdaftuar)</li>
    <li>#13049 <code class="language-text highlighter-rouge">9ea62a3</code> Backports (MarcoFalke)</li>
    <li>#13201 <code class="language-text highlighter-rouge">b8aacd6</code> Handle disconnect_node race (sdaftuar)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#12518 <code class="language-text highlighter-rouge">a17fecf</code> Bump leveldb subtree (MarcoFalke)</li>
    <li>#12442 <code class="language-text highlighter-rouge">f3b8d85</code> devtools: Exclude patches from lint-whitespace (MarcoFalke)</li>
    <li>#12988 <code class="language-text highlighter-rouge">acdf433</code> Hold cs_main while calling UpdatedBlockTip() signal (skeees)</li>
    <li>#12985 <code class="language-text highlighter-rouge">0684cf9</code> Windows: Avoid launching as admin when NSIS installer ends. (JeremyRand)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#12637 <code class="language-text highlighter-rouge">60086dd</code> backport: #12556 fix version typo in getpeerinfo RPC call help (fanquake)</li>
    <li>#13184 <code class="language-text highlighter-rouge">4087dd0</code> RPC Docs: <code class="language-text highlighter-rouge">gettxout*</code>: clarify bestblock and unspent counts (harding)</li>
    <li>#13246 <code class="language-text highlighter-rouge">6de7543</code> Bump to Ubuntu Bionic 18.04 in build-windows.md (ken2812221)</li>
    <li>#12556 <code class="language-text highlighter-rouge">e730b82</code> Fix version typo in getpeerinfo RPC call help (tamasblummer)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>251</li>
    <li>Ben Woosley</li>
    <li>Chun Kuan Lee</li>
    <li>David A. Harding</li>
    <li>e0</li>
    <li>fanquake</li>
    <li>Henrik Jonsson</li>
    <li>JeremyRand</li>
    <li>Jesse Cohen</li>
    <li>John Newbery</li>
    <li>Johnson Lau</li>
    <li>Karl-Johan Alm</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Matt Corallo</li>
    <li>Pieter Wuille</li>
    <li>Suhas Daftuar</li>
    <li>Tamas Blummer</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.16.0 released</title>
            <link>https://bitcoin.org/en/release/v0.16.0</link>
            <guid>https://bitcoin.org/en/release/v0.16.0</guid>
          
            <pubDate>Mon, 26 Feb 2018 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.16.0 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoincore.org/bin/bitcoin-core-0.16.0/</del></p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0 or newer, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0 or higher. Upgrading
directly from 0.7.x and earlier without re-downloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>Wallets created in 0.16 and later are not compatible with versions prior to 0.16
and will not work if you try to use newly created wallets in older versions. Existing
wallets that were created with older versions are not affected by this.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>
<div class="toccontent-block boxexpand expanded">

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="wallet-changes">Wallet changes</h2>

  <h3 id="segwit-wallet">Segwit Wallet</h3>

  <p>Bitcoin Core 0.16.0 introduces full support for segwit in the wallet and user interfaces. A new <code class="language-text highlighter-rouge">-addresstype</code> argument has been added, which supports <code class="language-text highlighter-rouge">legacy</code>, <code class="language-text highlighter-rouge">p2sh-segwit</code> (default), and <code class="language-text highlighter-rouge">bech32</code> addresses. It controls what kind of addresses are produced by <code class="language-text highlighter-rouge">getnewaddress</code>, <code class="language-text highlighter-rouge">getaccountaddress</code>, and <code class="language-text highlighter-rouge">createmultisigaddress</code>. A <code class="language-text highlighter-rouge">-changetype</code> argument has also been added, with the same options, and by default equal to <code class="language-text highlighter-rouge">-addresstype</code>, to control which kind of change is used.</p>

  <p>A new <code class="language-text highlighter-rouge">address_type</code> parameter has been added to the <code class="language-text highlighter-rouge">getnewaddress</code> and <code class="language-text highlighter-rouge">addmultisigaddress</code> RPCs to specify which type of address to generate.
A <code class="language-text highlighter-rouge">change_type</code> argument has been added to the <code class="language-text highlighter-rouge">fundrawtransaction</code> RPC to override the <code class="language-text highlighter-rouge">-changetype</code> argument for specific transactions.</p>

  <ul>
    <li>All segwit addresses created through <code class="language-text highlighter-rouge">getnewaddress</code> or <code class="language-text highlighter-rouge">*multisig</code> RPCs explicitly get their redeemscripts added to the wallet file. This means that downgrading after creating a segwit address will work, as long as the wallet file is up to date.</li>
    <li>All segwit keys in the wallet get an implicit redeemscript added, without it being written to the file. This means recovery of an old backup will work, as long as you use new software.</li>
    <li>All keypool keys that are seen used in transactions explicitly get their redeemscripts added to the wallet files. This means that downgrading after recovering from a backup that includes a segwit address will work</li>
  </ul>

  <p>Note that some RPCs do not yet support segwit addresses. Notably, <code class="language-text highlighter-rouge">signmessage</code>/<code class="language-text highlighter-rouge">verifymessage</code> doesn’t support segwit addresses, nor does <code class="language-text highlighter-rouge">importmulti</code> at this time. Support for segwit in those RPCs will continue to be added in future versions.</p>

  <p>P2WPKH change outputs are now used by default if any destination in the transaction is a P2WPKH or P2WSH output. This is done to ensure the change output is as indistinguishable from the other outputs as possible in either case.</p>

  <h3 id="bip173-bech32-address-support-bc1-addresses">BIP173 (Bech32) Address support (“bc1…” addresses)</h3>

  <p>Full support for native segwit addresses (BIP173 / Bech32) has now been added.
This includes the ability to send to BIP173 addresses (including non-v0 ones), and generating these
addresses (including as default new addresses, see above).</p>

  <p>A checkbox has been added to the GUI to select whether a Bech32 address or P2SH-wrapped address should be generated when using segwit addresses. When launched with <code class="language-text highlighter-rouge">-addresstype=bech32</code> it is checked by default. When launched with <code class="language-text highlighter-rouge">-addresstype=legacy</code> it is unchecked and disabled.</p>

  <h3 id="hd-wallets-by-default">HD-wallets by default</h3>

  <p>Due to a backward-incompatible change in the wallet database, wallets created
with version 0.16.0 will be rejected by previous versions. Also, version 0.16.0
will only create hierarchical deterministic (HD) wallets. Note that this only applies
to new wallets; wallets made with previous versions will not be upgraded to be HD.</p>

  <h3 id="replace-by-fee-by-default-in-gui">Replace-By-Fee by default in GUI</h3>

  <p>The send screen now uses BIP125 RBF by default, regardless of <code class="language-text highlighter-rouge">-walletrbf</code>.
There is a checkbox to mark the transaction as final.</p>

  <p>The RPC default remains unchanged: to use RBF, launch with <code class="language-text highlighter-rouge">-walletrbf=1</code> or
use the <code class="language-text highlighter-rouge">replaceable</code> argument for individual transactions.</p>

  <h3 id="wallets-directory-configuration--walletdir">Wallets directory configuration (<code class="language-text highlighter-rouge">-walletdir</code>)</h3>

  <p>Bitcoin Core now has more flexibility in where the wallets directory can be
located. Previously wallet database files were stored at the top level of the
bitcoin data directory. The behavior is now:</p>

  <ul>
    <li>For new installations (where the data directory doesn’t already exist),
wallets will now be stored in a new <code class="language-text highlighter-rouge">wallets/</code> subdirectory inside the data
directory by default.</li>
    <li>For existing nodes (where the data directory already exists), wallets will be
stored in the data directory root by default. If a <code class="language-text highlighter-rouge">wallets/</code> subdirectory
already exists in the data directory root, then wallets will be stored in the
<code class="language-text highlighter-rouge">wallets/</code> subdirectory by default.</li>
    <li>The location of the wallets directory can be overridden by specifying a
<code class="language-text highlighter-rouge">-walletdir=&lt;path&gt;</code> option where <code class="language-text highlighter-rouge">&lt;path&gt;</code> can be an absolute path to a
directory or directory symlink.</li>
  </ul>

  <p>Care should be taken when choosing the wallets directory location, as if it
becomes unavailable during operation, funds may be lost.</p>

  <h2 id="build-minimum-gcc-bumped-to-48x">Build: Minimum GCC bumped to 4.8.x</h2>
  <p>The minimum version of the GCC compiler required to compile Bitcoin Core is now 4.8. No effort will be
made to support older versions of GCC. See discussion in issue #11732 for more information.
The minimum version for the Clang compiler is still 3.3. Other minimum dependency versions can be found in <code class="language-text highlighter-rouge">doc/dependencies.md</code> in the repository.</p>

  <h2 id="support-for-signalling-pruned-nodes-bip159">Support for signalling pruned nodes (BIP159)</h2>
  <p>Pruned nodes can now signal BIP159’s NODE_NETWORK_LIMITED using service bits, in preparation for
full BIP159 support in later versions. This would allow pruned nodes to serve the most recent blocks. However, the current change does not yet include support for connecting to these pruned peers.</p>

  <h2 id="performance-sha256-assembly-enabled-by-default">Performance: SHA256 assembly enabled by default</h2>
  <p>The SHA256 hashing optimizations for architectures supporting SSE4, which lead to ~50% speedups in SHA256 on supported hardware (~5% faster synchronization and block validation), have now been enabled by default. In previous versions they were enabled using the <code class="language-text highlighter-rouge">--enable-experimental-asm</code> flag when building, but are now the default and no longer deemed experimental.</p>

  <h2 id="gui-changes">GUI changes</h2>
  <ul>
    <li>Uses of “µBTC” in the GUI now also show the more colloquial term “bits”, specified in BIP176.</li>
    <li>The option to reuse a previous address has now been removed. This was justified by the need to “resend” an invoice, but now that we have the request history, that need should be gone.</li>
    <li>Support for searching by TXID has been added, rather than just address and label.</li>
    <li>A “Use available balance” option has been added to the send coins dialog, to add the remaining available wallet balance to a transaction output.</li>
    <li>A toggle for unblinding the password fields on the password dialog has been added.</li>
  </ul>

  <h2 id="rpc-changes">RPC changes</h2>

  <h3 id="new-rescanblockchain-rpc">New <code class="language-text highlighter-rouge">rescanblockchain</code> RPC</h3>

  <p>A new RPC <code class="language-text highlighter-rouge">rescanblockchain</code> has been added to manually invoke a blockchain rescan.
The RPC supports start and end-height arguments for the rescan, and can be used in a
multiwallet environment to rescan the blockchain at runtime.</p>

  <h3 id="new-savemempool-rpc">New <code class="language-text highlighter-rouge">savemempool</code> RPC</h3>
  <p>A new <code class="language-text highlighter-rouge">savemempool</code> RPC has been added which allows the current mempool to be saved to
disk at any time to avoid it being lost due to crashes / power loss.</p>

  <h3 id="safe-mode-disabled-by-default">Safe mode disabled by default</h3>

  <p>Safe mode is now disabled by default and must be manually enabled (with <code class="language-text highlighter-rouge">-disablesafemode=0</code>) if you wish to use it. Safe mode is a feature that disables a subset of RPC calls - mostly related to the wallet and sending - automatically in case certain problem conditions with the network are detected. However, developers have come to regard these checks as not reliable enough to act on automatically. Even with safe mode disabled, they will still cause warnings in the <code class="language-text highlighter-rouge">warnings</code> field of the <code class="language-text highlighter-rouge">getneworkinfo</code> RPC and launch the <code class="language-text highlighter-rouge">-alertnotify</code> command.</p>

  <h3 id="renamed-script-for-creating-json-rpc-credentials">Renamed script for creating JSON-RPC credentials</h3>

  <p>The <code class="language-text highlighter-rouge">share/rpcuser/rpcuser.py</code> script was renamed to <code class="language-text highlighter-rouge">share/rpcauth/rpcauth.py</code>. This script can be
used to create <code class="language-text highlighter-rouge">rpcauth</code> credentials for a JSON-RPC user.</p>

  <h3 id="validateaddress-improvements">Validateaddress improvements</h3>

  <p>The <code class="language-text highlighter-rouge">validateaddress</code> RPC output has been extended with a few new fields, and support for segwit addresses (both P2SH and Bech32). Specifically:</p>
  <ul>
    <li>A new field <code class="language-text highlighter-rouge">iswitness</code> is True for P2WPKH and P2WSH addresses (“bc1…” addresses), but not for P2SH-wrapped segwit addresses (see below).</li>
    <li>The existing field <code class="language-text highlighter-rouge">isscript</code> will now also report True for P2WSH addresses.</li>
    <li>A new field <code class="language-text highlighter-rouge">embedded</code> is present for all script addresses where the script is known and matches something that can be interpreted as a known address. This is particularly true for P2SH-P2WPKH and P2SH-P2WSH addresses. The value for <code class="language-text highlighter-rouge">embedded</code> includes much of the information <code class="language-text highlighter-rouge">validateaddress</code> would report if invoked directly on the embedded address.</li>
    <li>For multisig scripts a new <code class="language-text highlighter-rouge">pubkeys</code> field was added that reports the full public keys involved in the script (if known). This is a replacement for the existing <code class="language-text highlighter-rouge">addresses</code> field (which reports the same information but encoded as P2PKH addresses), represented in a more useful and less confusing way. The <code class="language-text highlighter-rouge">addresses</code> field remains present for non-segwit addresses for backward compatibility.</li>
    <li>For all single-key addresses with known key (even when wrapped in P2SH or P2WSH), the <code class="language-text highlighter-rouge">pubkey</code> field will be present. In particular, this means that invoking <code class="language-text highlighter-rouge">validateaddress</code> on the output of <code class="language-text highlighter-rouge">getnewaddress</code> will always report the <code class="language-text highlighter-rouge">pubkey</code>, even when the address type is P2SH-P2WPKH.</li>
  </ul>

  <h3 id="low-level-changes">Low-level changes</h3>

  <ul>
    <li>The deprecated RPC <code class="language-text highlighter-rouge">getinfo</code> was removed. It is recommended that the more specific RPCs are used:
      <ul>
        <li><code class="language-text highlighter-rouge">getblockchaininfo</code></li>
        <li><code class="language-text highlighter-rouge">getnetworkinfo</code></li>
        <li><code class="language-text highlighter-rouge">getwalletinfo</code></li>
        <li><code class="language-text highlighter-rouge">getmininginfo</code></li>
      </ul>
    </li>
    <li>The wallet RPC <code class="language-text highlighter-rouge">getreceivedbyaddress</code> will return an error if called with an address not in the wallet.</li>
    <li>The wallet RPC <code class="language-text highlighter-rouge">addwitnessaddress</code> was deprecated and will be removed in version 0.17,
set the <code class="language-text highlighter-rouge">address_type</code> argument of <code class="language-text highlighter-rouge">getnewaddress</code>, or option <code class="language-text highlighter-rouge">-addresstype=[bech32|p2sh-segwit]</code> instead.</li>
    <li><code class="language-text highlighter-rouge">dumpwallet</code> now includes hex-encoded scripts from the wallet in the dumpfile, and
<code class="language-text highlighter-rouge">importwallet</code> now imports these scripts, but corresponding addresses may not be added
correctly or a manual rescan may be required to find relevant transactions.</li>
    <li>The RPC <code class="language-text highlighter-rouge">getblockchaininfo</code> now includes an <code class="language-text highlighter-rouge">errors</code> field.</li>
    <li>A new <code class="language-text highlighter-rouge">blockhash</code> parameter has been added to the <code class="language-text highlighter-rouge">getrawtransaction</code> RPC which allows for a raw transaction to be fetched from a specific block if known, even without <code class="language-text highlighter-rouge">-txindex</code> enabled.</li>
    <li>The <code class="language-text highlighter-rouge">decoderawtransaction</code> and <code class="language-text highlighter-rouge">fundrawtransaction</code> RPCs now have optional <code class="language-text highlighter-rouge">iswitness</code> parameters to override the
heuristic witness checks if necessary.</li>
    <li>The <code class="language-text highlighter-rouge">walletpassphrase</code> timeout is now clamped to 2^30 seconds.</li>
    <li>Using addresses with the <code class="language-text highlighter-rouge">createmultisig</code> RPC is now deprecated, and will be removed in a later version. Public keys should be used instead.</li>
    <li>Blockchain rescans now no longer lock the wallet for the entire rescan process, so other RPCs can now be used at the same time (although results of balances / transactions may be incorrect or incomplete until the rescan is complete).</li>
    <li>The <code class="language-text highlighter-rouge">logging</code> RPC has now been made public rather than hidden.</li>
    <li>An <code class="language-text highlighter-rouge">initialblockdownload</code> boolean has been added to the <code class="language-text highlighter-rouge">getblockchaininfo</code> RPC to indicate whether the node is currently in IBD or not.</li>
    <li><code class="language-text highlighter-rouge">minrelaytxfee</code> is now included in the output of <code class="language-text highlighter-rouge">getmempoolinfo</code></li>
  </ul>

  <h2 id="other-changed-command-line-options">Other changed command-line options</h2>
  <ul>
    <li><code class="language-text highlighter-rouge">-debuglogfile=&lt;file&gt;</code> can be used to specify an alternative debug logging file.</li>
    <li>bitcoin-cli now has an <code class="language-text highlighter-rouge">-stdinrpcpass</code> option to allow the RPC password to be read from standard input.</li>
    <li>The <code class="language-text highlighter-rouge">-usehd</code> option has been removed.</li>
    <li>bitcoin-cli now supports a new <code class="language-text highlighter-rouge">-getinfo</code> flag which returns an output like that of the now-removed <code class="language-text highlighter-rouge">getinfo</code> RPC.</li>
  </ul>

  <h2 id="testing-changes">Testing changes</h2>
  <ul>
    <li>The default regtest JSON-RPC port has been changed to 18443 to avoid conflict with testnet’s default of 18332.</li>
    <li>Segwit is now always active in regtest mode by default. Thus, if you upgrade a regtest node you will need to either -reindex or use the old rules by adding <code class="language-text highlighter-rouge">vbparams=segwit:0:999999999999</code> to your regtest bitcoin.conf. Failure to do this will result in a CheckBlockIndex() assertion failure that will look like: Assertion `(pindexFirstNeverProcessed != nullptr) == (pindex-&gt;nChainTx == 0)’ failed.</li>
  </ul>

  <h2 id="change-log">0.16.0 change log</h2>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#10953 <code class="language-text highlighter-rouge">aeed345</code> Combine scriptPubKey and amount as CTxOut in CScriptCheck (jl2012)</li>
    <li>#11309 <code class="language-text highlighter-rouge">93d20a7</code> Minor cleanups for AcceptToMemoryPool (morcos)</li>
    <li>#11418 <code class="language-text highlighter-rouge">38c201f</code> Add error string for CLEANSTACK script violation (maaku)</li>
    <li>#11411 <code class="language-text highlighter-rouge">339da9c</code> Change SignatureHash input index check to an assert (jimpo)</li>
    <li>#11406 <code class="language-text highlighter-rouge">e12522d</code> Add state message print to AcceptBlock failure message (TheBlueMatt)</li>
    <li>#11062 <code class="language-text highlighter-rouge">26fee4f</code> Mark mempool import fails that were found in mempool as ‘already there’ (kallewoof)</li>
    <li>#11269 <code class="language-text highlighter-rouge">61fb806</code> CTxMemPoolEntry::UpdateAncestorState: modifySiagOps param type (donaloconnor)</li>
    <li>#11747 <code class="language-text highlighter-rouge">e970396</code> Fix: Open files read only if requested (Elbandi)</li>
    <li>#11737 <code class="language-text highlighter-rouge">46d1ebf</code> Document partial validation in ConnectBlock() (sdaftuar)</li>
    <li>#10699 <code class="language-text highlighter-rouge">c090262</code> Make all script validation flags backward compatible (sipa)</li>
    <li>#10279 <code class="language-text highlighter-rouge">214046f</code> Add a CChainState class to validation.cpp to take another step towards clarifying internal interfaces (TheBlueMatt)</li>
    <li>#11824 <code class="language-text highlighter-rouge">d9fdac1</code> Block ActivateBestChain to empty validationinterface queue (TheBlueMatt)</li>
    <li>#12127 <code class="language-text highlighter-rouge">9501dc2</code> Remove unused mempool index (sdaftuar)</li>
    <li>#12118 <code class="language-text highlighter-rouge">44080a9</code> Sort mempool by min(feerate, ancestor_feerate) (sdaftuar)</li>
    <li>#8498 <code class="language-text highlighter-rouge">0e3a411</code> Minimize the number of times it is checked that no money… (jtimon)</li>
    <li>#12368 <code class="language-text highlighter-rouge">3f5012b</code> Hold mempool.cs for the duration of ATMP (TheBlueMatt)</li>
    <li>#12401 <code class="language-text highlighter-rouge">d44cd7e</code> Reset pblocktree before deleting LevelDB file (Sjors)</li>
    <li>#12415 <code class="language-text highlighter-rouge">f893824</code> Interrupt loading thread after shutdown request (promag)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#10596 <code class="language-text highlighter-rouge">6866b49</code> Add vConnect to CConnman::Options (benma)</li>
    <li>#10663 <code class="language-text highlighter-rouge">9d31ed2</code> Split resolve out of connect (theuni)</li>
    <li>#11113 <code class="language-text highlighter-rouge">fef65c4</code> Ignore getheaders requests for very old side blocks (jimpo)</li>
    <li>#11585 <code class="language-text highlighter-rouge">5aeaa9c</code> addrman: Add missing lock in Clear() (CAddrMan) (practicalswift)</li>
    <li>#11524 <code class="language-text highlighter-rouge">5ef3b69</code> De-duplicate connection eviction logic (tjps)</li>
    <li>#11580 <code class="language-text highlighter-rouge">1f4375f</code> Do not send (potentially) invalid headers in response to getheaders (TheBlueMatt)</li>
    <li>#11655 <code class="language-text highlighter-rouge">aca77a4</code> Assert state.m_chain_sync.m_work_header in ConsiderEviction (practicalswift)</li>
    <li>#11744 <code class="language-text highlighter-rouge">3ff6ff5</code> Add missing locks in net.{cpp,h} (practicalswift)</li>
    <li>#11740 <code class="language-text highlighter-rouge">59d3dc8</code> Implement BIP159 NODE_NETWORK_LIMITED (pruned peers) <em>signaling only</em> (jonasschnelli)</li>
    <li>#11583 <code class="language-text highlighter-rouge">37ffa16</code> Do not make it trivial for inbound peers to generate log entries (TheBlueMatt)</li>
    <li>#11363 <code class="language-text highlighter-rouge">ba2f195</code> Split socket create/connect (theuni)</li>
    <li>#11917 <code class="language-text highlighter-rouge">bc66765</code> Add testnet DNS seed:  seed.testnet.bitcoin.sprovoost.nl (Sjors)</li>
    <li>#11512 <code class="language-text highlighter-rouge">6e89de5</code> Use GetDesireableServiceFlags in seeds, dnsseeds, fixing static seed adding (TheBlueMatt)</li>
    <li>#12262 <code class="language-text highlighter-rouge">16bac24</code> Hardcoded seed update (laanwj)</li>
    <li>#12270 <code class="language-text highlighter-rouge">9cf6393</code> Update chainTxData for 0.16 (laanwj)</li>
    <li>#12392 <code class="language-text highlighter-rouge">0f61651</code> Fix ignoring tx data requests when fPauseSend is set on a peer (TheBlueMatt)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#11039 <code class="language-text highlighter-rouge">fc51565</code> Avoid second mapWallet lookup (promag)</li>
    <li>#10952 <code class="language-text highlighter-rouge">2621673</code> Remove vchDefaultKey and have better first run detection (achow101)</li>
    <li>#11007 <code class="language-text highlighter-rouge">fc5c237</code> Fix potential memory leak when loading a corrupted wallet file (practicalswift)</li>
    <li>#10976 <code class="language-text highlighter-rouge">07c92b9</code> Move some static functions out of wallet.h/cpp (ryanofsky)</li>
    <li>#11117 <code class="language-text highlighter-rouge">961901f</code> Prepare for non-Base58 addresses (sipa)</li>
    <li>#10916 <code class="language-text highlighter-rouge">e6ab88a</code> add missing lock to crypter GetKeys() (benma)</li>
    <li>#10767 <code class="language-text highlighter-rouge">791a0e6</code> Clarify wallet initialization / destruction interface (jnewbery)</li>
    <li>#11250 <code class="language-text highlighter-rouge">c22a53c</code> Bump wallet version to 159900 and remove the <code class="language-text highlighter-rouge">usehd</code> option (achow101)</li>
    <li>#11307 <code class="language-text highlighter-rouge">4f7e37e</code> Display non-HD error on first run (MarcoFalke)</li>
    <li>#11408 <code class="language-text highlighter-rouge">69c7ece</code> Fix parameter name typo in ErasePurpose walletdb method (PierreRochard)</li>
    <li>#11167 <code class="language-text highlighter-rouge">aa624b6</code> Full BIP173 (Bech32) support (sipa)</li>
    <li>#11594 <code class="language-text highlighter-rouge">0ecc630</code> Improve -disablewallet parameter interaction (promag)</li>
    <li>#10368 <code class="language-text highlighter-rouge">77ba4bf</code> Remove helper conversion operator from wallet (kallewoof)</li>
    <li>#11074 <code class="language-text highlighter-rouge">99ec126</code> Assert that CWallet::SyncMetaData finds oldest transaction (BitonicEelis)</li>
    <li>#11272 <code class="language-text highlighter-rouge">e6e3fc3</code> CKeystore/CCrypter: move relevant implementation out of the header (jonasschnelli)</li>
    <li>#10286 <code class="language-text highlighter-rouge">927a1d7</code> Call wallet notify callbacks in scheduler thread (without cs_main) (TheBlueMatt)</li>
    <li>#10600 <code class="language-text highlighter-rouge">4ed8180</code> Make feebumper class stateless (ryanofsky)</li>
    <li>#11466 <code class="language-text highlighter-rouge">d080a7d</code> Specify custom wallet directory with -walletdir param (MeshCollider)</li>
    <li>#11839 <code class="language-text highlighter-rouge">8ab6c0b</code> Don’t attempt mempool entry for wallet transactions on startup (instagibbs)</li>
    <li>#11854 <code class="language-text highlighter-rouge">2214954</code> Split up key and script metadata for better type safety (ryanofsky)</li>
    <li>#11870 <code class="language-text highlighter-rouge">ef8ba7d</code> Remove unnecessary mempool lock in ReacceptWalletTransactions (promag)</li>
    <li>#11864 <code class="language-text highlighter-rouge">2ae58d5</code> Make CWallet::FundTransaction atomic (promag)</li>
    <li>#11886 <code class="language-text highlighter-rouge">df71819</code> Clarify getbalance meaning a tiny bit in response to questions (TheBlueMatt)</li>
    <li>#11923 <code class="language-text highlighter-rouge">81c89e9</code> Remove unused fNoncriticalErrors variable from CWalletDB::FindWalletTx (PierreRochard)</li>
    <li>#11726 <code class="language-text highlighter-rouge">604e08c</code> Cleanups + nit fixes for walletdir PR (MeshCollider)</li>
    <li>#11403 <code class="language-text highlighter-rouge">d889c03</code> Segwit wallet support (sipa)</li>
    <li>#11970 <code class="language-text highlighter-rouge">b7450cd</code> Add test coverage for bitcoin-cli multiwallet calls (ryanofsky)</li>
    <li>#11904 <code class="language-text highlighter-rouge">66e3af7</code> Add a lock to the wallet directory (MeshCollider)</li>
    <li>#12101 <code class="language-text highlighter-rouge">c7978be</code> Clamp walletpassphrase timeout to 2^30 seconds and check its bounds (achow101)</li>
    <li>#12210 <code class="language-text highlighter-rouge">17180fa</code> Deprecate addwitnessaddress (laanwj)</li>
    <li>#12220 <code class="language-text highlighter-rouge">f4c942e</code> Error if relative -walletdir is specified (ryanofsky)</li>
    <li>#11281 <code class="language-text highlighter-rouge">8470e64</code> Avoid permanent cs_main/cs_wallet lock during RescanFromTime (jonasschnelli)</li>
    <li>#12119 <code class="language-text highlighter-rouge">9594139</code> Use P2WPKH change output if any destination is P2WPKH or P2WSH (Sjors)</li>
    <li>#12213 <code class="language-text highlighter-rouge">eadb2da</code> Add address type option to addmultisigaddress (promag)</li>
    <li>#12276 <code class="language-text highlighter-rouge">7936446</code> Remove duplicate mapWallet lookups (promag)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#11008 <code class="language-text highlighter-rouge">3841aaf</code> Enable disablesafemode by default (gmaxwell)</li>
    <li>#11050 <code class="language-text highlighter-rouge">7ed57d3</code> Avoid treating null RPC arguments different from missing arguments (ryanofsky)</li>
    <li>#10997 <code class="language-text highlighter-rouge">affe927</code> Add option -stdinrpcpass to bitcoin-cli to allow RPC password to be read from standard input (jharvell)</li>
    <li>#11179 <code class="language-text highlighter-rouge">e0e3cbb</code> Push down safe mode checks (laanwj)</li>
    <li>#11203 <code class="language-text highlighter-rouge">d745b4c</code> add wtxid to mempool entry output (sdaftuar)</li>
    <li>#11099 <code class="language-text highlighter-rouge">bc561b4</code> Add savemempool RPC (greenaddress)</li>
    <li>#10838 <code class="language-text highlighter-rouge">66a5b41</code> (finally) remove getinfo (TheBlueMatt)</li>
    <li>#10753 <code class="language-text highlighter-rouge">7fcd61b</code> test: Check RPC argument mapping (laanwj)</li>
    <li>#11288 <code class="language-text highlighter-rouge">0f8e095</code> More user-friendly error message when partially signing (MeshCollider)</li>
    <li>#11031 <code class="language-text highlighter-rouge">ef8340d</code> deprecate estimatefee (jnewbery)</li>
    <li>#10858 <code class="language-text highlighter-rouge">9a8e916</code> Add “errors” field to getblockchaininfo and unify “errors” field in get*info RPCs (achow101)</li>
    <li>#11021 <code class="language-text highlighter-rouge">90926db</code> Fix getchaintxstats() (AkioNak)</li>
    <li>#11367 <code class="language-text highlighter-rouge">3a93270</code> getblockchaininfo: Add disk_size, prune_target_size (esotericnonsense)</li>
    <li>#11006 <code class="language-text highlighter-rouge">a1d78b5</code> Improve shutdown process (promag)</li>
    <li>#11529 <code class="language-text highlighter-rouge">ff92fbf</code> Avoid slow transaction search with txindex enabled (promag)</li>
    <li>#11618 <code class="language-text highlighter-rouge">87d90ef</code> Lock cs_main in blockToJSON/blockheaderToJSON (practicalswift)</li>
    <li>#11626 <code class="language-text highlighter-rouge">998c304</code> Make <code class="language-text highlighter-rouge">logging</code> RPC public (laanwj)</li>
    <li>#11258 <code class="language-text highlighter-rouge">033c786</code> Add initialblockdownload to getblockchaininfo (jnewbery)</li>
    <li>#11087 <code class="language-text highlighter-rouge">99bc0b4</code> Diagnose unsuitable outputs in lockunspent() (BitonicEelis)</li>
    <li>#11710 <code class="language-text highlighter-rouge">9388639</code> cli: Reject arguments to -getinfo (laanwj)</li>
    <li>#11738 <code class="language-text highlighter-rouge">d4267a3</code> Fix sendrawtransaction hang when sending a tx already in mempool (TheBlueMatt)</li>
    <li>#11753 <code class="language-text highlighter-rouge">32c9b57</code> clarify abortrescan rpc use (instagibbs)</li>
    <li>#11191 <code class="language-text highlighter-rouge">ef14f2e</code> Improve help text and behavior of RPC-logging (AkioNak)</li>
    <li>#10874 <code class="language-text highlighter-rouge">9e38d35</code> getblockchaininfo: Loop through the bip9 soft fork deployments instead of hard coding (achow101)</li>
    <li>#10275 <code class="language-text highlighter-rouge">497d0e0</code> Allow fetching tx directly from specified block in getrawtransaction (kallewoof)</li>
    <li>#11178 <code class="language-text highlighter-rouge">fee0370</code> Add iswitness parameter to decode- and fundrawtransaction RPCs (MeshCollider)</li>
    <li>#11667 <code class="language-text highlighter-rouge">711d16c</code> Add scripts to dumpwallet RPC (MeshCollider)</li>
    <li>#11475 <code class="language-text highlighter-rouge">9bad8d6</code> mempoolinfo should take ::minRelayTxFee into account (mess110)</li>
    <li>#12001 <code class="language-text highlighter-rouge">a9a49e6</code> Adding ::minRelayTxFee amount to getmempoolinfo and updating help (jeffrade)</li>
    <li>#12198 <code class="language-text highlighter-rouge">adce1de</code> Add deprecation error for <code class="language-text highlighter-rouge">getinfo</code> (laanwj)</li>
    <li>#11415 <code class="language-text highlighter-rouge">69ec021</code> Disallow using addresses in createmultisig (achow101)</li>
    <li>#12278 <code class="language-text highlighter-rouge">288deac</code> Add special error for genesis coinbase to getrawtransaction (MeshCollider)</li>
    <li>#11362 <code class="language-text highlighter-rouge">c6223b3</code> Remove nBlockMaxSize from miner opt struct as it is no longer used (gmaxwell)</li>
    <li>#10825 <code class="language-text highlighter-rouge">28485c7</code> Set regtest JSON-RPC port to 18443 to avoid conflict with testnet 18332 (fametrano)</li>
    <li>#11303 <code class="language-text highlighter-rouge">e542728</code> Fix estimatesmartfee rounding display issue (TheBlueMatt)</li>
    <li>#7061 <code class="language-text highlighter-rouge">8c2de82</code> Add RPC call <code class="language-text highlighter-rouge">rescanblockchain &lt;startheight&gt; &lt;stopheight&gt;</code> (jonasschnelli)</li>
    <li>#11055 <code class="language-text highlighter-rouge">95e14dc</code> RPC getreceivedbyaddress should return error if called with address not owned by the wallet (jnewbery)</li>
    <li>#12366 <code class="language-text highlighter-rouge">93de37a</code> http: Join worker threads before deleting work queue (laanwj)</li>
    <li>#12315 <code class="language-text highlighter-rouge">758a41e</code> Bech32 addresses in dumpwallet (fivepiece)</li>
    <li>#12427 <code class="language-text highlighter-rouge">3762ac1</code> Make signrawtransaction accept P2SH-P2WSH redeemscripts (sipa)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#10964 <code class="language-text highlighter-rouge">64e66bb</code> Pass SendCoinsRecipient (208 bytes) by reference (practicalswift)</li>
    <li>#11169 <code class="language-text highlighter-rouge">5b8af7b</code> Make tabs toolbar no longer have a context menu (achow101)</li>
    <li>#10911 <code class="language-text highlighter-rouge">9c8f365</code> Fix typo and access key in optionsdialog.ui (keystrike)</li>
    <li>#10770 <code class="language-text highlighter-rouge">ea729d5</code> Drop upgrade-cancel callback registration for a generic “cancelable” (TheBlueMatt)</li>
    <li>#11156 <code class="language-text highlighter-rouge">a3624dd</code> Fix memory leaks in qt/guiutil.cpp (danra)</li>
    <li>#11268 <code class="language-text highlighter-rouge">31e72b2</code> [macOS] remove Growl support, remove unused code (jonasschnelli)</li>
    <li>#11193 <code class="language-text highlighter-rouge">c5c77bd</code> Terminate string *pszExePath after readlink and without using memset (practicalswift)</li>
    <li>#11508 <code class="language-text highlighter-rouge">ffa5159</code> Fix crash via division by zero assertion (jonasschnelli)</li>
    <li>#11499 <code class="language-text highlighter-rouge">6157e8c</code> Add upload and download info to the peerlist (debug menu) (aarongolliver)</li>
    <li>#11480 <code class="language-text highlighter-rouge">ffc0b11</code> Add toggle for unblinding password fields (tjps)</li>
    <li>#11316 <code class="language-text highlighter-rouge">22cdf93</code> Add use available balance in send coins dialog (CryptAxe, promag)</li>
    <li>#3716 <code class="language-text highlighter-rouge">13e352d</code> Receive: Remove option to reuse a previous address (luke-jr)</li>
    <li>#11690 <code class="language-text highlighter-rouge">f0c1f8a</code> Fix the StartupWMClass for bitoin-qt, so gnome-shell can recognize it (eklitzke)</li>
    <li>#10920 <code class="language-text highlighter-rouge">f6f8d54</code> Fix potential memory leak in newPossibleKey(ChangeCWallet *wallet) (practicalswift)</li>
    <li>#11698 <code class="language-text highlighter-rouge">7293d06</code> RPC-Console nested commands documentation  (lmlsna)</li>
    <li>#11395 <code class="language-text highlighter-rouge">38d31f9</code> Enable searching by transaction id (luke-jr)</li>
    <li>#11556 <code class="language-text highlighter-rouge">91eeaa0</code> Improved copy for RBF checkbox and tooltip (Sjors)</li>
    <li>#11809 <code class="language-text highlighter-rouge">80f9dad</code> Fix proxy setting options dialog crash (laanwj)</li>
    <li>#11616 <code class="language-text highlighter-rouge">8585bb8</code> Update ban-state in case of dirty-state during periodic sweep (jonasschnelli)</li>
    <li>#11605 <code class="language-text highlighter-rouge">f19ca12</code> Enable RBF by default in QT (Sjors)</li>
    <li>#12074 <code class="language-text highlighter-rouge">a1136f0</code> Optimizes boolean expression model &amp;&amp; model-&gt;haveWatchOnly() (251Labs)</li>
    <li>#12035 <code class="language-text highlighter-rouge">eeb6d52</code> Change µBTC to bits (jb55)</li>
    <li>#12092 <code class="language-text highlighter-rouge">fd4ca17</code> Replaces numbered place marker %2 with %1 (251Labs)</li>
    <li>#12173 <code class="language-text highlighter-rouge">bbc91b7</code> Use flexible font size for QRCode image address (jonasschnelli)</li>
    <li>#12211 <code class="language-text highlighter-rouge">10d10d7</code> Avoid potential null dereference in ReceiveCoinsDialog constructor (ryanofsky)</li>
    <li>#12261 <code class="language-text highlighter-rouge">f359afc</code> Bump BLOCK_CHAIN_SIZE to 200GB (laanwj)</li>
    <li>#11991 <code class="language-text highlighter-rouge">062c8b6</code> Receive: checkbox for bech32 address (Sjors)</li>
    <li>#11644 <code class="language-text highlighter-rouge">045a809</code> Fix qt build broken by 5a5e4e9 (TheBlueMatt)</li>
    <li>#11448 <code class="language-text highlighter-rouge">d473e6d</code> reset addrProxy/addrSeparateProxyTor if colon char missing (mess110)</li>
    <li>#12377 <code class="language-text highlighter-rouge">604f289</code> qt: Poll ShutdownTimer after init is done (MarcoFalke)</li>
    <li>#12374 <code class="language-text highlighter-rouge">daaae36</code> qt: Make sure splash screen is freed on AppInitMain fail (laanwj)</li>
    <li>#12349 <code class="language-text highlighter-rouge">ad10b90</code> shutdown: fix crash on shutdown with reindex-chainstate (theuni)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#10923 <code class="language-text highlighter-rouge">2c9f5ec</code> travis: Build with –enable-werror under OS X (practicalswift)</li>
    <li>#11176 <code class="language-text highlighter-rouge">df8c722</code> build: Rename –enable-experimental-asm to –enable-asm and enable by default (laanwj)</li>
    <li>#11286 <code class="language-text highlighter-rouge">11dacc6</code> [depends] Don’t build libevent sample code (fanquake)</li>
    <li>#7142 <code class="language-text highlighter-rouge">801dd40</code> Travis: Test build against system libs (&amp; Qt4) (luke-jr)</li>
    <li>#11380 <code class="language-text highlighter-rouge">390771b</code> Remove outdated share/certs/ directory (MeshCollider)</li>
    <li>#11391 <code class="language-text highlighter-rouge">7632310</code> Remove lxcbr0 lines from gitian-build.sh (MeshCollider)</li>
    <li>#11435 <code class="language-text highlighter-rouge">167cef8</code> build: Make “make clean” remove all files created when running “make check” (practicalswift)</li>
    <li>#11460 <code class="language-text highlighter-rouge">e022463</code> [depends] mac_alias 2.0.6, ds_store 1.1.2 (fanquake)</li>
    <li>#11541 <code class="language-text highlighter-rouge">bb9ab0f</code> Build: Fix Automake warnings when running autogen.sh (fanquake)</li>
    <li>#11611 <code class="language-text highlighter-rouge">0e70791</code> [build] Don’t fail when passed –disable-lcov and lcov isn’t available (fanquake)</li>
    <li>#11651 <code class="language-text highlighter-rouge">3c098a8</code> refactor: Make all #includes relative to project root (laanwj, MeshCollider, ryanofsky)</li>
    <li>#11621 <code class="language-text highlighter-rouge">1f7695b</code> [build] Add temp_bitcoin_locale_qrc to CLEAN_QT to fix make distcheck (fanquake)</li>
    <li>#11755 <code class="language-text highlighter-rouge">84fa645</code> [Docs] Bump minimum required version of GCC to 4.8 (fanquake)</li>
    <li>#9254 <code class="language-text highlighter-rouge">6d3dc52</code> [depends] ZeroMQ 4.2.2 (fanquake)</li>
    <li>#11842 <code class="language-text highlighter-rouge">3c8f0a3</code> [build] Add missing stuff to clean-local (kallewoof)</li>
    <li>#11936 <code class="language-text highlighter-rouge">483bb67</code> [build] Warn that only libconsensus can be built without Boost (fanquake)</li>
    <li>#11945 <code class="language-text highlighter-rouge">7a11ba7</code> Improve BSD compatibility of contrib/install_db4.sh (laanwj)</li>
    <li>#11981 <code class="language-text highlighter-rouge">180a255</code> Fix gitian build after libzmq bump (theuni)</li>
    <li>#11903 <code class="language-text highlighter-rouge">8f68fd2</code> [trivial] Add required package dependencies for depends cross compilation (jonasschnelli)</li>
    <li>#12168 <code class="language-text highlighter-rouge">45cf8a0</code>  #include sys/fcntl.h to just fcntl.h (without sys/) (jsarenik)</li>
    <li>#12095 <code class="language-text highlighter-rouge">3fa1ab4</code> Use BDB_LIBS/CFLAGS and pass –disable-replication (fanquake)</li>
    <li>#11711 <code class="language-text highlighter-rouge">6378e5c</code> bitcoin_qt.m4: Minor fixes and clean-ups (fanquake)</li>
    <li>#11989 <code class="language-text highlighter-rouge">90d4104</code> .gitignore: add QT Creator artifacts (Sjors)</li>
    <li>#11577 <code class="language-text highlighter-rouge">c0ae864</code> Fix warnings (-Wsign-compare) when building with DEBUG_ADDRMAN (practicalswift)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#11024 <code class="language-text highlighter-rouge">3e55f13</code> Remove OldSetKeyFromPassphrase/OldEncrypt/OldDecrypt (practicalswift)</li>
    <li>#10679 <code class="language-text highlighter-rouge">31b2612</code> Document the non-DER-conformance of one test in tx_valid.json (schildbach)</li>
    <li>#11160 <code class="language-text highlighter-rouge">ede386c</code> Improve versionbits_computeblockversion test code consistency (danra)</li>
    <li>#10303 <code class="language-text highlighter-rouge">f088a1b</code> Include ms/blk stats in Connect* benchmarks (kallewoof)</li>
    <li>#10777 <code class="language-text highlighter-rouge">d81dccf</code> Avoid redundant assignments. Remove unused variables (practicalswift)</li>
    <li>#11260 <code class="language-text highlighter-rouge">52f8877</code> travis: Assert default datadir isn’t created, Run scripted diff only once (MarcoFalke)</li>
    <li>#11271 <code class="language-text highlighter-rouge">638e6c5</code> travis: filter out pyenv (theuni)</li>
    <li>#11285 <code class="language-text highlighter-rouge">3255d63</code> Add -usehd to excluded args in check-doc.py (MeshCollider)</li>
    <li>#11297 <code class="language-text highlighter-rouge">16e4184</code> Make sure ~/.bitcoin doesn’t exist before build (MeshCollider)</li>
    <li>#11311 <code class="language-text highlighter-rouge">cce94c5</code> travis: Revert default datadir check (MarcoFalke)</li>
    <li>#11300 <code class="language-text highlighter-rouge">f4ed44a</code> Add a lint check for trailing whitespace (MeshCollider)</li>
    <li>#11323 <code class="language-text highlighter-rouge">4ce2f3d</code> mininode: add an optimistic write and disable nagle (theuni)</li>
    <li>#11370 <code class="language-text highlighter-rouge">2d85899</code> Add getblockchaininfo functional test (promag)</li>
    <li>#11365 <code class="language-text highlighter-rouge">f199b8a</code> Add Qt GUI tests to Overview and ReceiveCoin Page (anditto)</li>
    <li>#11293 <code class="language-text highlighter-rouge">dbc4ae0</code> Deduplicate CMerkleBlock construction code, add test coverage (jamesob)</li>
    <li>#10440 <code class="language-text highlighter-rouge">9e8ef9d</code> Add libFuzzer support (practicalswift)</li>
    <li>#10941 <code class="language-text highlighter-rouge">364da2c</code> Add blocknotify and walletnotify functional tests (promag)</li>
    <li>#11420 <code class="language-text highlighter-rouge">8928093</code> Bump univalue subtree and fix json formatting in tests (MarcoFalke)</li>
    <li>#10099 <code class="language-text highlighter-rouge">424be03</code> Slightly Improve Unit Tests for Checkqueue (JeremyRubin)</li>
    <li>#11513 <code class="language-text highlighter-rouge">14b860b</code> A few Python3 tidy ups (jnewbery)</li>
    <li>#11486 <code class="language-text highlighter-rouge">2ca518d</code> Add uacomment tests (mess110)</li>
    <li>#11452 <code class="language-text highlighter-rouge">02ac8c8</code> Improve ZMQ functional test (promag)</li>
    <li>#10409 <code class="language-text highlighter-rouge">b5545d8</code> Add fuzz testing for BlockTransactions and BlockTransactionsRequest (practicalswift)</li>
    <li>#11389 <code class="language-text highlighter-rouge">dd56166</code> Support having segwit always active in regtest (sipa, ajtowns, jnewbery)</li>
    <li>#11562 <code class="language-text highlighter-rouge">5776582</code> bench: use std::chrono rather than gettimeofday (theuni)</li>
    <li>#11182 <code class="language-text highlighter-rouge">f7388e9</code> Add P2P interface to TestNode (jnewbery)</li>
    <li>#11552 <code class="language-text highlighter-rouge">b5f9f02</code> Improve wallet-accounts test (ryanofsky)</li>
    <li>#11638 <code class="language-text highlighter-rouge">5e3f5e4</code> Dead mininode code (jnewbery)</li>
    <li>#11646 <code class="language-text highlighter-rouge">fe503e1</code> Require a steady clock for bench with at least micro precision (TheBlueMatt)</li>
    <li>#11468 <code class="language-text highlighter-rouge">76b3349</code> Make comp test framework more debuggable (jnewbery)</li>
    <li>#11623 <code class="language-text highlighter-rouge">ee92243</code> Add missing locks to tests (practicalswift)</li>
    <li>#11035 <code class="language-text highlighter-rouge">927e528</code> [contrib] Add Valgrind suppressions file (practicalswift)</li>
    <li>#11641 <code class="language-text highlighter-rouge">7adeea3</code> Only allow disconnecting all NodeConns (MarcoFalke)</li>
    <li>#11677 <code class="language-text highlighter-rouge">3bdf242</code> Remove unused NodeConn members (MarcoFalke)</li>
    <li>#11699 <code class="language-text highlighter-rouge">66d46c7</code> [travis-ci] Only run linters on Pull Requests (jnewbery)</li>
    <li>#11654 <code class="language-text highlighter-rouge">084f52f</code> Initialize recently introduced non-static class member lastCycles to zero in constructor (practicalswift)</li>
    <li>#11648 <code class="language-text highlighter-rouge">ccc70a2</code> Add messages.py (jnewbery)</li>
    <li>#11713 <code class="language-text highlighter-rouge">49667a7</code> Fix for mismatched extern definition in wallet tests (sipsorcery)</li>
    <li>#11707 <code class="language-text highlighter-rouge">0d89fa0</code> Fix sendheaders (jnewbery)</li>
    <li>#11718 <code class="language-text highlighter-rouge">9cdd2bc</code> Move pwalletMain to wallet test fixture (laanwj)</li>
    <li>#11714 <code class="language-text highlighter-rouge">901ba3e</code> Test that mempool rejects coinbase transactions (jamesob)</li>
    <li>#11743 <code class="language-text highlighter-rouge">3d6ad40</code> Add multiwallet prefix test (MarcoFalke)</li>
    <li>#11683 <code class="language-text highlighter-rouge">a892218</code> Remove unused mininode functions {ser,deser}_int_vector(…). Remove unused imports (practicalswift)</li>
    <li>#11712 <code class="language-text highlighter-rouge">9f2c2db</code> Split NodeConn from NodeConnCB (jnewbery)</li>
    <li>#11791 <code class="language-text highlighter-rouge">13e31dd</code> Rename NodeConn and NodeConnCB (jnewbery)</li>
    <li>#11835 <code class="language-text highlighter-rouge">f60b4ad</code> Add Travis check for unused Python imports (practicalswift)</li>
    <li>#11849 <code class="language-text highlighter-rouge">ad1820c</code> Assert that only one NetworkThread exists (jnewbery)</li>
    <li>#11877 <code class="language-text highlighter-rouge">d4991c0</code> Improve createrawtransaction functional tests (promag)</li>
    <li>#11220 <code class="language-text highlighter-rouge">2971fd0</code> Check specific validation error in miner tests (Sjors)</li>
    <li>#11947 <code class="language-text highlighter-rouge">797441e</code> Fix rawtransactions test (laanwj)</li>
    <li>#11946 <code class="language-text highlighter-rouge">8049241</code> Remove unused variable (firstAddrnServices) (practicalswift)</li>
    <li>#11867 <code class="language-text highlighter-rouge">18a1bba</code> Improve node network test (jnewbery)</li>
    <li>#11883 <code class="language-text highlighter-rouge">cfd99dd</code> Add configuration file/argument testing (MeshCollider)</li>
    <li>#11879 <code class="language-text highlighter-rouge">d4e404a</code> Remove redundant univalue_tests.cpp (jnewbery)</li>
    <li>#11748 <code class="language-text highlighter-rouge">20166f8</code> Adding unit tests for GetDifficulty in blockchain.cpp (merehap)</li>
    <li>#11517 <code class="language-text highlighter-rouge">5180a86</code> Improve benchmark precision (martinus)</li>
    <li>#11291 <code class="language-text highlighter-rouge">a332a7d</code> Fix string concatenation to os.path.join and add exception case (dongsam)</li>
    <li>#11965 <code class="language-text highlighter-rouge">d38d1a3</code> Note on test order in test_runner (MarcoFalke)</li>
    <li>#11997 <code class="language-text highlighter-rouge">ddff344</code> util_tests.cpp: actually check ignored args (ajtowns)</li>
    <li>#12079 <code class="language-text highlighter-rouge">45173fa</code> Improve prioritisetransaction test coverage (promag)</li>
    <li>#12150 <code class="language-text highlighter-rouge">92a810d</code> Fix ListCoins test failure due to unset g_address_type, g_change_type (ryanofsky)</li>
    <li>#12133 <code class="language-text highlighter-rouge">1d2eaba</code> Fix rare failure in p2p-segwit.py (sdaftuar)</li>
    <li>
      <table>
        <tbody>
          <tr>
            <td>#12082 <code class="language-text highlighter-rouge">0910cbe</code> Adding test case for SINGLE</td>
            <td>ANYONECANPAY hash type in tx_valid.json (Christewart)</td>
          </tr>
        </tbody>
      </table>
    </li>
    <li>#11796 <code class="language-text highlighter-rouge">4db16ec</code> Functional test naming convention (ajtowns)</li>
    <li>#12227 <code class="language-text highlighter-rouge">b987ca4</code> test_runner: Readable output if create_cache.py fails (ryanofsky)</li>
    <li>#12089 <code class="language-text highlighter-rouge">126000b</code> Make TestNodeCLI command optional in send_cli (MarcoFalke)</li>
    <li>#11774 <code class="language-text highlighter-rouge">6970b30</code> Rename functional tests (ajtowns)</li>
    <li>#12264 <code class="language-text highlighter-rouge">598a9c4</code> Fix versionbits warning test (jnewbery)</li>
    <li>#12217 <code class="language-text highlighter-rouge">1213be6</code> Add missing syncwithvalidationinterfacequeue to tests (MarcoFalke)</li>
    <li>#12292 <code class="language-text highlighter-rouge">eebe458</code> Fix names of excluded extended tests for travis (ajtowns)</li>
    <li>#11789 <code class="language-text highlighter-rouge">60d739e</code> [travis-ci] Combine logs on failure (jnewbery)</li>
    <li>#11838 <code class="language-text highlighter-rouge">3e50024</code> Add getrawtransaction in_active_chain=False test (MarcoFalke)</li>
    <li>#12206 <code class="language-text highlighter-rouge">898f560</code> Sync with validationinterface queue in sync_mempools (MarcoFalke)</li>
    <li>#12424 <code class="language-text highlighter-rouge">ff44101</code> Fix rescan test failure due to unset g_address_type, g_change_type (ryanofsky)</li>
    <li>#12388 <code class="language-text highlighter-rouge">e2431d1</code> travis: Full clone for git subtree check (MarcoFalke)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#10680 <code class="language-text highlighter-rouge">6366941</code> Fix inconsistencies and grammar in various files (MeshCollider)</li>
    <li>#11011 <code class="language-text highlighter-rouge">7db65c3</code> Add a comment on the use of prevector in script (gmaxwell)</li>
    <li>#10878 <code class="language-text highlighter-rouge">c58128f</code> Fix Markdown formatting issues in init.md (dongcarl)</li>
    <li>#11066 <code class="language-text highlighter-rouge">9e00a62</code> Document the preference of nullptr over NULL or (void*)0 (practicalswift)</li>
    <li>#11094 <code class="language-text highlighter-rouge">271e40a</code> Hash in ZMQ hash is raw bytes, not hex (runn1ng)</li>
    <li>#11026 <code class="language-text highlighter-rouge">ea3ac59</code> Bugfix: Use testnet RequireStandard for -acceptnonstdtxn default (luke-jr)</li>
    <li>#11058 <code class="language-text highlighter-rouge">4b65fa5</code> Comments: More comments on functions/globals in standard.h (jimpo)</li>
    <li>#11112 <code class="language-text highlighter-rouge">3f726c9</code> [developer-notes] By default, declare single-argument constructors “explicit” (practicalswift)</li>
    <li>#11155 <code class="language-text highlighter-rouge">a084767</code> Trivial: Documentation fixes for CVectorWriter ctors (danra)</li>
    <li>#11136 <code class="language-text highlighter-rouge">108222b</code> Docs: Add python3 to list of dependencies on some platforms (danra)</li>
    <li>#11216 <code class="language-text highlighter-rouge">81f8c03</code> Update hmac_sha256.h (utsavgupta)</li>
    <li>#11236 <code class="language-text highlighter-rouge">ba05971</code> Add note on translations to CONTRIBUTING.md (MeshCollider)</li>
    <li>#11173 <code class="language-text highlighter-rouge">4eb1f39</code> RPC: Fix currency unit string in the help text (AkioNak)</li>
    <li>#11135 <code class="language-text highlighter-rouge">21e2f2f</code> Update developer notes with RPC response guidelines (promag)</li>
    <li>#11219 <code class="language-text highlighter-rouge">bcc8a62</code> explain how to recompile a modified unit test (Sjors)</li>
    <li>#10779 <code class="language-text highlighter-rouge">f656147</code> Create dependencies.md (flack)</li>
    <li>#10682 <code class="language-text highlighter-rouge">2a56baf</code> Move the AreInputsStandard documentation next to its implementation (esneider)</li>
    <li>#11276 <code class="language-text highlighter-rouge">ee50c9e</code> Update CONTRIBUTING.md to reduce unnecessary review workload (jonasschnelli)</li>
    <li>#11264 <code class="language-text highlighter-rouge">b148803</code> Fix broken Markdown table in dependencies.md (practicalswift)</li>
    <li>#10691 <code class="language-text highlighter-rouge">ce82985</code> Properly comment about shutdown process in init.cpp file (wraith7)</li>
    <li>#11330 <code class="language-text highlighter-rouge">ae233c4</code> Fix comments for DEFAULT_WHITELIST[FORCE]RELAY (danra)</li>
    <li>#11340 <code class="language-text highlighter-rouge">d6d2c85</code> Fix validation comments (danra)</li>
    <li>#11305 <code class="language-text highlighter-rouge">2847480</code> Update release notes and manpages for 0.16 (MarcoFalke)</li>
    <li>#11132 <code class="language-text highlighter-rouge">551d7bf</code> Document assumptions that are being made to avoid NULL pointer dereferences (practicalswift)</li>
    <li>#11390 <code class="language-text highlighter-rouge">12ed800</code> Document scripted-diff (jnewbery)</li>
    <li>#11392 <code class="language-text highlighter-rouge">a3b4c59</code> Fix stale link in gitian-building.md (shooterman)</li>
    <li>#11401 <code class="language-text highlighter-rouge">4202273</code> Move gitian building to external repo (MarcoFalke)</li>
    <li>#11414 <code class="language-text highlighter-rouge">bbc901d</code> Remove partial gitian build instructions from descriptors dir (fanquake)</li>
    <li>#11571 <code class="language-text highlighter-rouge">c95832d</code> Fixed a couple small grammatical errors (BitsInMyBlood)</li>
    <li>#11624 <code class="language-text highlighter-rouge">f9b74ef</code> Change formatting for sequence of steps (vivganes)</li>
    <li>#11597 <code class="language-text highlighter-rouge">6f01dcf</code> Fix error messages in CFeeBumper (kallewoof)</li>
    <li>#11438 <code class="language-text highlighter-rouge">7fbf3c6</code> Updated Windows build doc for WSL/Xenial workaround (sipsorcery)</li>
    <li>#11663 <code class="language-text highlighter-rouge">41aa9c4</code> Add getreceivedbyaddress release notes (MarcoFalke)</li>
    <li>#11533 <code class="language-text highlighter-rouge">cbb54e7</code> Update WSL installation notes for Fall Creators update (Thoragh)</li>
    <li>#11680 <code class="language-text highlighter-rouge">4db82b7</code> Add instructions for lcov report generation (jamesob)</li>
    <li>#11686 <code class="language-text highlighter-rouge">54aedc0</code> Make ISSUE_TEMPLATE a bit shorter, mention hardware tests (TheBlueMatt)</li>
    <li>#11704 <code class="language-text highlighter-rouge">ea68190</code> Windows build doc update (sipsorcery)</li>
    <li>#11706 <code class="language-text highlighter-rouge">5197100</code> Make default issue text all comments to make issues more readable (TheBlueMatt)</li>
    <li>#11140 <code class="language-text highlighter-rouge">1429132</code> Improve #endif comments (danra)</li>
    <li>#11729 <code class="language-text highlighter-rouge">7a43fbb</code> links to code style guides (Sjors)</li>
    <li>#11793 <code class="language-text highlighter-rouge">8879d50</code> Bump OS X version to 10.13 (Varunram)</li>
    <li>#11783 <code class="language-text highlighter-rouge">16fff80</code> Fix shutdown in case of errors during initialization (laanwj)</li>
    <li>#11804 <code class="language-text highlighter-rouge">00d25e9</code> Fixed outdated link with archive.is (TimothyShimmin)</li>
    <li>#11960 <code class="language-text highlighter-rouge">4307062</code> Fix link to installation script (laudaa)</li>
    <li>#12027 <code class="language-text highlighter-rouge">63a4dc1</code> Remove boost –c++ flag from osx build instructions (fernandezpablo85)</li>
    <li>#12062 <code class="language-text highlighter-rouge">5961b23</code> Increment MIT Licence copyright header year on files modified in 2017 (akx20000a)</li>
    <li>#12063 <code class="language-text highlighter-rouge">36a5a44</code> Update license year range to 2018 (akx20000a)</li>
    <li>#12093 <code class="language-text highlighter-rouge">5691028</code> Fix incorrect Markdown link (practicalswift)</li>
    <li>#12143 <code class="language-text highlighter-rouge">b0d626d</code> Fix link for BIP159 pull request (azuchi)</li>
    <li>#12112 <code class="language-text highlighter-rouge">3c62868</code> Remove the ending slashes from RPC URI format (jackycjh)</li>
    <li>#12166 <code class="language-text highlighter-rouge">e839d65</code> Clarify -walletdir usage (jnewbery)</li>
    <li>#12241 <code class="language-text highlighter-rouge">b030133</code> Fix incorrect link in /test/ README.md (fanquake)</li>
    <li>#12187 <code class="language-text highlighter-rouge">b5e4b9b</code> Updating benchmarkmarking.md with an updated sample output (jeffrade)</li>
    <li>#12294 <code class="language-text highlighter-rouge">7cf1aea</code> Create NetBSD build instructions and fix compilation (fanquake)</li>
    <li>#12251 <code class="language-text highlighter-rouge">cc5870a</code> initwallet: Do not translate highly technical addresstype help (MarcoFalke)</li>
    <li>#11984 <code class="language-text highlighter-rouge">efae366</code> Update OpenBSD build instructions for 6.2 (cont’d) (laanwj)</li>
    <li>#12293 <code class="language-text highlighter-rouge">9d9c418</code> Mention that HD is enabled if hdmasterkeyid is present in getwalletinfo RPC help (fanquake)</li>
    <li>#12077 <code class="language-text highlighter-rouge">c04cb48</code> Correct <code class="language-text highlighter-rouge">sendmany</code> curl example (251Labs)</li>
    <li>#10677 <code class="language-text highlighter-rouge">b3ecb7b</code> Document that addmultisigaddress is intended for non-watchonly addresses (instagibbs)</li>
    <li>#12177 <code class="language-text highlighter-rouge">cad504b</code> Fix address_type help text of getnewaddress and getrawchangeaddress (mruddy)</li>
  </ul>

  <h3 id="refactoring">Refactoring</h3>
  <ul>
    <li>#9964 <code class="language-text highlighter-rouge">b6a4891</code> Add const to methods that do not modify the object for which it is called (practicalswift)</li>
    <li>#10965 <code class="language-text highlighter-rouge">655970d</code> Replace deprecated throw() with noexcept specifier (C++11) (practicalswift)</li>
    <li>#10645 <code class="language-text highlighter-rouge">c484ec6</code> Use nullptr (C++11) instead of zero (0) as the null pointer constant (practicalswift)</li>
    <li>#10901 <code class="language-text highlighter-rouge">22e301a</code> Fix constness of ArgsManager methods (promag)</li>
    <li>#10969 <code class="language-text highlighter-rouge">4afb5aa</code> Declare single-argument (non-converting) constructors “explicit” (practicalswift)</li>
    <li>#11071 <code class="language-text highlighter-rouge">dbf6bd6</code> Use static_assert(…, …) (C++11) instead of assert(…) where appropriate (practicalswift)</li>
    <li>#10809 <code class="language-text highlighter-rouge">c559884</code> optim: mark a few classes final (theuni)</li>
    <li>#10843 <code class="language-text highlighter-rouge">2ab7c63</code> Add attribute [[noreturn]] (C++11) to functions that will not return (practicalswift)</li>
    <li>#11151 <code class="language-text highlighter-rouge">7fd49d0</code> Fix header guards using reserved identifiers (danra)</li>
    <li>#11138 <code class="language-text highlighter-rouge">2982511</code> Compat: Simplify bswap_16 implementation (danra)</li>
    <li>#11161 <code class="language-text highlighter-rouge">745bbdc</code> Remove redundant explicitly defined copy ctors (danra)</li>
    <li>#11144 <code class="language-text highlighter-rouge">cee4fe1</code> Move local include to before system includes (danra)</li>
    <li>#10781 <code class="language-text highlighter-rouge">60dd9cc</code> Python cleanups (practicalswift)</li>
    <li>#10701 <code class="language-text highlighter-rouge">50fae68</code> Remove the virtual specifier for functions with the override specifier (practicalswift)</li>
    <li>#11164 <code class="language-text highlighter-rouge">38a54a5</code> Fix boost headers included as user instead of system headers (danra)</li>
    <li>#11143 <code class="language-text highlighter-rouge">3aa60b7</code> Fix include path for bitcoin-config.h (danra)</li>
    <li>#8330 <code class="language-text highlighter-rouge">59e1789</code> Structure Packing Optimizations in C{,Mutable}Transaction (JeremyRubin)</li>
    <li>#10845 <code class="language-text highlighter-rouge">39ae413</code> Remove unreachable code (practicalswift)</li>
    <li>#11238 <code class="language-text highlighter-rouge">6acdb1f</code> Add assertions before potential null deferences (MeshCollider)</li>
    <li>#11259 <code class="language-text highlighter-rouge">089b742</code> Remove duplicate destination decoding (promag)</li>
    <li>#11232 <code class="language-text highlighter-rouge">2f0d3e6</code> Ensure that data types are consistent (jjz)</li>
    <li>#10793 <code class="language-text highlighter-rouge">efb4383</code> Changing &amp;var[0] to var.data() (MeshCollider)</li>
    <li>#11196 <code class="language-text highlighter-rouge">e278f86</code> Switch memory_cleanse implementation to BoringSSL’s to ensure memory clearing even with -lto (maaku)</li>
    <li>#10888 <code class="language-text highlighter-rouge">9821274</code> range-based loops and const qualifications in net.cpp (benma)</li>
    <li>#11351 <code class="language-text highlighter-rouge">6c4fecf</code> Refactor: Modernize disallowed copy constructors/assignment (danra)</li>
    <li>#11385 <code class="language-text highlighter-rouge">94c9015</code> Remove some unused functions and methods (sipa)</li>
    <li>#11301 <code class="language-text highlighter-rouge">8776787</code> add m_added_nodes to connman options (benma)</li>
    <li>#11432 <code class="language-text highlighter-rouge">058c0f9</code> Remove unused fTry from push_lock (promag)</li>
    <li>#11107 <code class="language-text highlighter-rouge">e93fff1</code> Fix races in AppInitMain and others with lock and atomic bools (MeshCollider)</li>
    <li>#9572 <code class="language-text highlighter-rouge">17f2ace</code> Skip witness sighash cache for non-segwit transactions (jl2012)</li>
    <li>#10961 <code class="language-text highlighter-rouge">da0478e</code> Improve readability of DecodeBase58Check(…) (practicalswift)</li>
    <li>#11133 <code class="language-text highlighter-rouge">a865b38</code> Document assumptions that are being made to avoid division by zero (practicalswift)</li>
    <li>#11073 <code class="language-text highlighter-rouge">3bb77eb</code> Remove dead store in ecdsa_signature_parse_der_lax (BitonicEelis)</li>
    <li>#10898 <code class="language-text highlighter-rouge">470c730</code> Fix invalid checks (NULL checks after dereference, redundant checks, etc.) (practicalswift)</li>
    <li>#11495 <code class="language-text highlighter-rouge">50d72b3</code> [trivial] Make namespace explicit for is_regular_file (jnewbery)</li>
    <li>#11511 <code class="language-text highlighter-rouge">db2f83e</code> [Init] Remove redundant exit(EXIT_FAILURE) instances and replace with return false (donaloconnor)</li>
    <li>#10866 <code class="language-text highlighter-rouge">ef8a634</code> Fix -Wthread-safety-analysis warnings. Compile with -Wthread-safety-analysis if available (practicalswift)</li>
    <li>#11221 <code class="language-text highlighter-rouge">0dec4cc</code> Refactor: simpler read (gnuser)</li>
    <li>#10696 <code class="language-text highlighter-rouge">ef3758d</code> Remove redundant nullptr checks before deallocation (practicalswift)</li>
    <li>#11043 <code class="language-text highlighter-rouge">5e9be16</code> Use std::unique_ptr (C++11) where possible (practicalswift)</li>
    <li>#11353 <code class="language-text highlighter-rouge">05a7619</code> Small refactor of CCoinsViewCache::BatchWrite() (danra)</li>
    <li>#10749 <code class="language-text highlighter-rouge">2adbddb</code> Use compile-time constants instead of unnamed enumerations (remove “enum hack”) (practicalswift)</li>
    <li>#11603 <code class="language-text highlighter-rouge">a933cb1</code> Move RPC registration out of AppInitParameterInteraction (ryanofsky)</li>
    <li>#11722 <code class="language-text highlighter-rouge">26efc22</code> Switched sync.{cpp,h} to std threading primitives (tjps)</li>
    <li>#10493 <code class="language-text highlighter-rouge">fbce66a</code> Use range-based for loops (C++11) when looping over map elements (practicalswift)</li>
    <li>#11337 <code class="language-text highlighter-rouge">0d7e0a3</code> Fix code constness in CBlockIndex::GetAncestor() overloads (danra)</li>
    <li>#11516 <code class="language-text highlighter-rouge">0e722e8</code> crypto: Add test cases covering the relevant HMAC-SHA{256,512} key length boundaries (practicalswift)</li>
    <li>#10574 <code class="language-text highlighter-rouge">5d132e8</code> Remove includes in .cpp files for things the corresponding .h file already included (practicalswift)</li>
    <li>#11884 <code class="language-text highlighter-rouge">66479c0</code> Remove unused include in hash.cpp (kallewoof)</li>
    <li>#10839 <code class="language-text highlighter-rouge">c66adb2</code> Don’t use pass by reference to const for cheaply-copied types (bool, char, etc.) (practicalswift)</li>
    <li>#10657 <code class="language-text highlighter-rouge">79399c8</code> Utils: Improvements to ECDSA key-handling code (str4d)</li>
    <li>#12250 <code class="language-text highlighter-rouge">e37ca2b</code> Make CKey::Load references const (ryanofsky)</li>
    <li>#12108 <code class="language-text highlighter-rouge">9220426</code> Remove unused fQuit var from checkqueue.h (donaloconnor)</li>
    <li>#12159 <code class="language-text highlighter-rouge">f3c7062</code> Use the character based overload for std::string::find (kekimusmaximus)</li>
    <li>#12266 <code class="language-text highlighter-rouge">3448907</code> Move scheduler/threadGroup into common-init instead of per-app (TheBlueMatt)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#11246 <code class="language-text highlighter-rouge">777519b</code> github-merge: Coalesce git fetches (laanwj)</li>
    <li>#10871 <code class="language-text highlighter-rouge">c9a4aa8</code> Handle getinfo in bitcoin-cli w/ -getinfo (revival of #8843) (achow101)</li>
    <li>#11419 <code class="language-text highlighter-rouge">093074b</code> Utils: Fix launchctl not being able to stop bitcoind (OmeGak)</li>
    <li>#11394 <code class="language-text highlighter-rouge">6e4e98e</code> Perform a weaker subtree check in Travis (sipa)</li>
    <li>#11702 <code class="language-text highlighter-rouge">4122112</code> [build] Add a script for installing db4 (jamesob)</li>
    <li>#11794 <code class="language-text highlighter-rouge">dd49862</code> Prefix leveldb debug logging (laanwj)</li>
    <li>#11781 <code class="language-text highlighter-rouge">24df9af</code> Add <code class="language-text highlighter-rouge">-debuglogfile</code> option (laanwj)</li>
    <li>#10773 <code class="language-text highlighter-rouge">c17f11f</code> Shell script cleanups (practicalswift)</li>
    <li>#11829 <code class="language-text highlighter-rouge">7630a1f</code> Test datadir specified in conf file exists (MeshCollider)</li>
    <li>#11836 <code class="language-text highlighter-rouge">d44535d</code> Rename rpcuser.py to rpcauth.py (hkjn)</li>
    <li>#11831 <code class="language-text highlighter-rouge">d48ab83</code> Always return true if AppInitMain got to the end (TheBlueMatt)</li>
    <li>#11943 <code class="language-text highlighter-rouge">1808660</code> contrib: fix typo in install_db4.sh help message (laanwj)</li>
    <li>#12075 <code class="language-text highlighter-rouge">c991b30</code> [scripts] Add missing univalue file to copyright_header.py (fanquake)</li>
    <li>#12197 <code class="language-text highlighter-rouge">000ac4f</code> Log debug build status and warn when running benchmarks (laanwj)</li>
    <li>#10672 <code class="language-text highlighter-rouge">6ab0e4c</code> Avoid division by zero in the case of a corrupt estimates file (practicalswift)</li>
    <li>#11273 <code class="language-text highlighter-rouge">cdd6bbf</code> Ignore old format estimation file (Xekyo)</li>
    <li>#11951 <code class="language-text highlighter-rouge">1fb34e0</code> Remove dead feeest-file read code for old versions (TheBlueMatt)</li>
    <li>#11421 <code class="language-text highlighter-rouge">9ccafb1</code> Merge current secp256k1 subtree (MarcoFalke)</li>
    <li>#11573 <code class="language-text highlighter-rouge">2631d55</code> [Util] Update tinyformat.h (fanquake)</li>
    <li>#10529 <code class="language-text highlighter-rouge">331352f</code> Improve bitcoind systemd service file (Flowdalic)</li>
    <li>#11620 <code class="language-text highlighter-rouge">70fec9e</code> [build] .gitignore: add background.tiff (Sjors)</li>
    <li>#11558 <code class="language-text highlighter-rouge">68e021e</code> Minimal code changes to allow msvc compilation (sipsorcery)</li>
    <li>#11284 <code class="language-text highlighter-rouge">10bee0d</code> Fix invalid memory access in CScript::operator+= (guidovranken, ajtowns)</li>
    <li>#10939 <code class="language-text highlighter-rouge">a1f7f18</code> [init] Check non-emptiness of -blocknotify command prior to executing (practicalswift)</li>
    <li>#11467 <code class="language-text highlighter-rouge">937613d</code> Fix typos. Use nullptr instead of NULL (practicalswift)</li>
    <li>#11834 <code class="language-text highlighter-rouge">5bea05b</code> [verify-commits] Fix gpg.sh’s echoing for commits with ‘\n’ (TheBlueMatt)</li>
    <li>#11830 <code class="language-text highlighter-rouge">a13e443</code> rpcuser.py: Use ‘python’ not ‘python2’ (hkjn)</li>
    <li>#12194 <code class="language-text highlighter-rouge">7abb0f0</code> Add change type option to fundrawtransaction (promag)</li>
    <li>#12269 <code class="language-text highlighter-rouge">2ae7cf8</code> Update defaultAssumeValid to block 506067 (gmaxwell)</li>
    <li>#11952 <code class="language-text highlighter-rouge">9ab9963</code> univalue: Bump subtree (MarcoFalke)</li>
    <li>#12367 <code class="language-text highlighter-rouge">09fc859</code> Fix two fast-shutdown bugs (TheBlueMatt)</li>
    <li>#12422 <code class="language-text highlighter-rouge">4d54e7a</code> util: Make LockDirectory thread-safe, consistent, and fix OpenBSD 6.2 build (laanwj)</li>
  </ul>

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>251</li>
    <li>Aaron Clauson</li>
    <li>Aaron Golliver</li>
    <li>aaron-hanson</li>
    <li>Adam Langley</li>
    <li>Akio Nakamura</li>
    <li>Akira Takizawa</li>
    <li>Alejandro Avilés</li>
    <li>Alex Morcos</li>
    <li>Alin Rus</li>
    <li>Anditto Heristyo</li>
    <li>Andras Elso</li>
    <li>Andreas Schildbach</li>
    <li>Andrew Chow</li>
    <li>Anthony Towns</li>
    <li>azuchi</li>
    <li>Carl Dong</li>
    <li>Chris Moore</li>
    <li>Chris Stewart</li>
    <li>Christian Gentry</li>
    <li>Cory Fields</li>
    <li>Cristian Mircea Messel</li>
    <li>CryptAxe</li>
    <li>Dan Raviv</li>
    <li>Daniel Edgecumbe</li>
    <li>danra</li>
    <li>david60</li>
    <li>Donal O’Connor</li>
    <li>dongsamb</li>
    <li>Dusty Williams</li>
    <li>Eelis</li>
    <li>esneider</li>
    <li>Evan Klitzke</li>
    <li>fanquake</li>
    <li>Ferdinando M. Ametrano</li>
    <li>fivepiece</li>
    <li>flack</li>
    <li>Florian Schmaus</li>
    <li>gnuser</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>Henrik Jonsson</li>
    <li>Jack Grigg</li>
    <li>Jacky C</li>
    <li>James Evans</li>
    <li>James O’Beirne</li>
    <li>Jan Sarenik</li>
    <li>Jeff Rade</li>
    <li>Jeremiah Buddenhagen</li>
    <li>Jeremy Rubin</li>
    <li>Jim Posen</li>
    <li>jjz</li>
    <li>Joe Harvell</li>
    <li>Johannes Kanig</li>
    <li>John Newbery</li>
    <li>Johnson Lau</li>
    <li>Jonas Nick</li>
    <li>Jonas Schnelli</li>
    <li>João Barbosa</li>
    <li>Jorge Timón</li>
    <li>Karel Bílek</li>
    <li>Karl-Johan Alm</li>
    <li>klemens</li>
    <li>Kyuntae Ethan Kim</li>
    <li>laudaa</li>
    <li>Lawrence Nahum</li>
    <li>Lucas Betschart</li>
    <li>Luke Dashjr</li>
    <li>Luke Mlsna</li>
    <li>MarcoFalke</li>
    <li>Mark Friedenbach</li>
    <li>Marko Bencun</li>
    <li>Martin Ankerl</li>
    <li>Matt Corallo</li>
    <li>mruddy</li>
    <li>Murch</li>
    <li>NicolasDorier</li>
    <li>Pablo Fernandez</li>
    <li>Paul Berg</li>
    <li>Pedro Branco</li>
    <li>Pierre Rochard</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>Randolf Richardson</li>
    <li>Russell Yanofsky</li>
    <li>Samuel Dobson</li>
    <li>Sean Erle Johnson</li>
    <li>Shooter</li>
    <li>Sjors Provoost</li>
    <li>Suhas Daftuar</li>
    <li>Thomas Snider</li>
    <li>Thoragh</li>
    <li>Tim Shimmin</li>
    <li>Tomas van der Wansem</li>
    <li>Utsav Gupta</li>
    <li>Varunram Ganesh</li>
    <li>Vivek Ganesan</li>
    <li>Werner Lemberg</li>
    <li>William Casarin</li>
    <li>Willy Ko</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.15.1 released</title>
            <link>https://bitcoin.org/en/release/v0.15.1</link>
            <guid>https://bitcoin.org/en/release/v0.15.1</guid>
          
            <pubDate>Sat, 11 Nov 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version <em>0.15.1</em> is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoincore.org/bin/bitcoin-core-0.15.1/</del></p>

  <p>or</p>

  <p><del>https://bitcoin.org/bin/bitcoin-core-0.15.1/</del></p>

  <p>This is a new minor version release, including various bugfixes and
performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the 
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0 or higher, your chainstate database will
be converted to a new format, which will take anywhere from a few minutes to
half an hour, depending on the speed of your machine.</p>

  <p>The file format of <code class="language-text highlighter-rouge">fee_estimates.dat</code> changed in version 0.15.0. Hence, a
downgrade from version 0.15 or upgrade to version 0.15 will cause all fee
estimates to be discarded.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading
directly from 0.7.x and earlier without redownloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>The chainstate database for this release is not compatible with previous
releases, so if you run 0.15 and then decide to switch back to any
older version, you will need to run the old release with the <code class="language-text highlighter-rouge">-reindex-chainstate</code>
option to rebuild the chainstate data structures in the old format.</p>

  <p>If your node has pruning enabled, this will entail re-downloading and
processing the entire blockchain.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="network-fork-safety-enhancements">Network fork safety enhancements</h2>

  <p>A number of changes to the way Bitcoin Core deals with peer connections and invalid blocks
have been made, as a safety precaution against blockchain forks and misbehaving peers.</p>

  <ul>
    <li>
      <p>Unrequested blocks with less work than the minimum-chain-work are now no longer processed even
if they have more work than the tip (a potential issue during IBD where the tip may have low-work).
This prevents peers wasting the resources of a node.</p>
    </li>
    <li>
      <p>Peers which provide a chain with less work than the minimum-chain-work during IBD will now be disconnected.</p>
    </li>
    <li>
      <p>For a given outbound peer, we now check whether their best known block has at least as much work as our tip. If it
doesn’t, and if we still haven’t heard about a block with sufficient work after a 20 minute timeout, then we send
a single getheaders message, and wait 2 more minutes. If after two minutes their best known block has insufficient
work, we disconnect that peer. We protect 4 of our outbound peers from being disconnected by this logic to prevent
excessive network topology changes as a result of this algorithm, while still ensuring that we have a reasonable
number of nodes not known to be on bogus chains.</p>
    </li>
    <li>
      <p>Outbound (non-manual) peers that serve us block headers that are already known to be invalid (other than compact
block announcements, because BIP 152 explicitly permits nodes to relay compact blocks before fully validating them)
will now be disconnected.</p>
    </li>
    <li>
      <p>If the chain tip has not been advanced for over 30 minutes, we now assume the tip may be stale and will try to connect
to an additional outbound peer. A periodic check ensures that if this extra peer connection is in use, we will disconnect
the peer that least recently announced a new block.</p>
    </li>
    <li>
      <p>The set of all known invalid-themselves blocks (i.e. blocks which we attempted to connect but which were found to be
invalid) are now tracked and used to check if new headers build on an invalid chain. This ensures that everything that
descends from an invalid block is marked as such.</p>
    </li>
  </ul>

  <h2 id="miner-block-size-limiting-deprecated">Miner block size limiting deprecated</h2>

  <p>Though blockmaxweight has been preferred for limiting the size of blocks returned by
getblocktemplate since 0.13.0, blockmaxsize remained as an option for those who wished
to limit their block size directly. Using this option resulted in a few UI issues as
well as non-optimal fee selection and ever-so-slightly worse performance, and has thus
now been deprecated. Further, the blockmaxsize option is now used only to calculate an
implied blockmaxweight, instead of limiting block size directly. Any miners who wish
to limit their blocks by size, instead of by weight, will have to do so manually by
removing transactions from their block template directly.</p>

  <h2 id="gui-settings-backed-up-on-reset">GUI settings backed up on reset</h2>

  <p>The GUI settings will now be written to <code class="language-text highlighter-rouge">guisettings.ini.bak</code> in the data directory before wiping them when
the <code class="language-text highlighter-rouge">-resetguisettings</code> argument is used. This can be used to retroactively troubleshoot issues due to the
GUI settings.</p>

  <h2 id="duplicate-wallets-disallowed">Duplicate wallets disallowed</h2>

  <p>Previously, it was possible to open the same wallet twice by manually copying the wallet file, causing
issues when both were opened simultaneously. It is no longer possible to open copies of the same wallet.</p>

  <h2 id="debug--minimumchainwork-argument-added">Debug <code class="language-text highlighter-rouge">-minimumchainwork</code> argument added</h2>

  <p>A hidden debug argument <code class="language-text highlighter-rouge">-minimumchainwork</code> has been added to allow a custom minimum work value to be used
when validating a chain.</p>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li>
      <p>The “currentblocksize” value in getmininginfo has been removed.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">dumpwallet</code> no longer allows overwriting files. This is a security measure
as well as prevents dangerous user mistakes.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">backupwallet</code> will now fail when attempting to backup to source file, rather than
destroying the wallet.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">listsinceblock</code> will now throw an error if an unknown <code class="language-text highlighter-rouge">blockhash</code> argument
value is passed, instead of returning a list of all wallet transactions since
the genesis block. The behaviour is unchanged when an empty string is provided.</p>
    </li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="change-log">0.15.1 Change log</h1>

  <h3 id="mining">Mining</h3>
  <ul>
    <li>#11100 <code class="language-text highlighter-rouge">7871a7d</code> Fix confusing blockmax{size,weight} options, dont default to throwing away money (TheBlueMatt)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#10859 <code class="language-text highlighter-rouge">2a5d099</code> gettxout: Slightly improve doc and tests (jtimon)</li>
    <li>#11267 <code class="language-text highlighter-rouge">b1a6c94</code> update cli for estimate*fee argument rename (laanwj)</li>
    <li>#11483 <code class="language-text highlighter-rouge">20cdc2b</code> Fix importmulti bug when importing an already imported key (pedrobranco)</li>
    <li>#9937 <code class="language-text highlighter-rouge">a43be5b</code> Prevent <code class="language-text highlighter-rouge">dumpwallet</code> from overwriting files (laanwj)</li>
    <li>#11465 <code class="language-text highlighter-rouge">405e069</code> Update named args documentation for importprivkey (dusty-wil)</li>
    <li>#11131 <code class="language-text highlighter-rouge">b278a43</code> Write authcookie atomically (laanwj)</li>
    <li>#11565 <code class="language-text highlighter-rouge">7d4546f</code> Make listsinceblock refuse unknown block hash (ryanofsky)</li>
    <li>#11593 <code class="language-text highlighter-rouge">8195cb0</code> Work-around an upstream libevent bug (theuni)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#11397 <code class="language-text highlighter-rouge">27e861a</code> Improve and document SOCKS code (laanwj)</li>
    <li>#11252 <code class="language-text highlighter-rouge">0fe2a9a</code> When clearing addrman clear mapInfo and mapAddr (instagibbs)</li>
    <li>#11527 <code class="language-text highlighter-rouge">a2bd86a</code> Remove my testnet DNS seed (schildbach)</li>
    <li>#10756 <code class="language-text highlighter-rouge">0a5477c</code> net processing: swap out signals for an interface class (theuni)</li>
    <li>#11531 <code class="language-text highlighter-rouge">55b7abf</code> Check that new headers are not a descendant of an invalid block (more effeciently) (TheBlueMatt)</li>
    <li>#11560 <code class="language-text highlighter-rouge">49bf090</code> Connect to a new outbound peer if our tip is stale (sdaftuar)</li>
    <li>#11568 <code class="language-text highlighter-rouge">fc966bb</code> Disconnect outbound peers on invalid chains (sdaftuar)</li>
    <li>#11578 <code class="language-text highlighter-rouge">ec8dedf</code> Add missing lock in ProcessHeadersMessage(…) (practicalswift)</li>
    <li>#11456 <code class="language-text highlighter-rouge">6f27965</code> Replace relevant services logic with a function suite (TheBlueMatt)</li>
    <li>#11490 <code class="language-text highlighter-rouge">bf191a7</code> Disconnect from outbound peers with bad headers chains (sdaftuar)</li>
  </ul>

  <h3 id="validation">Validation</h3>
  <ul>
    <li>#10357 <code class="language-text highlighter-rouge">da4908c</code> Allow setting nMinimumChainWork on command line (sdaftuar)</li>
    <li>#11458 <code class="language-text highlighter-rouge">2df65ee</code> Don’t process unrequested, low-work blocks (sdaftuar)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#11440 <code class="language-text highlighter-rouge">b6c0209</code> Fix validationinterface build on super old boost/clang (TheBlueMatt)</li>
    <li>#11530 <code class="language-text highlighter-rouge">265bb21</code> Add share/rpcuser to dist. source code archive (MarcoFalke)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#11334 <code class="language-text highlighter-rouge">19d63e8</code> Remove custom fee radio group and remove nCustomFeeRadio setting (achow101)</li>
    <li>#11198 <code class="language-text highlighter-rouge">7310f1f</code> Fix display of package name on ‘open config file’ tooltip (esotericnonsense)</li>
    <li>#11015 <code class="language-text highlighter-rouge">6642558</code> Add delay before filtering transactions (lclc)</li>
    <li>#11338 <code class="language-text highlighter-rouge">6a62c74</code> Backup former GUI settings on <code class="language-text highlighter-rouge">-resetguisettings</code> (laanwj)</li>
    <li>
      <table>
        <tbody>
          <tr>
            <td>#11335 <code class="language-text highlighter-rouge">8d13b42</code> Replace save</td>
            <td>restoreWindowGeometry with Qt functions (MeshCollider)</td>
          </tr>
        </tbody>
      </table>
    </li>
    <li>#11237 <code class="language-text highlighter-rouge">2e31b1d</code> Fixing division by zero in time remaining (MeshCollider)</li>
    <li>#11247 <code class="language-text highlighter-rouge">47c02a8</code> Use IsMine to validate custom change address (MarcoFalke)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#11017 <code class="language-text highlighter-rouge">9e8aae3</code> Close DB on error (kallewoof)</li>
    <li>#11225 <code class="language-text highlighter-rouge">6b4d9f2</code> Update stored witness in AddToWallet (sdaftuar)</li>
    <li>#11126 <code class="language-text highlighter-rouge">2cb720a</code> Acquire cs_main lock before cs_wallet during wallet initialization (ryanofsky)</li>
    <li>#11476 <code class="language-text highlighter-rouge">9c8006d</code> Avoid opening copied wallet databases simultaneously (ryanofsky)</li>
    <li>#11492 <code class="language-text highlighter-rouge">de7053f</code> Fix leak in CDB constructor (promag)</li>
    <li>#11376 <code class="language-text highlighter-rouge">fd79ed6</code> Ensure backupwallet fails when attempting to backup to source file (tomasvdw)</li>
    <li>#11326 <code class="language-text highlighter-rouge">d570aa4</code> Fix crash on shutdown with invalid wallet (MeshCollider)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#11399 <code class="language-text highlighter-rouge">a825d4a</code> Fix bip68-sequence rpc test (jl2012)</li>
    <li>#11150 <code class="language-text highlighter-rouge">847c75e</code> Add getmininginfo test (mess110)</li>
    <li>#11407 <code class="language-text highlighter-rouge">806c78f</code> add functional test for mempoolreplacement command line arg (instagibbs)</li>
    <li>#11433 <code class="language-text highlighter-rouge">e169349</code> Restore bitcoin-util-test py2 compatibility (MarcoFalke)</li>
    <li>#11308 <code class="language-text highlighter-rouge">2e1ac70</code> zapwallettxes: Wait up to 3s for mempool reload (MarcoFalke)</li>
    <li>#10798 <code class="language-text highlighter-rouge">716066d</code> test bitcoin-cli (jnewbery)</li>
    <li>#11443 <code class="language-text highlighter-rouge">019c492</code> Allow “make cov” out-of-tree; Fix rpc mapping check (MarcoFalke)</li>
    <li>#11445 <code class="language-text highlighter-rouge">51bad91</code> 0.15.1 Backports (MarcoFalke)</li>
    <li>#11319 <code class="language-text highlighter-rouge">2f0b30a</code> Fix error introduced into p2p-segwit.py, and prevent future similar errors (sdaftuar)</li>
    <li>#10552 <code class="language-text highlighter-rouge">e4605d9</code> Tests for zmqpubrawtx and zmqpubrawblock (achow101)</li>
    <li>#11067 <code class="language-text highlighter-rouge">eeb24a3</code> TestNode: Add wait_until_stopped helper method (MarcoFalke)</li>
    <li>#11068 <code class="language-text highlighter-rouge">5398f20</code> Move wait_until to util (MarcoFalke)</li>
    <li>#11125 <code class="language-text highlighter-rouge">812c870</code> Add bitcoin-cli -stdin and -stdinrpcpass functional tests (promag)</li>
    <li>#11077 <code class="language-text highlighter-rouge">1d80d1e</code> fix timeout issues from TestNode (jnewbery)</li>
    <li>#11078 <code class="language-text highlighter-rouge">f1ced0d</code> Make p2p-leaktests.py more robust (jnewbery)</li>
    <li>#11210 <code class="language-text highlighter-rouge">f3f7891</code> Stop test_bitcoin-qt touching ~/.bitcoin (MeshCollider)</li>
    <li>
      <table>
        <tbody>
          <tr>
            <td>#11234 <code class="language-text highlighter-rouge">f0b6795</code> Remove redundant testutil.cpp</td>
            <td>h files (MeshCollider)</td>
          </tr>
        </tbody>
      </table>
    </li>
    <li>#11215 <code class="language-text highlighter-rouge">cef0319</code> fixups from set_test_params() (jnewbery)</li>
    <li>#11345 <code class="language-text highlighter-rouge">f9cf7b5</code> Check connectivity before sending in assumevalid.py (jnewbery)</li>
    <li>#11091 <code class="language-text highlighter-rouge">c276c1e</code> Increase initial RPC timeout to 60 seconds (laanwj)</li>
    <li>#10711 <code class="language-text highlighter-rouge">fc2aa09</code> Introduce TestNode (jnewbery)</li>
    <li>#11230 <code class="language-text highlighter-rouge">d8dd8e7</code> Fixup dbcrash interaction with add_nodes() (jnewbery)</li>
    <li>#11241 <code class="language-text highlighter-rouge">4424176</code> Improve signmessages functional test (mess110)</li>
    <li>#11116 <code class="language-text highlighter-rouge">2c4ff35</code> Unit tests for script/standard and IsMine functions (jimpo)</li>
    <li>#11422 <code class="language-text highlighter-rouge">a36f332</code> Verify DBWrapper iterators are taking snapshots (TheBlueMatt)</li>
    <li>#11121 <code class="language-text highlighter-rouge">bb5e7cb</code> TestNode tidyups (jnewbery)</li>
    <li>#11521 <code class="language-text highlighter-rouge">ca0f3f7</code> travis: move back to the minimal image (theuni)</li>
    <li>#11538 <code class="language-text highlighter-rouge">adbc9d1</code> Fix race condition failures in replace-by-fee.py, sendheaders.py (sdaftuar)</li>
    <li>#11472 <code class="language-text highlighter-rouge">4108879</code> Make tmpdir option an absolute path, misc cleanup (MarcoFalke)</li>
    <li>#10853 <code class="language-text highlighter-rouge">5b728c8</code> Fix RPC failure testing (again) (jnewbery)</li>
    <li>#11310 <code class="language-text highlighter-rouge">b6468d3</code> Test listwallets RPC (mess110)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#11377 <code class="language-text highlighter-rouge">75997c3</code> Disallow uncompressed pubkeys in bitcoin-tx [multisig] output adds (TheBlueMatt)</li>
    <li>#11437 <code class="language-text highlighter-rouge">dea3b87</code> [Docs] Update Windows build instructions for using WSL and Ubuntu 17.04 (fanquake)</li>
    <li>#11318 <code class="language-text highlighter-rouge">8b61aee</code> Put back inadvertently removed copyright notices (gmaxwell)</li>
    <li>#11442 <code class="language-text highlighter-rouge">cf18f42</code> [Docs] Update OpenBSD Build Instructions for OpenBSD 6.2 (fanquake)</li>
    <li>#10957 <code class="language-text highlighter-rouge">50bd3f6</code> Avoid returning a BIP9Stats object with uninitialized values (practicalswift)</li>
    <li>#11539 <code class="language-text highlighter-rouge">01223a0</code> [verify-commits] Allow revoked keys to expire (TheBlueMatt)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Andreas Schildbach</li>
    <li>Andrew Chow</li>
    <li>Chris Moore</li>
    <li>Cory Fields</li>
    <li>Cristian Mircea Messel</li>
    <li>Daniel Edgecumbe</li>
    <li>Donal OConnor</li>
    <li>Dusty Williams</li>
    <li>fanquake</li>
    <li>Gregory Sanders</li>
    <li>Jim Posen</li>
    <li>John Newbery</li>
    <li>Johnson Lau</li>
    <li>João Barbosa</li>
    <li>Jorge Timón</li>
    <li>Karl-Johan Alm</li>
    <li>Lucas Betschart</li>
    <li>MarcoFalke</li>
    <li>Matt Corallo</li>
    <li>Paul Berg</li>
    <li>Pedro Branco</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>Russell Yanofsky</li>
    <li>Samuel Dobson</li>
    <li>Suhas Daftuar</li>
    <li>Tomas van der Wansem</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.15.0.1 released</title>
            <link>https://bitcoin.org/en/release/v0.15.0.1</link>
            <guid>https://bitcoin.org/en/release/v0.15.0.1</guid>
          
            <pubDate>Tue, 19 Sep 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version <em>0.15.0.1</em> is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/bitcoin-core-0.15.0.1/</del></p>

  <p>and</p>

  <p><del>https://bitcoincore.org/bin/bitcoin-core-0.15.0.1/</del></p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the 
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>The file format of <code class="language-text highlighter-rouge">fee_estimates.dat</code> changed in version 0.15.0. Hence, a
downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee
estimates to be discarded.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading
directly from 0.7.x and earlier without redownloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>The chainstate database for this release is not compatible with previous
releases, so if you run 0.15 and then decide to switch back to any
older version, you will need to run the old release with the <code class="language-text highlighter-rouge">-reindex-chainstate</code>
option to rebuild the chainstate data structures in the old format.</p>

  <p>If your node has pruning enabled, this will entail re-downloading and
processing the entire blockchain.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notes-for-01501">Notes for 0.15.0.1</h1>

  <h2 id="gui-startup-crash-issue">GUI startup crash issue</h2>

  <p>After upgrade to 0.15.0, some clients would crash at startup because a custom
fee setting was configured that no longer exists in the GUI. This is a minimal
patch to avoid this issue from occuring.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notes-for-0150">Notes for 0.15.0</h1>

  <h2 id="current-segwit-support">Current SegWit support</h2>

  <p>Version 0.15.0 supports adding a segregated witness address via the <code class="language-text highlighter-rouge">addwitnessaddress</code> RPC, but
please note that this is a testing/expert RPC, which does not guarantee recovery from backup. Only use
this RPC if you know what you are doing. More complete wallet support for segregated witness is coming
in a next version.</p>

  <h2 id="rescanning-with-encrypted-wallets">Rescanning with encrypted wallets</h2>

  <p>As in previous versions, when using an encrypted HD wallet, the keypool cannot be topped up without unlocking
the wallet. This means that currently, in order to recover from a backup of an encrypted HD wallet, the user
must unlock the wallet with a really long timeout and manually trigger a rescan, otherwise they risk missing
some keys when auto-topup cannot run. Unfortunately there is no <code class="language-text highlighter-rouge">rescan</code> RPC in this version, that will be
included in a future version, so for now a rescan can be triggered using one of the <code class="language-text highlighter-rouge">import*</code> commands, using
a dummy address generated by another (trusted) wallet.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="performance-improvements">Performance Improvements</h2>

  <p>Version 0.15 contains a number of significant performance improvements, which make
Initial Block Download, startup, transaction and block validation much faster:</p>

  <ul>
    <li>The chainstate database (which is used for tracking UTXOs) has been changed
from a per-transaction model to a per-output model (See <a href="https://github.com/bitcoin/bitcoin/pull/10195">PR 10195</a>). Advantages of this model
are that it:
      <ul>
        <li>avoids the CPU overhead of deserializing and serializing the unused outputs;</li>
        <li>has more predictable memory usage;</li>
        <li>uses simpler code;</li>
        <li>is adaptable to various future cache flushing strategies.</li>
      </ul>

      <p>As a result, validating the blockchain during Initial Block Download (IBD) and reindex
is ~30-40% faster, uses 10-20% less memory, and flushes to disk far less frequently.
The only downside is that the on-disk database is 15% larger. During the conversion from the previous format
a few extra gigabytes may be used.</p>
    </li>
    <li>Earlier versions experienced a spike in memory usage while flushing UTXO updates to disk.
As a result, only half of the available memory was actually used as cache, and the other half was
reserved to accommodate flushing. This is no longer the case (See <a href="https://github.com/bitcoin/bitcoin/pull/10148">PR 10148</a>), and the entirety of
the available cache (see <code class="language-text highlighter-rouge">-dbcache</code>) is now actually used as cache. This reduces the flushing
frequency by a factor 2 or more.</li>
    <li>In previous versions, signature validation for transactions has been cached when the
transaction is accepted to the mempool. Version 0.15 extends this to cache the entire script
validity (See <a href="https://github.com/bitcoin/bitcoin/pull/10192">PR 10192</a>). This means that if a transaction in a block has already been accepted to the
mempool, the scriptSig does not need to be re-evaluated. Empirical tests show that
this results in new block validation being 40-50% faster.</li>
    <li>LevelDB has been upgraded to version 1.20 (See <a href="https://github.com/bitcoin/bitcoin/pull/10544">PR 10544</a>). This version contains hardware acceleration for CRC
on architectures supporting SSE 4.2. As a result, synchronization and block validation are now faster.</li>
    <li>SHA256 hashing has been optimized for architectures supporting SSE 4 (See <a href="https://github.com/bitcoin/bitcoin/pull/10821">PR 10821</a>). SHA256 is around
50% faster on supported hardware, which results in around 5% faster IBD and block
validation. In version 0.15, SHA256 hardware optimization is disabled in release builds by
default, but can be enabled by using <code class="language-text highlighter-rouge">--enable-experimental-asm</code> when building.</li>
    <li>Refill of the keypool no longer flushes the wallet between each key which resulted in a ~20x speedup in creating a new wallet. Part of this speedup was used to increase the default keypool to 1000 keys to make recovery more robust. (See <a href="https://github.com/bitcoin/bitcoin/pull/10831">PR 10831</a>).</li>
  </ul>

  <h2 id="fee-estimation-improvements">Fee Estimation Improvements</h2>

  <p>Fee estimation has been significantly improved in version 0.15, with more accurate fee estimates used by the wallet and a wider range of options for advanced users of the <code class="language-text highlighter-rouge">estimatesmartfee</code> and <code class="language-text highlighter-rouge">estimaterawfee</code> RPCs (See <a href="https://github.com/bitcoin/bitcoin/pull/10199">PR 10199</a>).</p>

  <h3 id="changes-to-internal-logic-and-wallet-behavior">Changes to internal logic and wallet behavior</h3>

  <ul>
    <li>Internally, estimates are now tracked on 3 different time horizons. This allows for longer targets and means estimates adjust more quickly to changes in conditions.</li>
    <li>Estimates can now be <em>conservative</em> or <em>economical</em>. <em>Conservative</em> estimates use longer time horizons to produce an estimate which is less susceptible to rapid changes in fee conditions. <em>Economical</em> estimates use shorter time horizons and will be more affected by short-term changes in fee conditions. Economical estimates may be considerably lower during periods of low transaction activity (for example over weekends), but may result in transactions being unconfirmed if prevailing fees increase rapidly.</li>
    <li>By default, the wallet will use conservative fee estimates to increase the reliability of transactions being confirmed within the desired target. For transactions that are marked as replaceable, the wallet will use an economical estimate by default, since the fee can be ‘bumped’ if the fee conditions change rapidly (See <a href="https://github.com/bitcoin/bitcoin/pull/10589">PR 10589</a>).</li>
    <li>Estimates can now be made for confirmation targets up to 1008 blocks (one week).</li>
    <li>More data on historical fee rates is stored, leading to more precise fee estimates.</li>
    <li>Transactions which leave the mempool due to eviction or other non-confirmed reasons are now taken into account by the fee estimation logic, leading to more accurate fee estimates.</li>
    <li>The fee estimation logic will make sure enough data has been gathered to return a meaningful estimate. If there is insufficient data, a fallback default fee is used.</li>
  </ul>

  <h3 id="changes-to-fee-estimate-rpcs">Changes to fee estimate RPCs</h3>

  <ul>
    <li>The <code class="language-text highlighter-rouge">estimatefee</code> RPC is now deprecated in favor of using only <code class="language-text highlighter-rouge">estimatesmartfee</code> (which is the implementation used by the GUI)</li>
    <li>The <code class="language-text highlighter-rouge">estimatesmartfee</code> RPC interface has been changed (See <a href="https://github.com/bitcoin/bitcoin/pull/10707">PR 10707</a>):
      <ul>
        <li>The <code class="language-text highlighter-rouge">nblocks</code> argument has been renamed to <code class="language-text highlighter-rouge">conf_target</code> (to be consistent with other RPC methods).</li>
        <li>An <code class="language-text highlighter-rouge">estimate_mode</code> argument has been added. This argument takes one of the following strings: <code class="language-text highlighter-rouge">CONSERVATIVE</code>, <code class="language-text highlighter-rouge">ECONOMICAL</code> or <code class="language-text highlighter-rouge">UNSET</code> (which defaults to <code class="language-text highlighter-rouge">CONSERVATIVE</code>).</li>
        <li>The RPC return object now contains an <code class="language-text highlighter-rouge">errors</code> member, which returns errors encountered during processing.</li>
        <li>If Bitcoin Core has not been running for long enough and has not seen enough blocks or transactions to produce an accurate fee estimation, an error will be returned (previously a value of -1 was used to indicate an error, which could be confused for a feerate).</li>
      </ul>
    </li>
    <li>A new <code class="language-text highlighter-rouge">estimaterawfee</code> RPC is added to provide raw fee data. External clients can query and use this data in their own fee estimation logic.</li>
  </ul>

  <h2 id="multi-wallet-support">Multi-wallet support</h2>

  <p>Bitcoin Core now supports loading multiple, separate wallets (See <a href="https://github.com/bitcoin/bitcoin/pull/8694">PR 8694</a>, <a href="https://github.com/bitcoin/bitcoin/pull/10849">PR 10849</a>). The wallets are completely separated, with individual balances, keys and received transactions.</p>

  <p>Multi-wallet is enabled by using more than one <code class="language-text highlighter-rouge">-wallet</code> argument when starting Bitcoin, either on the command line or in the Bitcoin config file.</p>

  <p><strong>In Bitcoin-Qt, only the first wallet will be displayed and accessible for creating and signing transactions.</strong> GUI selectable multiple wallets will be supported in a future version. However, even in 0.15 other loaded wallets will remain synchronized to the node’s current tip in the background. This can be useful if running a pruned node, since loading a wallet where the most recent sync is beyond the pruned height results in having to download and revalidate the whole blockchain. Continuing to synchronize all wallets in the background avoids this problem.</p>

  <p>Bitcoin Core 0.15.0 contains the following changes to the RPC interface and <code class="language-text highlighter-rouge">bitcoin-cli</code> for multi-wallet:</p>

  <ul>
    <li>When running Bitcoin Core with a single wallet, there are <strong>no</strong> changes to the RPC interface or <code class="language-text highlighter-rouge">bitcoin-cli</code>. All RPC calls and <code class="language-text highlighter-rouge">bitcoin-cli</code> commands continue to work as before.</li>
    <li>When running Bitcoin Core with multi-wallet, all <em>node-level</em> RPC methods continue to work as before. HTTP RPC requests should be send to the normal <code class="language-text highlighter-rouge">&lt;RPC IP address&gt;:&lt;RPC port&gt;/</code> endpoint, and <code class="language-text highlighter-rouge">bitcoin-cli</code> commands should be run as before. A <em>node-level</em> RPC method is any method which does not require access to the wallet.</li>
    <li>When running Bitcoin Core with multi-wallet, <em>wallet-level</em> RPC methods must specify the wallet for which they’re intended in every request. HTTP RPC requests should be send to the <code class="language-text highlighter-rouge">&lt;RPC IP address&gt;:&lt;RPC port&gt;/wallet/&lt;wallet name&gt;/</code> endpoint, for example <code class="language-text highlighter-rouge">127.0.0.1:8332/wallet/wallet1.dat/</code>. <code class="language-text highlighter-rouge">bitcoin-cli</code> commands should be run with a <code class="language-text highlighter-rouge">-rpcwallet</code> option, for example <code class="language-text highlighter-rouge">bitcoin-cli -rpcwallet=wallet1.dat getbalance</code>.</li>
    <li>A new <em>node-level</em> <code class="language-text highlighter-rouge">listwallets</code> RPC method is added to display which wallets are currently loaded. The names returned by this method are the same as those used in the HTTP endpoint and for the <code class="language-text highlighter-rouge">rpcwallet</code> argument.</li>
  </ul>

  <p>Note that while multi-wallet is now fully supported, the RPC multi-wallet interface should be considered unstable for version 0.15.0, and there may backwards-incompatible changes in future versions.</p>

  <h2 id="replace-by-fee-control-in-the-gui">Replace-by-fee control in the GUI</h2>

  <p>Bitcoin Core has supported creating opt-in replace-by-fee (RBF) transactions
since version 0.12.0, and since version 0.14.0 has included a <code class="language-text highlighter-rouge">bumpfee</code> RPC method to
replace unconfirmed opt-in RBF transactions with a new transaction that pays
a higher fee.</p>

  <p>In version 0.15, creating an opt-in RBF transaction and replacing the unconfirmed
transaction with a higher-fee transaction are both supported in the GUI (See <a href="https://github.com/bitcoin/bitcoin/pull/9592">PR 9592</a>).</p>

  <h2 id="removal-of-coin-age-priority">Removal of Coin Age Priority</h2>

  <p>In previous versions of Bitcoin Core, a portion of each block could be reserved for transactions based on the age and value of UTXOs they spent. This concept (Coin Age Priority) is a policy choice by miners, and there are no consensus rules around the inclusion of Coin Age Priority transactions in blocks. In practice, only a few miners continue to use Coin Age Priority for transaction selection in blocks. Bitcoin Core 0.15 removes all remaining support for Coin Age Priority (See <a href="https://github.com/bitcoin/bitcoin/pull/9602">PR 9602</a>). This has the following implications:</p>

  <ul>
    <li>The concept of <em>free transactions</em> has been removed. High Coin Age Priority transactions would previously be allowed to be relayed even if they didn’t attach a miner fee. This is no longer possible since there is no concept of Coin Age Priority. The <code class="language-text highlighter-rouge">-limitfreerelay</code> and <code class="language-text highlighter-rouge">-relaypriority</code> options which controlled relay of free transactions have therefore been removed.</li>
    <li>The <code class="language-text highlighter-rouge">-sendfreetransactions</code> option has been removed, since almost all miners do not include transactions which do not attach a transaction fee.</li>
    <li>The <code class="language-text highlighter-rouge">-blockprioritysize</code> option has been removed.</li>
    <li>The <code class="language-text highlighter-rouge">estimatepriority</code> and <code class="language-text highlighter-rouge">estimatesmartpriority</code> RPCs have been removed.</li>
    <li>The <code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>, <code class="language-text highlighter-rouge">getmempoolentry</code> and <code class="language-text highlighter-rouge">getrawmempool</code> RPCs no longer return <code class="language-text highlighter-rouge">startingpriority</code> and <code class="language-text highlighter-rouge">currentpriority</code>.</li>
    <li>The <code class="language-text highlighter-rouge">prioritisetransaction</code> RPC no longer takes a <code class="language-text highlighter-rouge">priority_delta</code> argument, which is replaced by a <code class="language-text highlighter-rouge">dummy</code> argument for backwards compatibility with clients using positional arguments. The RPC is still used to change the apparent fee-rate of the transaction by using the <code class="language-text highlighter-rouge">fee_delta</code> argument.</li>
    <li><code class="language-text highlighter-rouge">-minrelaytxfee</code> can now be set to 0. If <code class="language-text highlighter-rouge">minrelaytxfee</code> is set, then fees smaller than <code class="language-text highlighter-rouge">minrelaytxfee</code> (per kB) are rejected from relaying, mining and transaction creation. This defaults to 1000 satoshi/kB.</li>
    <li>The <code class="language-text highlighter-rouge">-printpriority</code> option has been updated to only output the fee rate and hash of transactions included in a block by the mining code.</li>
  </ul>

  <h2 id="mempool-persistence-across-restarts">Mempool Persistence Across Restarts</h2>

  <p>Version 0.14 introduced mempool persistence across restarts (the mempool is saved to a <code class="language-text highlighter-rouge">mempool.dat</code> file in the data directory prior to shutdown and restores the mempool when the node is restarted). Version 0.15 allows this feature to be switched on or off using the <code class="language-text highlighter-rouge">-persistmempool</code> command-line option (See <a href="https://github.com/bitcoin/bitcoin/pull/9966">PR 9966</a>). By default, the option is set to true, and the mempool is saved on shutdown and reloaded on startup. If set to false, the <code class="language-text highlighter-rouge">mempool.dat</code> file will not be loaded on startup or saved on shutdown.</p>

  <h2 id="new-rpc-methods">New RPC methods</h2>

  <p>Version 0.15 introduces several new RPC methods:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">abortrescan</code> stops current wallet rescan, e.g. when triggered by an <code class="language-text highlighter-rouge">importprivkey</code> call (See <a href="https://github.com/bitcoin/bitcoin/pull/10208">PR 10208</a>).</li>
    <li><code class="language-text highlighter-rouge">combinerawtransaction</code> accepts a JSON array of raw transactions and combines them into a single raw transaction (See <a href="https://github.com/bitcoin/bitcoin/pull/10571">PR 10571</a>).</li>
    <li><code class="language-text highlighter-rouge">estimaterawfee</code> returns raw fee data so that customized logic can be implemented to analyze the data and calculate estimates. See <a href="#fee-estimation-improvements">Fee Estimation Improvements</a> for full details on changes to the fee estimation logic and interface.</li>
    <li><code class="language-text highlighter-rouge">getchaintxstats</code> returns statistics about the total number and rate of transactions
in the chain (See <a href="https://github.com/bitcoin/bitcoin/pull/9733">PR 9733</a>).</li>
    <li><code class="language-text highlighter-rouge">listwallets</code> lists wallets which are currently loaded. See the <em>Multi-wallet</em> section
of these release notes for full details (See <a href="#multi-wallet-support">Multi-wallet support</a>).</li>
    <li><code class="language-text highlighter-rouge">uptime</code> returns the total runtime of the <code class="language-text highlighter-rouge">bitcoind</code> server since its last start (See <a href="https://github.com/bitcoin/bitcoin/pull/10400">PR 10400</a>).</li>
  </ul>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li>
      <p>When using Bitcoin Core in multi-wallet mode, RPC requests for wallet methods must specify
the wallet that they’re intended for. See <a href="#multi-wallet-support">Multi-wallet support</a> for full details.</p>
    </li>
    <li>The new database model no longer stores information about transaction
versions of unspent outputs (See <a href="#performance-improvements">Performance improvements</a>). This means that:
      <ul>
        <li>The <code class="language-text highlighter-rouge">gettxout</code> RPC no longer has a <code class="language-text highlighter-rouge">version</code> field in the response.</li>
        <li>The <code class="language-text highlighter-rouge">gettxoutsetinfo</code> RPC reports <code class="language-text highlighter-rouge">hash_serialized_2</code> instead of <code class="language-text highlighter-rouge">hash_serialized</code>,
which does not commit to the transaction versions of unspent outputs, but does
commit to the height and coinbase information.</li>
        <li>The <code class="language-text highlighter-rouge">getutxos</code> REST path no longer reports the <code class="language-text highlighter-rouge">txvers</code> field in JSON format,
and always reports 0 for transaction versions in the binary format</li>
      </ul>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">estimatefee</code> RPC is deprecated. Clients should switch to using the <code class="language-text highlighter-rouge">estimatesmartfee</code> RPC, which returns better fee estimates. See <a href="#fee-estimation-improvements">Fee Estimation Improvements</a> for full details on changes to the fee estimation logic and interface.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">gettxoutsetinfo</code> response now contains <code class="language-text highlighter-rouge">disk_size</code> and <code class="language-text highlighter-rouge">bogosize</code> instead of
<code class="language-text highlighter-rouge">bytes_serialized</code>. The first is a more accurate estimate of actual disk usage, but
is not deterministic. The second is unrelated to disk usage, but is a
database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the
length of its scriptPubKey (See <a href="https://github.com/bitcoin/bitcoin/pull/10426">PR 10426</a>).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">signrawtransaction</code> can no longer be used to combine multiple transactions into a single transaction. Instead, use the new <code class="language-text highlighter-rouge">combinerawtransaction</code> RPC (See <a href="https://github.com/bitcoin/bitcoin/pull/10571">PR 10571</a>).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">fundrawtransaction</code> no longer accepts a <code class="language-text highlighter-rouge">reserveChangeKey</code> option. This option used to allow RPC users to fund a raw transaction using an key from the keypool for the change address without removing it from the available keys in the keypool. The key could then be re-used for a <code class="language-text highlighter-rouge">getnewaddress</code> call, which could potentially result in confusing or dangerous behaviour (See <a href="https://github.com/bitcoin/bitcoin/pull/10784">PR 10784</a>).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">estimatepriority</code> and <code class="language-text highlighter-rouge">estimatesmartpriority</code> have been removed. See <a href="#removal-of-coin-age-priority">Removal of Coin Age Priority</a>.</p>
    </li>
    <li>The <code class="language-text highlighter-rouge">listunspent</code> RPC now takes a <code class="language-text highlighter-rouge">query_options</code> argument (see <a href="https://github.com/bitcoin/bitcoin/pull/8952">PR 8952</a>), which is a JSON object
containing one or more of the following members:
      <ul>
        <li><code class="language-text highlighter-rouge">minimumAmount</code> - a number specifying the minimum value of each UTXO</li>
        <li><code class="language-text highlighter-rouge">maximumAmount</code> - a number specifying the maximum value of each UTXO</li>
        <li><code class="language-text highlighter-rouge">maximumCount</code> - a number specifying the minimum number of UTXOs</li>
        <li><code class="language-text highlighter-rouge">minimumSumAmount</code> - a number specifying the minimum sum value of all UTXOs</li>
      </ul>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>, <code class="language-text highlighter-rouge">getmempoolentry</code> and <code class="language-text highlighter-rouge">getrawmempool</code> RPCs no longer return <code class="language-text highlighter-rouge">startingpriority</code> and <code class="language-text highlighter-rouge">currentpriority</code>. See <a href="#removal-of-coin-age-priority">Removal of Coin Age Priority</a>.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">dumpwallet</code> RPC now returns the full absolute path to the dumped wallet. It
used to return no value, even if successful (See <a href="https://github.com/bitcoin/bitcoin/pull/9740">PR 9740</a>).</p>
    </li>
    <li>
      <p>In the <code class="language-text highlighter-rouge">getpeerinfo</code> RPC, the return object for each peer now returns an <code class="language-text highlighter-rouge">addrbind</code> member, which contains the ip address and port of the connection to the peer. This is in addition to the <code class="language-text highlighter-rouge">addrlocal</code> member which contains the ip address and port of the local node as reported by the peer (See <a href="https://github.com/bitcoin/bitcoin/pull/10478">PR 10478</a>).</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">disconnectnode</code> RPC can now disconnect a node specified by node ID (as well as by IP address/port). To disconnect a node based on node ID, call the RPC with the new <code class="language-text highlighter-rouge">nodeid</code> argument (See <a href="https://github.com/bitcoin/bitcoin/pull/10143">PR 10143</a>).</p>
    </li>
    <li>
      <p>The second argument in <code class="language-text highlighter-rouge">prioritisetransaction</code> has been renamed from <code class="language-text highlighter-rouge">priority_delta</code> to <code class="language-text highlighter-rouge">dummy</code> since Bitcoin Core no longer has a concept of coin age priority. The <code class="language-text highlighter-rouge">dummy</code> argument has no functional effect, but is retained for positional argument compatibility. See <a href="#removal-of-coin-age-priority">Removal of Coin Age Priority</a>.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">resendwallettransactions</code> RPC throws an error if the <code class="language-text highlighter-rouge">-walletbroadcast</code> option is set to false (See <a href="https://github.com/bitcoin/bitcoin/pull/10995">PR 10995</a>).</p>
    </li>
    <li>
      <p>The second argument in the <code class="language-text highlighter-rouge">submitblock</code> RPC argument has been renamed from <code class="language-text highlighter-rouge">parameters</code> to <code class="language-text highlighter-rouge">dummy</code>. This argument never had any effect, and the renaming is simply to communicate this fact to the user (See <a href="https://github.com/bitcoin/bitcoin/pull/10191">PR 10191</a>)
(Clients should, however, use positional arguments for <code class="language-text highlighter-rouge">submitblock</code> in order to be compatible with BIP 22.)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">verbose</code> argument of <code class="language-text highlighter-rouge">getblock</code> has been renamed to <code class="language-text highlighter-rouge">verbosity</code> and now takes an integer from 0 to 2. Verbose level 0 is equivalent to <code class="language-text highlighter-rouge">verbose=false</code>. Verbose level 1 is equivalent to <code class="language-text highlighter-rouge">verbose=true</code>. Verbose level 2 will give the full transaction details of each transaction in the output as given by <code class="language-text highlighter-rouge">getrawtransaction</code>. The old behavior of using the <code class="language-text highlighter-rouge">verbose</code> named argument and a boolean value is still maintained for compatibility.</p>
    </li>
    <li>Error codes have been updated to be more accurate for the following error cases (See <a href="https://github.com/bitcoin/bitcoin/pull/9853">PR 9853</a>):
      <ul>
        <li><code class="language-text highlighter-rouge">getblock</code> now returns RPC_MISC_ERROR if the block can’t be found on disk (for
example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">pruneblockchain</code> now returns RPC_MISC_ERROR if the blocks cannot be pruned
because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.</li>
        <li><code class="language-text highlighter-rouge">pruneblockchain</code> now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned
because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">pruneblockchain</code> now returns RPC_MISC_ERROR if the blocks cannot be pruned
because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">setban</code> now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address
or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.</li>
        <li><code class="language-text highlighter-rouge">setban</code> now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban
a node that has not previously been banned. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">removeprunedfunds</code> now returns RPC_WALLET_ERROR if <code class="language-text highlighter-rouge">bitcoind</code> is unable to remove
the transaction. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">removeprunedfunds</code> now returns RPC_INVALID_PARAMETER if the transaction does not
exist in the wallet. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">fundrawtransaction</code> now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change
address is provided. Previously returned RPC_INVALID_PARAMETER.</li>
        <li><code class="language-text highlighter-rouge">fundrawtransaction</code> now returns RPC_WALLET_ERROR if <code class="language-text highlighter-rouge">bitcoind</code> is unable to create
the transaction. The error message provides further details. Previously returned
RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_INVALID_PARAMETER if the provided transaction has
descendants in the wallet. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_INVALID_PARAMETER if the provided transaction has
descendants in the mempool. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has
has been mined or conflicts with a mined transaction. Previously returned
RPC_INVALID_ADDRESS_OR_KEY.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction is not
BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has already
been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction contains
inputs which don’t belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has multiple change
outputs. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has no change
output. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the fee is too high. Previously returned
RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the fee is too low. Previously returned
RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the change output is too small to bump the
fee. Previously returned RPC_MISC_ERROR.</li>
      </ul>
    </li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.15.0 Change log</h1>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#9485 <code class="language-text highlighter-rouge">61a640e</code> ZMQ example using python3 and asyncio (mcelrath)</li>
    <li>#9894 <code class="language-text highlighter-rouge">0496e15</code> remove ‘label’ filter for rpc command help (instagibbs)</li>
    <li>#9853 <code class="language-text highlighter-rouge">02bd6e9</code> Fix error codes from various RPCs (jnewbery)</li>
    <li>#9842 <code class="language-text highlighter-rouge">598ef9c</code> Fix RPC failure testing (continuation of #9707) (jnewbery)</li>
    <li>#10038 <code class="language-text highlighter-rouge">d34995a</code> Add mallocinfo mode to <code class="language-text highlighter-rouge">getmemoryinfo</code> RPC (laanwj)</li>
    <li>#9500 <code class="language-text highlighter-rouge">3568b30</code> [Qt/RPC] Autocomplete commands for ‘help’ command in debug console (achow101)</li>
    <li>#10056 <code class="language-text highlighter-rouge">e6156a0</code> [zmq] Call va_end() on va_start()ed args (kallewoof)</li>
    <li>#10086 <code class="language-text highlighter-rouge">7438cea</code> Trivial: move rpcserialversion into RPC option group (jlopp)</li>
    <li>#10150 <code class="language-text highlighter-rouge">350b224</code> [rpc] Add logging rpc (jnewbery)</li>
    <li>#10208 <code class="language-text highlighter-rouge">393160c</code> [wallet] Rescan abortability (kallewoof)</li>
    <li>#10143 <code class="language-text highlighter-rouge">a987def</code> [net] Allow disconnectnode RPC to be called with node id (jnewbery)</li>
    <li>#10281 <code class="language-text highlighter-rouge">0e8499c</code> doc: Add RPC interface guidelines (laanwj)</li>
    <li>#9733 <code class="language-text highlighter-rouge">d4732f3</code> Add getchaintxstats RPC (sipa)</li>
    <li>#10310 <code class="language-text highlighter-rouge">f4b15e2</code> [doc] Add hint about getmempoolentry to getrawmempool help (kallewoof)</li>
    <li>#8704 <code class="language-text highlighter-rouge">96c850c</code> [RPC] Transaction details in getblock (achow101)</li>
    <li>#8952 <code class="language-text highlighter-rouge">9390845</code> Add query options to listunspent RPC call (pedrobranco)</li>
    <li>#10413 <code class="language-text highlighter-rouge">08ac35a</code> Fix docs (there’s no rpc command setpaytxfee) (RHavar)</li>
    <li>#8384 <code class="language-text highlighter-rouge">e317c0d</code> Add witness data output to TxInError messages (instagibbs)</li>
    <li>#9571 <code class="language-text highlighter-rouge">4677151</code> RPC: getblockchaininfo returns BIP signaling statistics  (pinheadmz)</li>
    <li>#10450 <code class="language-text highlighter-rouge">ef2d062</code> Fix bumpfee rpc “errors” return value (ryanofsky)</li>
    <li>#10475 <code class="language-text highlighter-rouge">39039b1</code> [RPC] getmempoolinfo mempoolminfee is a BTC/KB feerate (instagibbs)</li>
    <li>#10478 <code class="language-text highlighter-rouge">296928e</code> rpc: Add listen address to incoming connections in <code class="language-text highlighter-rouge">getpeerinfo</code> (laanwj)</li>
    <li>#10403 <code class="language-text highlighter-rouge">08d0390</code> Fix importmulti failure to return rescan errors (ryanofsky)</li>
    <li>#9740 <code class="language-text highlighter-rouge">9fec4da</code> Add friendly output to dumpwallet (aideca)</li>
    <li>#10426 <code class="language-text highlighter-rouge">16f6c98</code> Replace bytes_serialized with bogosize (sipa)</li>
    <li>#10252 <code class="language-text highlighter-rouge">980deaf</code> RPC/Mining: Restore API compatibility for prioritisetransaction (luke-jr)</li>
    <li>#9672 <code class="language-text highlighter-rouge">46311e7</code> Opt-into-RBF for RPC &amp; bitcoin-tx (luke-jr)</li>
    <li>#10481 <code class="language-text highlighter-rouge">9c248e3</code> Decodehextx scripts sanity check  (achow101)</li>
    <li>#10488 <code class="language-text highlighter-rouge">fa1f106</code> Note that the prioritizetransaction dummy value is deprecated, and has no meaning (TheBlueMatt)</li>
    <li>#9738 <code class="language-text highlighter-rouge">c94b89e</code> gettxoutproof() should return consistent result (jnewbery)</li>
    <li>#10191 <code class="language-text highlighter-rouge">00350bd</code> [trivial] Rename unused RPC arguments ‘dummy’ (jnewbery)</li>
    <li>#10627 <code class="language-text highlighter-rouge">b62b4c8</code> fixed listunspent rpc convert parameter (tnakagawa)</li>
    <li>#10412 <code class="language-text highlighter-rouge">bef02fb</code> Improve wallet rescan API (ryanofsky)</li>
    <li>#10400 <code class="language-text highlighter-rouge">1680ee0</code> [RPC] Add an uptime command that displays the amount of time (in seconds) bitcoind has been running (rvelhote)</li>
    <li>#10683 <code class="language-text highlighter-rouge">d81bec7</code> rpc: Move the <code class="language-text highlighter-rouge">generate</code> RPC call to rpcwallet (laanwj)</li>
    <li>#10710 <code class="language-text highlighter-rouge">30bc0f6</code> REST/RPC example update (Mirobit)</li>
    <li>#10747 <code class="language-text highlighter-rouge">9edda0c</code> [rpc] fix verbose argument for getblock in bitcoin-cli (jnewbery)</li>
    <li>#10589 <code class="language-text highlighter-rouge">104f5f2</code> More economical fee estimates for RBF and RPC options to control (morcos)</li>
    <li>#10543 <code class="language-text highlighter-rouge">b27b004</code> Change API to estimaterawfee (morcos)</li>
    <li>#10807 <code class="language-text highlighter-rouge">afd2fca</code> getbalance example covers at least 6 confirms (instagibbs)</li>
    <li>#10707 <code class="language-text highlighter-rouge">75b5643</code> Better API for estimatesmartfee RPC  (morcos)</li>
    <li>#10784 <code class="language-text highlighter-rouge">9e8d6a3</code> Do not allow users to get keys from keypool without reserving them (TheBlueMatt)</li>
    <li>#10857 <code class="language-text highlighter-rouge">d445a2c</code> [RPC] Add a deprecation warning to getinfo’s output (achow101)</li>
    <li>#10571 <code class="language-text highlighter-rouge">adf170d</code> [RPC]Move transaction combining from signrawtransaction to new RPC (achow101)</li>
    <li>#10783 <code class="language-text highlighter-rouge">041dad9</code> [RPC] Various rpc argument fixes (instagibbs)</li>
    <li>#9622 <code class="language-text highlighter-rouge">6ef3c7e</code> [rpc] listsinceblock should include lost transactions when parameter is a reorg’d block (kallewoof)</li>
    <li>#10799 <code class="language-text highlighter-rouge">8537187</code> Prevent user from specifying conflicting parameters to fundrawtx (TheBlueMatt)</li>
    <li>#10931 <code class="language-text highlighter-rouge">0b11a07</code> Fix misleading “Method not found” multiwallet errors (ryanofsky)</li>
    <li>#10788 <code class="language-text highlighter-rouge">f66c596</code> [RPC] Fix addwitnessaddress by replacing ismine with producesignature (achow101)</li>
    <li>#10999 <code class="language-text highlighter-rouge">627c3c0</code> Fix amounts formatting in <code class="language-text highlighter-rouge">decoderawtransaction</code> (laanwj)</li>
    <li>#11002 <code class="language-text highlighter-rouge">4268426</code> [wallet] return correct error code from resendwallettransaction (jnewbery)</li>
    <li>#11029 <code class="language-text highlighter-rouge">96a63a3</code> [RPC] trivial: gettxout no longer shows version of tx (FelixWeis)</li>
    <li>#11083 <code class="language-text highlighter-rouge">6c2b008</code> Fix combinerawtransaction RPC help result section (jonasnick)</li>
    <li>#11027 <code class="language-text highlighter-rouge">07164bb</code> [RPC] Only return hex field once in getrawtransaction (achow101)</li>
    <li>#10698 <code class="language-text highlighter-rouge">5af6572</code> Be consistent in calling transactions “replaceable” for Opt-In RBF (TheBlueMatt)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#9801 <code class="language-text highlighter-rouge">a8c5751</code> Removed redundant parameter from mempool.PrioritiseTransaction (gubatron)</li>
    <li>#9819 <code class="language-text highlighter-rouge">1efc99c</code> Remove harmless read of unusued priority estimates (morcos)</li>
    <li>#9822 <code class="language-text highlighter-rouge">b7547fa</code> Remove block file location upgrade code (benma)</li>
    <li>#9602 <code class="language-text highlighter-rouge">30ff3a2</code> Remove coin age priority and free transactions - implementation (morcos)</li>
    <li>#9548 <code class="language-text highlighter-rouge">47510ad</code> Remove min reasonable fee (morcos)</li>
    <li>#10249 <code class="language-text highlighter-rouge">c73af54</code> Switch CCoinsMap from boost to std unordered_map (sipa)</li>
    <li>#9966 <code class="language-text highlighter-rouge">2a183de</code> Control mempool persistence using a command line parameter (jnewbery)</li>
    <li>#10199 <code class="language-text highlighter-rouge">318ea50</code> Better fee estimates (morcos)</li>
    <li>#10196 <code class="language-text highlighter-rouge">bee3529</code> Bugfix: PrioritiseTransaction updates the mempool tx counter (sdaftuar)</li>
    <li>#10195 <code class="language-text highlighter-rouge">1088b02</code> Switch chainstate db and cache to per-txout model (sipa)</li>
    <li>#10284 <code class="language-text highlighter-rouge">c2ab38b</code> Always log debug information for fee calculation in CreateTransaction (morcos)</li>
    <li>#10503 <code class="language-text highlighter-rouge">efbcf2b</code> Use REJECT_DUPLICATE for already known and conflicted txn (sipa)</li>
    <li>#10537 <code class="language-text highlighter-rouge">b3eb0d6</code> Few Minor per-utxo assert-semantics re-adds and tweak (TheBlueMatt)</li>
    <li>#10626 <code class="language-text highlighter-rouge">8c841a3</code> doc: Remove outdated minrelaytxfee comment (MarcoFalke)</li>
    <li>#10559 <code class="language-text highlighter-rouge">234ffc6</code> Change semantics of HaveCoinInCache to match HaveCoin (morcos)</li>
    <li>#10581 <code class="language-text highlighter-rouge">7878353</code> Simplify return values of GetCoin/HaveCoin(InCache) (sipa)</li>
    <li>#10684 <code class="language-text highlighter-rouge">a381f6a</code> Remove no longer used mempool.exists(outpoint) (morcos)</li>
    <li>#10148 <code class="language-text highlighter-rouge">d4e551a</code> Use non-atomic flushing with block replay (sipa)</li>
    <li>#10685 <code class="language-text highlighter-rouge">30c2130</code> Clarify CCoinsViewMemPool documentation (TheBlueMatt)</li>
    <li>#10558 <code class="language-text highlighter-rouge">90a002e</code> Address nits from per-utxo change (morcos)</li>
    <li>#10706 <code class="language-text highlighter-rouge">6859ad2</code> Improve wallet fee logic and fix GUI bugs (morcos)</li>
    <li>#10526 <code class="language-text highlighter-rouge">754aa02</code> Force on-the-fly compaction during pertxout upgrade (sipa)</li>
    <li>#10985 <code class="language-text highlighter-rouge">d896d5c</code> Add undocumented -forcecompactdb to force LevelDB compactions (sipa)</li>
    <li>#10292 <code class="language-text highlighter-rouge">e4bbd3d</code> Improved efficiency in COutPoint constructors (mm-s)</li>
    <li>#10290 <code class="language-text highlighter-rouge">8d6d43e</code> Add -stopatheight for benchmarking (sipa)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#9726 <code class="language-text highlighter-rouge">7639d38</code> netbase: Do not print an error on connection timeouts through proxy (laanwj)</li>
    <li>#9805 <code class="language-text highlighter-rouge">5b583ef</code> Add seed.btc.petertodd.org to mainnet DNS seeds (petertodd)</li>
    <li>#9861 <code class="language-text highlighter-rouge">22f609f</code> Trivial: Debug log ambiguity fix for peer addrs (keystrike)</li>
    <li>#9774 <code class="language-text highlighter-rouge">90cb2a2</code> Enable host lookups for -proxy and -onion parameters (jmcorgan)</li>
    <li>#9558 <code class="language-text highlighter-rouge">7b585cf</code> Clarify assumptions made about when BlockCheck is called (TheBlueMatt)</li>
    <li>#10135 <code class="language-text highlighter-rouge">e19586a</code> [p2p] Send the correct error code in reject messages (jnewbery)</li>
    <li>#9665 <code class="language-text highlighter-rouge">eab00d9</code> Use cached [compact] blocks to respond to getdata messages (TheBlueMatt)</li>
    <li>#10215 <code class="language-text highlighter-rouge">a077a90</code> Check interruptNet during dnsseed lookups (TheBlueMatt)</li>
    <li>#10234 <code class="language-text highlighter-rouge">faf2dea</code> [net] listbanned RPC and QT should show correct banned subnets (jnewbery)</li>
    <li>#10134 <code class="language-text highlighter-rouge">314ebdf</code> [qa] Fixes segwit block relay test after inv-direct-fetch was disabled (sdaftuar)</li>
    <li>#10351 <code class="language-text highlighter-rouge">3f57c55</code> removed unused code in INV message (Greg-Griffith)</li>
    <li>#10061 <code class="language-text highlighter-rouge">ae78609</code> [net] Added SetSocketNoDelay() utility function (tjps)</li>
    <li>#10408 <code class="language-text highlighter-rouge">28c6e8d</code> Net: Improvements to Tor control port parser (str4d)</li>
    <li>#10460 <code class="language-text highlighter-rouge">5c63d66</code> Broadcast address every day, not 9 hours (sipa)</li>
    <li>#10471 <code class="language-text highlighter-rouge">400fdd0</code> Denote functions CNode::GetRecvVersion() and CNode::GetRefCount()  as const (pavlosantoniou)</li>
    <li>#10345 <code class="language-text highlighter-rouge">67700b3</code> [P2P] Timeout for headers sync (sdaftuar)</li>
    <li>#10564 <code class="language-text highlighter-rouge">8d9f45e</code> Return early in IsBanned (gmaxwell)</li>
    <li>#10587 <code class="language-text highlighter-rouge">de8db47</code> Net: Fix resource leak in ReadBinaryFile(…) (practicalswift)</li>
    <li>#9549 <code class="language-text highlighter-rouge">b33ca14</code> [net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(…) (practicalswift)</li>
    <li>#10446 <code class="language-text highlighter-rouge">2772dc9</code> net: avoid extra dns query per seed (theuni)</li>
    <li>#10824 <code class="language-text highlighter-rouge">9dd6a2b</code> Avoid unnecessary work in SetNetworkActive (promag)</li>
    <li>#10948 <code class="language-text highlighter-rouge">df3a6f4</code> p2p: Hardcoded seeds update pre-0.15 branch (laanwj)</li>
    <li>#10977 <code class="language-text highlighter-rouge">02f4c4a</code> [net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest&amp;) (practicalswift)</li>
    <li>#10982 <code class="language-text highlighter-rouge">c8b62c7</code> Disconnect network service bits 6 and 8 until Aug 1, 2018 (TheBlueMatt)</li>
    <li>#11012 <code class="language-text highlighter-rouge">0e5cff6</code> Make sure to clean up mapBlockSource if we’ve already seen the block (theuni)</li>
  </ul>

  <h3 id="validation">Validation</h3>
  <ul>
    <li>#9725 <code class="language-text highlighter-rouge">67023e9</code> CValidationInterface Cleanups (TheBlueMatt)</li>
    <li>#10178 <code class="language-text highlighter-rouge">2584925</code> Remove CValidationInterface::UpdatedTransaction (TheBlueMatt)</li>
    <li>#10201 <code class="language-text highlighter-rouge">a6548a4</code> pass Consensus::Params&amp; to functions in validation.cpp and make them static (mariodian)</li>
    <li>#10297 <code class="language-text highlighter-rouge">431a548</code> Simplify DisconnectBlock arguments/return value (sipa)</li>
    <li>#10464 <code class="language-text highlighter-rouge">f94b7d5</code> Introduce static DoWarning (simplify UpdateTip) (jtimon)</li>
    <li>#10569 <code class="language-text highlighter-rouge">2e7d8f8</code> Fix stopatheight (achow101)</li>
    <li>#10192 <code class="language-text highlighter-rouge">2935b46</code> Cache full script execution results in addition to signatures (TheBlueMatt)</li>
    <li>#10179 <code class="language-text highlighter-rouge">21ed30a</code> Give CValidationInterface Support for calling notifications on the CScheduler Thread (TheBlueMatt)</li>
    <li>#10557 <code class="language-text highlighter-rouge">66270a4</code> Make check to distinguish between orphan txs and old txs more efficient (morcos)</li>
    <li>#10775 <code class="language-text highlighter-rouge">7c2400c</code> nCheckDepth chain height fix (romanornr)</li>
    <li>#10821 <code class="language-text highlighter-rouge">16240f4</code> Add SSE4 optimized SHA256 (sipa)</li>
    <li>#10854 <code class="language-text highlighter-rouge">04d395e</code> Avoid using sizes on non-fixed-width types to derive protocol constants (gmaxwell)</li>
    <li>#10945 <code class="language-text highlighter-rouge">2a50b11</code> Update defaultAssumeValid according to release-process.md (gmaxwell)</li>
    <li>#10986 <code class="language-text highlighter-rouge">2361208</code> Update chain transaction statistics (sipa)</li>
    <li>#11028 <code class="language-text highlighter-rouge">6bdf4b3</code> Avoid masking of difficulty adjustment errors by checkpoints (sipa)</li>
    <li>#9533 <code class="language-text highlighter-rouge">cb598cf</code> Allow non-power-of-2 signature cache sizes (sipa)</li>
    <li>#9208 <code class="language-text highlighter-rouge">acd9957</code> Improve DisconnectTip performance (sdaftuar)</li>
    <li>#10618 <code class="language-text highlighter-rouge">f90603a</code> Remove confusing MAX_BLOCK_BASE_SIZE (gmaxwell)</li>
    <li>#10758 <code class="language-text highlighter-rouge">bd92424</code> Fix some chainstate-init-order bugs (TheBlueMatt)</li>
    <li>#10550 <code class="language-text highlighter-rouge">b7296bc</code> Don’t return stale data from CCoinsViewCache::Cursor() (ryanofsky)</li>
    <li>#10998 <code class="language-text highlighter-rouge">2507fd5</code> Fix upgrade cancel warnings (TheBlueMatt)</li>
    <li>#9868 <code class="language-text highlighter-rouge">cbdb473</code> Abstract out the command line options for block assembly (sipa)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#9727 <code class="language-text highlighter-rouge">5f0556d</code> Remove fallbacks for boost_filesystem &lt; v3 (laanwj)</li>
    <li>#9788 <code class="language-text highlighter-rouge">50a2265</code> gitian: bump descriptors for master (theuni)</li>
    <li>#9794 <code class="language-text highlighter-rouge">7ca2f54</code> Minor update to qrencode package builder (mitchellcash)</li>
    <li>#9514 <code class="language-text highlighter-rouge">2cc0df1</code> release: Windows signing script (theuni)</li>
    <li>#9921 <code class="language-text highlighter-rouge">8b789d8</code> build: Probe MSG_DONTWAIT in the same way as MSG_NOSIGNAL (laanwj)</li>
    <li>#10011 <code class="language-text highlighter-rouge">32d1b34</code> build: Fix typo s/HAVE_DONTWAIT/HAVE_MSG_DONTWAIT (laanwj)</li>
    <li>#9946 <code class="language-text highlighter-rouge">90dd9e6</code> Fix build errors if spaces in path or parent directory (pinheadmz)</li>
    <li>#10136 <code class="language-text highlighter-rouge">81da4c7</code> build: Disable Wshadow warning (laanwj)</li>
    <li>#10166 <code class="language-text highlighter-rouge">64962ae</code> Ignore Doxyfile generated from Doxyfile.in template (paveljanik)</li>
    <li>#10239 <code class="language-text highlighter-rouge">0416ea9</code> Make Boost use std::atomic internally (sipa)</li>
    <li>#10228 <code class="language-text highlighter-rouge">27faa6c</code> build: regenerate bitcoin-config.h as necessary (theuni)</li>
    <li>#10273 <code class="language-text highlighter-rouge">8979f45</code> [scripts] Minor improvements to <code class="language-text highlighter-rouge">macdeployqtplus</code> script (chrisgavin)</li>
    <li>#10325 <code class="language-text highlighter-rouge">a26280b</code> 0.15.0 Depends Updates (fanquake)</li>
    <li>#10328 <code class="language-text highlighter-rouge">79aeff6</code> Update contrib/debian to latest Ubuntu PPA upload (TheBlueMatt)</li>
    <li>#7522 <code class="language-text highlighter-rouge">d25449f</code> Bugfix: Only use git for build info if the repository is actually the right one (luke-jr)</li>
    <li>#10489 <code class="language-text highlighter-rouge">e654d61</code> build: silence gcc7’s implicit fallthrough warning (theuni)</li>
    <li>#10549 <code class="language-text highlighter-rouge">ad1a13e</code> Avoid printing generic and duplicated “checking for QT” during ./configure (drizzt)</li>
    <li>#10628 <code class="language-text highlighter-rouge">8465b68</code> [depends] expat 2.2.1 (fanquake)</li>
    <li>#10806 <code class="language-text highlighter-rouge">db825d2</code> build: verify that the assembler can handle crc32 functions (theuni)</li>
    <li>#10766 <code class="language-text highlighter-rouge">b4d03be</code> Building Environment: Set ARFLAGS to cr (ReneNyffenegger)</li>
    <li>#10803 <code class="language-text highlighter-rouge">91edda8</code> Explicitly search for bdb5.3 (pstratem)</li>
    <li>#10855 <code class="language-text highlighter-rouge">81560b0</code> random: only use getentropy on openbsd (theuni)</li>
    <li>#10508 <code class="language-text highlighter-rouge">1caafa6</code> Run Qt wallet tests on travis (ryanofsky)</li>
    <li>#10851 <code class="language-text highlighter-rouge">e222618</code> depends: fix fontconfig with newer glibc (theuni)</li>
    <li>#10971 <code class="language-text highlighter-rouge">88b1e4b</code> build: fix missing sse42 in depends builds (theuni)</li>
    <li>#11097 <code class="language-text highlighter-rouge">129b03f</code> gitian: quick hack to fix version string in releases (theuni)</li>
    <li>#10039 <code class="language-text highlighter-rouge">919aaf6</code> Fix compile errors with Qt 5.3.2 and Boost 1.55.0 (ryanofsky)</li>
    <li>#10168 <code class="language-text highlighter-rouge">7032021</code> Fix build warning from #error text (jnewbery)</li>
    <li>#10301 <code class="language-text highlighter-rouge">318392c</code> Check if sys/random.h is required for getentropy (jameshilliard)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#9724 <code class="language-text highlighter-rouge">1a9fd5c</code> Qt/Intro: Add explanation of IBD process (luke-jr)</li>
    <li>#9834 <code class="language-text highlighter-rouge">b00ba62</code> qt: clean up initialize/shutdown signals (benma)</li>
    <li>#9481 <code class="language-text highlighter-rouge">ce01e62</code> [Qt] Show more significant warning if we fall back to the default fee (jonasschnelli)</li>
    <li>#9974 <code class="language-text highlighter-rouge">b9f930b</code> Add basic Qt wallet test (ryanofsky)</li>
    <li>#9690 <code class="language-text highlighter-rouge">a387d3a</code> Change ‘Clear’ button string to ‘Reset’ (da2x)</li>
    <li>#9592 <code class="language-text highlighter-rouge">9c7b7cf</code> [Qt] Add checkbox in the GUI to opt-in to RBF when creating a transaction (ryanofsky)</li>
    <li>#10098 <code class="language-text highlighter-rouge">2b477e6</code> Make qt wallet test compatible with qt4 (ryanofsky)</li>
    <li>#9890 <code class="language-text highlighter-rouge">1fa4ae6</code> Add a button to open the config file in a text editor (ericshawlinux)</li>
    <li>#10156 <code class="language-text highlighter-rouge">51833a1</code> Fix for issues with startup and multiple monitors on windows (AllanDoensen)</li>
    <li>#10177 <code class="language-text highlighter-rouge">de01da7</code> Changed “Send” button default status from true to false (KibbledJiveElkZoo)</li>
    <li>#10221 <code class="language-text highlighter-rouge">e96486c</code> Stop treating coinbase outputs differently in GUI: show them at 1conf (TheBlueMatt)</li>
    <li>#10231 <code class="language-text highlighter-rouge">987a6c0</code> [Qt] Reduce a significant cs_main lock freeze (jonasschnelli)</li>
    <li>#10242 <code class="language-text highlighter-rouge">f6f3b58</code> [qt] Don’t call method on null WalletModel object (ryanofsky)</li>
    <li>#10093 <code class="language-text highlighter-rouge">a3e756b</code> [Qt] Don’t add arguments of sensitive command to console window (jonasschnelli)</li>
    <li>#10362 <code class="language-text highlighter-rouge">95546c8</code> [GUI] Add OSX keystroke to RPCConsole info (spencerlievens)</li>
    <li>#9697 <code class="language-text highlighter-rouge">962cd3f</code> [Qt] simple fee bumper with user verification (jonasschnelli)</li>
    <li>#10390 <code class="language-text highlighter-rouge">e477516</code> [wallet] remove minimum total fee option (instagibbs)</li>
    <li>#10420 <code class="language-text highlighter-rouge">4314544</code> Add Qt tests for wallet spends &amp; bumpfee (ryanofsky)</li>
    <li>#10454 <code class="language-text highlighter-rouge">c1c9a95</code> Fix broken q4 test build (ryanofsky)</li>
    <li>#10449 <code class="language-text highlighter-rouge">64beb13</code> Overhaul Qt fee bumper (jonasschnelli)</li>
    <li>#10582 <code class="language-text highlighter-rouge">7c72fb9</code> Pass in smart fee slider value to coin control dialog (morcos)</li>
    <li>#10673 <code class="language-text highlighter-rouge">4c72cc3</code> [qt] Avoid potential null pointer dereference in TransactionView::exportClicked() (practicalswift)</li>
    <li>#10769 <code class="language-text highlighter-rouge">8fdd23a</code> [Qt] replace fee slider with a Dropdown, extend conf. targets (jonasschnelli)</li>
    <li>#10870 <code class="language-text highlighter-rouge">412b466</code> [Qt] Use wallet 0 in rpc console if running with multiple wallets (jonasschnelli)</li>
    <li>#10988 <code class="language-text highlighter-rouge">a9dd111</code> qt: Increase BLOCK_CHAIN_SIZE constants (laanwj)</li>
    <li>#10644 <code class="language-text highlighter-rouge">e292140</code> Slightly overhaul NSI pixmaps (jonasschnelli)</li>
    <li>#10660 <code class="language-text highlighter-rouge">0c3542e</code> Allow to cancel the txdb upgrade via splashscreen keypress ‘q’ (jonasschnelli)</li>
    <li>#11332 <code class="language-text highlighter-rouge">46c8d23</code> Fix possible crash with invalid nCustomFeeRadio in QSettings (achow101, TheBlueMatt)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#9359 <code class="language-text highlighter-rouge">f7ec7cf</code> Add test for CWalletTx::GetImmatureCredit() returning stale values (ryanofsky)</li>
    <li>#9576 <code class="language-text highlighter-rouge">56ab672</code> [wallet] Remove redundant initialization (practicalswift)</li>
    <li>#9333 <code class="language-text highlighter-rouge">fa625b0</code> Document CWalletTx::mapValue entries and remove erase of nonexistent “version” entry (ryanofsky)</li>
    <li>#9906 <code class="language-text highlighter-rouge">72fb515</code> Disallow copy constructor CReserveKeys (instagibbs)</li>
    <li>#9369 <code class="language-text highlighter-rouge">3178b2c</code> Factor out CWallet::nTimeSmart computation into a method (ryanofsky)</li>
    <li>#9830 <code class="language-text highlighter-rouge">afcd7c0</code> Add safe flag to listunspent result (NicolasDorier)</li>
    <li>#9993 <code class="language-text highlighter-rouge">c49355c</code> Initialize nRelockTime (pstratem)</li>
    <li>#9818 <code class="language-text highlighter-rouge">3d857f3</code> Save watch only key timestamps when reimporting keys (ryanofsky)</li>
    <li>#9294 <code class="language-text highlighter-rouge">f34cdcb</code> Use internal HD chain for change outputs (hd split) (jonasschnelli)</li>
    <li>#10164 <code class="language-text highlighter-rouge">e183ea2</code> Wallet: reduce excess logic InMempool() (kewde)</li>
    <li>#10186 <code class="language-text highlighter-rouge">c9ff4f8</code> Remove SYNC_TRANSACTION_NOT_IN_BLOCK magic number (jnewbery)</li>
    <li>#10226 <code class="language-text highlighter-rouge">64c45aa</code> wallet: Use boost to more portably ensure -wallet specifies only a filename (luke-jr)</li>
    <li>#9827 <code class="language-text highlighter-rouge">c91ca0a</code> Improve ScanForWalletTransactions return value (ryanofsky)</li>
    <li>#9951 <code class="language-text highlighter-rouge">fa1ac28</code> Wallet database handling abstractions/simplifications (laanwj)</li>
    <li>#10265 <code class="language-text highlighter-rouge">c29a0d4</code> [wallet/moveonly] Check non-null pindex before potentially referencing (kallewoof)</li>
    <li>#10283 <code class="language-text highlighter-rouge">a550f6e</code> Cleanup: reduce to one GetMinimumFee call signature (morcos)</li>
    <li>#10294 <code class="language-text highlighter-rouge">e2b99b1</code> [Wallet] unset change position when there is no change (instagibbs)</li>
    <li>#10115 <code class="language-text highlighter-rouge">d3dce0e</code> Avoid reading the old hd master key during wallet encryption (TheBlueMatt)</li>
    <li>#10341 <code class="language-text highlighter-rouge">18c9deb</code> rpc/wallet: Workaround older UniValue which returns a std::string temporary for get_str (luke-jr)</li>
    <li>#10308 <code class="language-text highlighter-rouge">94e5227</code> [wallet] Securely erase potentially sensitive keys/values (tjps)</li>
    <li>#10257 <code class="language-text highlighter-rouge">ea1fd43</code> [test] Add test for getmemoryinfo (jimmysong)</li>
    <li>#10295 <code class="language-text highlighter-rouge">ce8176d</code> [qt] Move some WalletModel functions into CWallet (ryanofsky)</li>
    <li>#10506 <code class="language-text highlighter-rouge">7cc2c67</code> Fix bumpfee test after #10449 (ryanofsky)</li>
    <li>#10500 <code class="language-text highlighter-rouge">098b01d</code> Avoid CWalletTx copies in GetAddressBalances and GetAddressGroupings (ryanofsky)</li>
    <li>#10455 <code class="language-text highlighter-rouge">0747d33</code> Simplify feebumper minimum fee code slightly (ryanofsky)</li>
    <li>#10522 <code class="language-text highlighter-rouge">2805d60</code> [wallet] Remove unused variables (practicalswift)</li>
    <li>#8694 <code class="language-text highlighter-rouge">177433a</code> Basic multiwallet support (luke-jr)</li>
    <li>#10598 <code class="language-text highlighter-rouge">7a74f88</code> Supress struct/class mismatch warnings introduced in #10284 (paveljanik)</li>
    <li>#9343 <code class="language-text highlighter-rouge">209eef6</code> Don’t create change at dust limit (morcos)</li>
    <li>#10744 <code class="language-text highlighter-rouge">ed88e31</code> Use method name via <strong>func</strong> macro (darksh1ne)</li>
    <li>#10712 <code class="language-text highlighter-rouge">e8b9523</code> Add change output if necessary to reduce excess fee (morcos)</li>
    <li>#10816 <code class="language-text highlighter-rouge">1c011ff</code> Properly forbid -salvagewallet and -zapwallettxes for multi wallet (morcos)</li>
    <li>#10235 <code class="language-text highlighter-rouge">5cfdda2</code> Track keypool entries as internal vs external in memory (TheBlueMatt)</li>
    <li>#10330 <code class="language-text highlighter-rouge">bf0a08b</code> [wallet] fix zapwallettxes interaction with persistent mempool (jnewbery)</li>
    <li>#10831 <code class="language-text highlighter-rouge">0b01935</code> Batch flushing operations to the walletdb during top up and increase keypool size (gmaxwell)</li>
    <li>#10795 <code class="language-text highlighter-rouge">7b6e8bc</code> No longer ever reuse keypool indexes (TheBlueMatt)</li>
    <li>#10849 <code class="language-text highlighter-rouge">bde4f93</code> Multiwallet: simplest endpoint support (jonasschnelli)</li>
    <li>#10817 <code class="language-text highlighter-rouge">9022aa3</code> Redefine Dust and add a discard_rate (morcos)</li>
    <li>#10883 <code class="language-text highlighter-rouge">bf3b742</code> Rename -usewallet to -rpcwallet (morcos)</li>
    <li>#10604 <code class="language-text highlighter-rouge">420238d</code> [wallet/tests] Add listwallets RPC, include wallet name in <code class="language-text highlighter-rouge">getwalletinfo</code> and add multiwallet test (jnewbery)</li>
    <li>#10885 <code class="language-text highlighter-rouge">70888a3</code> Reject invalid wallets (promag)</li>
    <li>#10949 <code class="language-text highlighter-rouge">af56397</code> Clarify help message for -discardfee (morcos)</li>
    <li>#10942 <code class="language-text highlighter-rouge">2e857bb</code> Eliminate fee overpaying edge case when subtracting fee from recipients (morcos)</li>
    <li>#10995 <code class="language-text highlighter-rouge">fa64636</code> Fix resendwallettransactions assert failure if -walletbroadcast=0 (TheBlueMatt)</li>
    <li>#11022 <code class="language-text highlighter-rouge">653a46d</code> Basic keypool topup (jnewbery)</li>
    <li>#11081 <code class="language-text highlighter-rouge">9fe1f6b</code> Add length check for CExtKey deserialization (jonasschnelli, guidovranken)</li>
    <li>#11044 <code class="language-text highlighter-rouge">4ef8374</code> [wallet] Keypool topup cleanups (jnewbery)</li>
    <li>#11145 <code class="language-text highlighter-rouge">e51bb71</code> Fix rounding bug in calculation of minimum change (morcos)</li>
    <li>#9605 <code class="language-text highlighter-rouge">779f2f9</code> Use CScheduler for wallet flushing, remove ThreadFlushWalletDB (TheBlueMatt)</li>
    <li>#10108 <code class="language-text highlighter-rouge">4e3efd4</code> ApproximateBestSubset should take inputs by reference, not value (RHavar)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#9744 <code class="language-text highlighter-rouge">8efd1c8</code> Remove unused module from rpc-tests (34ro)</li>
    <li>#9657 <code class="language-text highlighter-rouge">7ff4a53</code> Improve rpc-tests.py (jnewbery)</li>
    <li>#9766 <code class="language-text highlighter-rouge">7146d96</code> Add –exclude option to rpc-tests.py (jnewbery)</li>
    <li>#9577 <code class="language-text highlighter-rouge">d6064a8</code> Fix docstrings in qa tests (jnewbery)</li>
    <li>#9823 <code class="language-text highlighter-rouge">a13a417</code> qa: Set correct path for binaries in rpc tests (MarcoFalke)</li>
    <li>#9847 <code class="language-text highlighter-rouge">6206252</code> Extra test vector for BIP32 (sipa)</li>
    <li>#9350 <code class="language-text highlighter-rouge">88c2ae3</code> [Trivial] Adding label for amount inside of tx_valid/tx_invalid.json (Christewart)</li>
    <li>#9888 <code class="language-text highlighter-rouge">36afd4d</code> travis: Verify commits only for one target (MarcoFalke)</li>
    <li>#9904 <code class="language-text highlighter-rouge">58861ad</code> test: Fail if InitBlockIndex fails (laanwj)</li>
    <li>#9828 <code class="language-text highlighter-rouge">67c5cc1</code> Avoid -Wshadow warnings in wallet_tests (ryanofsky)</li>
    <li>#9832 <code class="language-text highlighter-rouge">48c3429</code> [qa] assert_start_raises_init_error (NicolasDorier)</li>
    <li>#9739 <code class="language-text highlighter-rouge">9d5fcbf</code> Fix BIP68 activation test (jnewbery)</li>
    <li>#9547 <code class="language-text highlighter-rouge">d32581c</code> bench: Assert that division by zero is unreachable (practicalswift)</li>
    <li>#9843 <code class="language-text highlighter-rouge">c78adbf</code> Fix segwit getblocktemplate test (jnewbery)</li>
    <li>#9929 <code class="language-text highlighter-rouge">d5ce14e</code> tests: Delete unused function _rpchost_to_args (laanwj)</li>
    <li>#9555 <code class="language-text highlighter-rouge">19be26a</code> [test] Avoid reading a potentially uninitialized variable in tx_invalid-test (transaction_tests.cpp) (practicalswift)</li>
    <li>#9945 <code class="language-text highlighter-rouge">ac23a7c</code> Improve logging in bctest.py if there is a formatting mismatch (jnewbery)</li>
    <li>#9768 <code class="language-text highlighter-rouge">8910b47</code> [qa] Add logging to test_framework.py (jnewbery)</li>
    <li>#9972 <code class="language-text highlighter-rouge">21833f9</code> Fix extended rpc tests broken by #9768 (jnewbery)</li>
    <li>#9977 <code class="language-text highlighter-rouge">857d1e1</code> QA: getblocktemplate_longpoll.py should always use &gt;0 fee tx (sdaftuar)</li>
    <li>#9970 <code class="language-text highlighter-rouge">3cc13ea</code> Improve readability of segwit.py, smartfees.py (sdaftuar)</li>
    <li>#9497 <code class="language-text highlighter-rouge">2c781fb</code> CCheckQueue Unit Tests (JeremyRubin)</li>
    <li>#10024 <code class="language-text highlighter-rouge">9225de2</code> [trivial] Use log.info() instead of print() in remaining functional test cases (jnewbery)</li>
    <li>#9956 <code class="language-text highlighter-rouge">3192e52</code> Reorganise qa directory (jnewbery)</li>
    <li>#10017 <code class="language-text highlighter-rouge">02d64bd</code> combine_logs.py - aggregates log files from multiple bitcoinds during functional tests (jnewbery)</li>
    <li>#10047 <code class="language-text highlighter-rouge">dfef6b6</code> [tests] Remove unused variables and imports (practicalswift)</li>
    <li>#9701 <code class="language-text highlighter-rouge">a230b05</code> Make bumpfee tests less fragile (ryanofsky)</li>
    <li>#10053 <code class="language-text highlighter-rouge">ca20923</code> [test] Allow functional test cases to be skipped (jnewbery)</li>
    <li>#10052 <code class="language-text highlighter-rouge">a0b1e57</code> [test] Run extended tests once daily in Travis (jnewbery)</li>
    <li>#10069 <code class="language-text highlighter-rouge">1118493</code> [QA] Fix typo in fundrawtransaction test (NicolasDorier)</li>
    <li>#10083 <code class="language-text highlighter-rouge">c044f03</code> [QA] Renaming rawTx into rawtx (NicolasDorier)</li>
    <li>#10073 <code class="language-text highlighter-rouge">b1a4f27</code> Actually run assumevalid.py (jnewbery)</li>
    <li>#9780 <code class="language-text highlighter-rouge">c412fd8</code> Suppress noisy output from qa tests in Travis (jnewbery)</li>
    <li>#10096 <code class="language-text highlighter-rouge">79af9fb</code> Check that all test scripts in test/functional are being run (jnewbery)</li>
    <li>#10076 <code class="language-text highlighter-rouge">5b029aa</code> [qa] combine_logs: Use ordered list for logfiles (MarcoFalke)</li>
    <li>#10107 <code class="language-text highlighter-rouge">f2734c2</code> Remove unused variable. Remove accidental trailing semicolons in Python code (practicalswift)</li>
    <li>#10109 <code class="language-text highlighter-rouge">8ac8041</code> Remove SingleNodeConnCB (jnewbery)</li>
    <li>#10114 <code class="language-text highlighter-rouge">edc62c9</code> [tests] sync_with_ping should assert that ping hasn’t timed out (jnewbery)</li>
    <li>#10128 <code class="language-text highlighter-rouge">427d2fd</code> Speed Up CuckooCache tests (JeremyRubin)</li>
    <li>#10072 <code class="language-text highlighter-rouge">12af74b</code> Remove sources of unreliablility in extended functional tests (jnewbery)</li>
    <li>#10077 <code class="language-text highlighter-rouge">ebfd653</code> [qa] Add setnetworkactive smoke test (MarcoFalke)</li>
    <li>#10152 <code class="language-text highlighter-rouge">080d7c7</code> [trivial] remove unused line in Travis config (jnewbery)</li>
    <li>#10159 <code class="language-text highlighter-rouge">df1ca9e</code> [tests] color test results and sort alphabetically (jnewbery)</li>
    <li>#10124 <code class="language-text highlighter-rouge">88799ea</code> [test] Suppress test logging spam (jnewbery)</li>
    <li>#10142 <code class="language-text highlighter-rouge">ed09dd3</code> Run bitcoin_test-qt under minimal QPA platform (ryanofsky)</li>
    <li>#9949 <code class="language-text highlighter-rouge">a27dbc5</code> [bench] Avoid function call arguments which are pointers to uninitialized values (practicalswift)</li>
    <li>#10187 <code class="language-text highlighter-rouge">b44adf9</code> tests: Fix test_runner return value in case of skipped test (laanwj)</li>
    <li>#10197 <code class="language-text highlighter-rouge">d86bb07</code> [tests] Functional test warnings (jnewbery)</li>
    <li>#10219 <code class="language-text highlighter-rouge">9111df9</code> Tests: Order Python Tests Differently (jimmysong)</li>
    <li>#10229 <code class="language-text highlighter-rouge">f3db4c6</code> Tests: Add test for getdifficulty (jimmysong)</li>
    <li>#10224 <code class="language-text highlighter-rouge">2723bcd</code> [test] Add test for getaddednodeinfo (jimmysong)</li>
    <li>#10023 <code class="language-text highlighter-rouge">c530c15</code> [tests] remove maxblocksinflight.py (functionality covered by other test) (jnewbery)</li>
    <li>#10097 <code class="language-text highlighter-rouge">1b25b6d</code> Move zmq test skipping logic into individual test case (jnewbery)</li>
    <li>#10272 <code class="language-text highlighter-rouge">54e2d87</code> [Tests] Prevent warning: variable ‘x’ is uninitialized (paveljanik)</li>
    <li>#10225 <code class="language-text highlighter-rouge">e0a7e19</code> [test] Add aborttrescan tests (kallewoof)</li>
    <li>#10278 <code class="language-text highlighter-rouge">8254a8a</code> [test] Add Unit Test for GetListenPort (jimmysong)</li>
    <li>#10280 <code class="language-text highlighter-rouge">47535d7</code> [test] Unit test amount.h/amount.cpp (jimmysong)</li>
    <li>#10256 <code class="language-text highlighter-rouge">80c3a73</code> [test] Add test for gettxout to wallet.py (jimmysong)</li>
    <li>#10264 <code class="language-text highlighter-rouge">492d22f</code> [test] Add tests for getconnectioncount, getnettotals and ping (jimmysong)</li>
    <li>#10169 <code class="language-text highlighter-rouge">8f3e384</code> [tests] Remove func test code duplication (jnewbery)</li>
    <li>#10198 <code class="language-text highlighter-rouge">dc8fc0c</code> [tests] Remove is_network_split from functional test framework (jnewbery)</li>
    <li>#10255 <code class="language-text highlighter-rouge">3c5e6c9</code> [test] Add test for listaddressgroupings (jimmysong)</li>
    <li>#10137 <code class="language-text highlighter-rouge">75171f0</code> Remove unused import. Remove accidental trailing semicolons (practicalswift)</li>
    <li>#10307 <code class="language-text highlighter-rouge">83073de</code> [tests] allow zmq test to be run in out-of-tree builds (jnewbery)</li>
    <li>#10344 <code class="language-text highlighter-rouge">e927483</code> [tests] Fix abandonconflict.py intermittency (jnewbery)</li>
    <li>#10318 <code class="language-text highlighter-rouge">170bc2c</code> [tests] fix wait_for_inv() (jnewbery)</li>
    <li>#10171 <code class="language-text highlighter-rouge">fff72de</code> [tests] Add node methods to test framework (jnewbery)</li>
    <li>#10352 <code class="language-text highlighter-rouge">23d78c4</code> test: Add elapsed time to RPC tracing (laanwj)</li>
    <li>#10342 <code class="language-text highlighter-rouge">6a796b2</code> [tests] Improve mempool_persist test (jnewbery)</li>
    <li>#10287 <code class="language-text highlighter-rouge">776ba23</code> [tests] Update Unit Test for addrman.h/addrman.cpp (jimmysong)</li>
    <li>#10365 <code class="language-text highlighter-rouge">7ee5236</code> [tests] increase timeouts in sendheaders test (jnewbery)</li>
    <li>#10361 <code class="language-text highlighter-rouge">f6241b3</code> qa: disablewallet: Check that wallet is really disabled (MarcoFalke)</li>
    <li>#10371 <code class="language-text highlighter-rouge">4b766fc</code> [tests] Clean up addrman_tests.cpp (jimmysong)</li>
    <li>#10253 <code class="language-text highlighter-rouge">87abe20</code> [test] Add test for getnetworkhashps (jimmysong)</li>
    <li>#10376 <code class="language-text highlighter-rouge">8bd16ee</code> [tests] fix disconnect_ban intermittency (jnewbery)</li>
    <li>#10374 <code class="language-text highlighter-rouge">5411997</code> qa: Warn when specified test is not found (MarcoFalke)</li>
    <li>#10405 <code class="language-text highlighter-rouge">0542978</code> tests: Correct testcase in script_tests.json for large number OP_EQUAL (laanwj)</li>
    <li>#10429 <code class="language-text highlighter-rouge">6b99daf</code> tests: fix spurious addrman test failure (theuni)</li>
    <li>#10433 <code class="language-text highlighter-rouge">8e57256</code> [tests] improve tmpdir structure (jnewbery)</li>
    <li>#10415 <code class="language-text highlighter-rouge">217b416</code> [tests] Speed up fuzzing by ~200x when using afl-fuzz (practicalswift)</li>
    <li>#10445 <code class="language-text highlighter-rouge">b4b057a</code> Add test for empty chain and reorg consistency for gettxoutsetinfo (gmaxwell)</li>
    <li>#10423 <code class="language-text highlighter-rouge">1aefc94</code> [tests] skipped tests should clean up after themselves (jnewbery)</li>
    <li>#10359 <code class="language-text highlighter-rouge">329fc1d</code> [tests] functional tests should call BitcoinTestFramework start/stop node methods (jnewbery)</li>
    <li>#10514 <code class="language-text highlighter-rouge">e103b3f</code> Bugfix: missing == 0 after randrange (sipa)</li>
    <li>#10515 <code class="language-text highlighter-rouge">c871f32</code> [test] Add test for getchaintxstats (jimmysong)</li>
    <li>#10509 <code class="language-text highlighter-rouge">bea5b00</code> Remove xvfb configuration from travis (ryanofsky)</li>
    <li>#10535 <code class="language-text highlighter-rouge">30853e1</code> [qa] fundrawtx: Fix shutdown race (MarcoFalke)</li>
    <li>#9909 <code class="language-text highlighter-rouge">300f8e7</code> tests: Add FindEarliestAtLeast test for edge cases (ryanofsky)</li>
    <li>#10331 <code class="language-text highlighter-rouge">75e898c</code> Share config between util and functional tests (jnewbery)</li>
    <li>#10321 <code class="language-text highlighter-rouge">e801084</code> Use FastRandomContext for all tests (sipa)</li>
    <li>#10524 <code class="language-text highlighter-rouge">6c2d81f</code> [tests] Remove printf(…) (practicalswift)</li>
    <li>#10547 <code class="language-text highlighter-rouge">71ab6e5</code> [tests] Use FastRandomContext instead of boost::random::{mt19937,uniform_int_distribution} (practicalswift)</li>
    <li>#10551 <code class="language-text highlighter-rouge">6702617</code> [Tests] Wallet encryption functional tests (achow101)</li>
    <li>#10555 <code class="language-text highlighter-rouge">643fa0b</code> [tests] various improvements to zmq_test.py (jnewbery)</li>
    <li>#10533 <code class="language-text highlighter-rouge">d083bd9</code> [tests] Use cookie auth instead of rpcuser and rpcpassword (achow101)</li>
    <li>#10632 <code class="language-text highlighter-rouge">c68a9a6</code> qa: Add stopatheight test (MarcoFalke)</li>
    <li>#10636 <code class="language-text highlighter-rouge">4bc853b</code> [qa] util: Check return code after closing bitcoind proc (MarcoFalke)</li>
    <li>#10662 <code class="language-text highlighter-rouge">e0a7801</code> Initialize randomness in benchmarks (achow101)</li>
    <li>#10612 <code class="language-text highlighter-rouge">7c87a9c</code> The young person’s guide to the test_framework (jnewbery)</li>
    <li>#10659 <code class="language-text highlighter-rouge">acb1153</code> [qa] blockchain: Pass on closed connection during generate call (MarcoFalke)</li>
    <li>#10690 <code class="language-text highlighter-rouge">416af3e</code> [qa] Bugfix: allow overriding extra_args in ComparisonTestFramework (sdaftuar)</li>
    <li>#10556 <code class="language-text highlighter-rouge">65cc7aa</code> Move stop/start functions from utils.py into BitcoinTestFramework (jnewbery)</li>
    <li>#10704 <code class="language-text highlighter-rouge">dd07f47</code> [tests] nits in dbcrash.py (jnewbery)</li>
    <li>#10743 <code class="language-text highlighter-rouge">be82498</code> [test] don’t run dbcrash.py on Travis (jnewbery)</li>
    <li>#10761 <code class="language-text highlighter-rouge">d3b5870</code> [tests] fix replace_by_fee.py (jnewbery)</li>
    <li>#10759 <code class="language-text highlighter-rouge">1d4805c</code> Fix multi_rpc test for hosts that dont default to utf8 (TheBlueMatt)</li>
    <li>#10190 <code class="language-text highlighter-rouge">e4f226a</code> [tests] mining functional tests (including regression test for submitblock) (jnewbery)</li>
    <li>#10739 <code class="language-text highlighter-rouge">1fc783f</code> test: Move variable <code class="language-text highlighter-rouge">state</code> down where it is used (paveljanik)</li>
    <li>#9980 <code class="language-text highlighter-rouge">fee0d80</code> Fix mem access violation merkleblock (Christewart)</li>
    <li>#10893 <code class="language-text highlighter-rouge">0c173a1</code> [QA] Avoid running multiwallet.py twice (jonasschnelli)</li>
    <li>#10927 <code class="language-text highlighter-rouge">9d5e8f9</code> test: Make sure wallet.backup is created in temp path (laanwj)</li>
    <li>#10899 <code class="language-text highlighter-rouge">f29d5db</code> [test] Qt: Use _putenv_s instead of setenv on Windows builds (brianmcmichael)</li>
    <li>#10912 <code class="language-text highlighter-rouge">5c8eb79</code> [tests] Fix incorrect memory_cleanse(…) call in crypto_tests.cpp (practicalswift)</li>
    <li>#11001 <code class="language-text highlighter-rouge">fa8a063</code> [tests] Test disconnecting unsupported service bits logic (jnewbery)</li>
    <li>#10695 <code class="language-text highlighter-rouge">929fd72</code> [qa] Rewrite BIP65/BIP66 functional tests (sdaftuar)</li>
    <li>#10963 <code class="language-text highlighter-rouge">ecd2135</code> [bench] Restore format state of cout after printing with std::fixed/setprecision (practicalswift)</li>
    <li>#11025 <code class="language-text highlighter-rouge">e5d26e4</code> qa: Fix inv race in example_test (MarcoFalke)</li>
    <li>#10765 <code class="language-text highlighter-rouge">2c811e0</code> Tests: address placement should be deterministic by default (ReneNyffenegger)</li>
    <li>#11000 <code class="language-text highlighter-rouge">ac016e1</code> test: Add resendwallettransactions functional tests (promag)</li>
    <li>#11032 <code class="language-text highlighter-rouge">aeb3175</code> [qa] Fix block message processing error in sendheaders.py (sdaftuar)</li>
    <li>#10105 <code class="language-text highlighter-rouge">0b9fb68</code> [tests] fixup - make all Travis test runs quiet, non just cron job runs (jnewbery)</li>
    <li>#10222 <code class="language-text highlighter-rouge">6ce7337</code> [tests] test_runner - check unicode (jnewbery)</li>
    <li>#10327 <code class="language-text highlighter-rouge">35da2ae</code> [tests] remove import-abort-rescan.py (jnewbery)</li>
    <li>#11023 <code class="language-text highlighter-rouge">bf74d37</code> [tests] Add option to attach a python debugger if functional test fails (jnewbery)</li>
    <li>#10565 <code class="language-text highlighter-rouge">8c2098a</code> [coverage] Remove subtrees and benchmarks from coverage report (achow101)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#9871 <code class="language-text highlighter-rouge">be8ba2c</code> Add a tree sha512 hash to merge commits (sipa)</li>
    <li>#9821 <code class="language-text highlighter-rouge">d19d45a</code> util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD (laanwj)</li>
    <li>#9903 <code class="language-text highlighter-rouge">ba80a68</code> Docs: add details to -rpcclienttimeout doc (ian-kelling)</li>
    <li>#9910 <code class="language-text highlighter-rouge">53c300f</code> Docs: correct and elaborate -rpcbind doc (ian-kelling)</li>
    <li>#9905 <code class="language-text highlighter-rouge">01b7cda</code> [contrib] gh-merge: Move second sha512 check to the end (MarcoFalke)</li>
    <li>#9880 <code class="language-text highlighter-rouge">4df8213</code> Verify Tree-SHA512s in merge commits, enforce sigs are not SHA1 (TheBlueMatt)</li>
    <li>#9932 <code class="language-text highlighter-rouge">00c13ea</code> Fix verify-commits on travis and always check top commit’s tree (TheBlueMatt)</li>
    <li>#9952 <code class="language-text highlighter-rouge">6996e06</code> Add historical release notes for 0.14.0 (laanwj)</li>
    <li>#9940 <code class="language-text highlighter-rouge">fa99663</code> Fix verify-commits on OSX, update for new bad Tree-SHA512, point travis to different keyservers (TheBlueMatt)</li>
    <li>#9963 <code class="language-text highlighter-rouge">8040ae6</code> util: Properly handle errors during log message formatting (laanwj)</li>
    <li>#9984 <code class="language-text highlighter-rouge">cce056d</code> devtools: Make github-merge compute SHA512 from git, instead of worktree (laanwj)</li>
    <li>#9995 <code class="language-text highlighter-rouge">8bcf934</code> [doc] clarify blockchain size and pruning (askmike)</li>
    <li>#9734 <code class="language-text highlighter-rouge">0c17afc</code> Add updating of chainTxData to release process (sipa)</li>
    <li>#10063 <code class="language-text highlighter-rouge">530fcbd</code> add missing spaces so that markdown recognizes headline (flack)</li>
    <li>#10085 <code class="language-text highlighter-rouge">db1ae54</code> Docs: remove ‘noconnect’ option (jlopp)</li>
    <li>#10090 <code class="language-text highlighter-rouge">8e4f7e7</code> Update bitcoin.conf with example for pruning (coinables)</li>
    <li>#9424 <code class="language-text highlighter-rouge">1a5aaab</code> Change LogAcceptCategory to use uint32_t rather than sets of strings (gmaxwell)</li>
    <li>#10036 <code class="language-text highlighter-rouge">fbf36ca</code> Fix init README format to render correctly on github (jlopp)</li>
    <li>#10058 <code class="language-text highlighter-rouge">a2cd0b0</code> No need to use OpenSSL malloc/free (tjps)</li>
    <li>#10123 <code class="language-text highlighter-rouge">471ed00</code> Allow debug logs to be excluded from specified component (jnewbery)</li>
    <li>#10104 <code class="language-text highlighter-rouge">fadf078</code> linearize script: Option to use RPC cookie (achow101)</li>
    <li>#10162 <code class="language-text highlighter-rouge">a3a2160</code> [trivial] Log calls to getblocktemplate (jnewbery)</li>
    <li>#10155 <code class="language-text highlighter-rouge">928695b</code> build: Deduplicate version numbers (laanwj)</li>
    <li>#10211 <code class="language-text highlighter-rouge">a86255b</code> [doc] Contributor fixes &amp; new “finding reviewers” section (kallewoof)</li>
    <li>#10250 <code class="language-text highlighter-rouge">1428f30</code> Fix some empty vector references (sipa)</li>
    <li>#10270 <code class="language-text highlighter-rouge">95f5e44</code> Remove Clang workaround for Boost 1.46 (fanquake)</li>
    <li>#10263 <code class="language-text highlighter-rouge">cb007e4</code> Trivial: fix fee estimate write error log message (CryptAxe)</li>
    <li>#9670 <code class="language-text highlighter-rouge">bd9ec0e</code> contrib: github-merge improvements (laanwj)</li>
    <li>#10260 <code class="language-text highlighter-rouge">1d75597</code> [doc] Minor corrections to osx dependencies (fanquake)</li>
    <li>#10189 <code class="language-text highlighter-rouge">750c5a5</code> devtools/net: add a verifier for scriptable changes. Use it to make CNode::id private (theuni)</li>
    <li>#10322 <code class="language-text highlighter-rouge">bc64b5a</code> Use hardware timestamps in RNG seeding (sipa)</li>
    <li>#10381 <code class="language-text highlighter-rouge">7f2b9e0</code> Shadowing warnings are not enabled by default, update doc accordingly (paveljanik)</li>
    <li>#10380 <code class="language-text highlighter-rouge">b6ee855</code> [doc] Removing comments about dirty entries on txmempool (madeo)</li>
    <li>#10383 <code class="language-text highlighter-rouge">d0c37ee</code> [logging] log system time and mock time (jnewbery)</li>
    <li>#10404 <code class="language-text highlighter-rouge">b45a52a</code> doc: Add logging to FinalizeNode() (sdaftuar)</li>
    <li>#10388 <code class="language-text highlighter-rouge">526e839</code> Output line to debug.log when IsInitialBlockDownload latches to false (morcos)</li>
    <li>#10372 <code class="language-text highlighter-rouge">15254e9</code> Add perf counter data to GetStrongRandBytes state in scheduler (TheBlueMatt)</li>
    <li>#10461 <code class="language-text highlighter-rouge">55b72f3</code> Update style guide (sipa)</li>
    <li>#10486 <code class="language-text highlighter-rouge">10e8c0a</code> devtools: Retry after signing fails in github-merge (laanwj)</li>
    <li>#10447 <code class="language-text highlighter-rouge">f259263</code> Make bitcoind invalid argument error message specific (laanwj)</li>
    <li>#10495 <code class="language-text highlighter-rouge">6a38b79</code> contrib: Update location of seeds.txt (laanwj)</li>
    <li>#10469 <code class="language-text highlighter-rouge">b6b150b</code> Fixing typo in rpcdump.cpp help message (keystrike)</li>
    <li>#10451 <code class="language-text highlighter-rouge">27b9931</code> contrib/init/bitcoind.openrcconf: Don’t disable wallet by default (luke-jr)</li>
    <li>#10323 <code class="language-text highlighter-rouge">00d3692</code> Update to latest libsecp256k1 master (sipa)</li>
    <li>#10422 <code class="language-text highlighter-rouge">cec9e1e</code> Fix timestamp in fee estimate debug message (morcos)</li>
    <li>#10566 <code class="language-text highlighter-rouge">5d034ee</code> [docs] Use the “domain name setup” image (previously unused) in the gitian docs (practicalswift)</li>
    <li>#10534 <code class="language-text highlighter-rouge">a514ac3</code> Clarify prevector::erase and avoid swap-to-clear (sipa)</li>
    <li>#10575 <code class="language-text highlighter-rouge">22ec768</code> Header include guideline (sipa)</li>
    <li>#10480 <code class="language-text highlighter-rouge">fbf5d3b</code> Improve commit-check-script.sh (sipa)</li>
    <li>#10502 <code class="language-text highlighter-rouge">1ad3d4e</code> scripted-diff: Remove BOOST_FOREACH, Q_FOREACH and PAIRTYPE (jtimon)</li>
    <li>#10377 <code class="language-text highlighter-rouge">b63be2c</code> Use rdrand as entropy source on supported platforms (sipa)</li>
    <li>#9895 <code class="language-text highlighter-rouge">228c319</code> Turn TryCreateDirectory() into TryCreateDirectories() (benma)</li>
    <li>#10602 <code class="language-text highlighter-rouge">d76e84a</code> Make clang-format use C++11 features (practicalswift)</li>
    <li>#10623 <code class="language-text highlighter-rouge">c38f540</code> doc: Add 0.14.2 release notes (MarcoFalke)</li>
    <li>#10276 <code class="language-text highlighter-rouge">b750b33</code> contrib/verifybinaries: allow filtering by platform (knocte)</li>
    <li>#10248 <code class="language-text highlighter-rouge">01c4b14</code> Rewrite addrdb with less duplication using CHashVerifier (sipa)</li>
    <li>#10577 <code class="language-text highlighter-rouge">232508f</code> Add an explanation of quickly hashing onto a non-power of two range (gmaxwell)</li>
    <li>#10608 <code class="language-text highlighter-rouge">eee398f</code> Add a comment explaining the use of MAX_BLOCK_BASE_SIZE (gmaxwell)</li>
    <li>#10728 <code class="language-text highlighter-rouge">7397af9</code> fix typo in help text for removeprunedfunds (AkioNak)</li>
    <li>#10193 <code class="language-text highlighter-rouge">6dbcc74</code> scripted-diff: Remove #include &lt;boost/foreach.hpp&gt; (jtimon)</li>
    <li>#10676 <code class="language-text highlighter-rouge">379aed0</code> document script-based return fields for validateaddress (instagibbs)</li>
    <li>#10651 <code class="language-text highlighter-rouge">cef4b5c</code> Verify binaries from bitcoincore.org and bitcoin.org (TheBlueMatt)</li>
    <li>#10786 <code class="language-text highlighter-rouge">ca4c545</code> Add PR description to merge commit in github-merge.py (sipa)</li>
    <li>#10812 <code class="language-text highlighter-rouge">c5904e8</code> [utils] Allow bitcoin-cli’s -rpcconnect option to be used with square brackets (jnewbery)</li>
    <li>#10842 <code class="language-text highlighter-rouge">3895e25</code> Fix incorrect Doxygen tag (@ince → @since). Doxygen parameter name matching (practicalswift)</li>
    <li>#10681 <code class="language-text highlighter-rouge">df0793f</code> add gdb attach process to test README (instagibbs)</li>
    <li>#10789 <code class="language-text highlighter-rouge">1124328</code> Punctuation/grammer fixes in rpcwallet.cpp (stevendlander)</li>
    <li>#10655 <code class="language-text highlighter-rouge">78f307b</code> Properly document target_confirmations in listsinceblock (RHavar)</li>
    <li>#10917 <code class="language-text highlighter-rouge">5c003cb</code> developer-notes: add reference to snake_case and PascalCase (benma)</li>
    <li>#11003 <code class="language-text highlighter-rouge">4b5a7ce</code> Docs: Capitalize bullet points in CONTRIBUTING guide (eklitzke)</li>
    <li>#10968 <code class="language-text highlighter-rouge">98aa3f6</code> Add instructions for parallel gitian builds (coblee)</li>
    <li>#11076 <code class="language-text highlighter-rouge">1c4b9b3</code> 0.15 release-notes nits: fix redundancy, remove accidental parenthesis &amp; fix range style (practicalswift)</li>
    <li>#11090 <code class="language-text highlighter-rouge">8f0121c</code> Update contributor names in release-notes.md (Derek701)</li>
    <li>#11056 <code class="language-text highlighter-rouge">cbdd338</code> disable jni in builds (instagibbs)</li>
    <li>#11080 <code class="language-text highlighter-rouge">2b59cfb</code> doc: Update build-openbsd for 6.1 (laanwj)</li>
    <li>#11119 <code class="language-text highlighter-rouge">0a6af47</code> [doc] build-windows: Mention that only trusty works (MarcoFalke)</li>
    <li>#11108 <code class="language-text highlighter-rouge">e8ad101</code> Changing -txindex requires -reindex, not -reindex-chainstate (TheBlueMatt)</li>
    <li>#9792 <code class="language-text highlighter-rouge">342b9bc</code> FastRandomContext improvements and switch to ChaCha20 (sipa)</li>
    <li>#9505 <code class="language-text highlighter-rouge">67ed40e</code> Prevector Quick Destruct (JeremyRubin)</li>
    <li>#10820 <code class="language-text highlighter-rouge">ef37f20</code> Use cpuid intrinsics instead of asm code (sipa)</li>
    <li>#9999 <code class="language-text highlighter-rouge">a328904</code> [LevelDB] Plug leveldb logs to bitcoin logs (NicolasDorier)</li>
    <li>#9693 <code class="language-text highlighter-rouge">c5e9e42</code> Prevent integer overflow in ReadVarInt (gmaxwell)</li>
    <li>#10129 <code class="language-text highlighter-rouge">351d0ad</code> scheduler: fix sub-second precision with boost &lt; 1.50 (theuni)</li>
    <li>#10153 <code class="language-text highlighter-rouge">fade788</code> logging: Fix off-by-one for shrinkdebugfile default (MarcoFalke)</li>
    <li>#10305 <code class="language-text highlighter-rouge">c45da32</code> Fix potential NPD introduced in b297426c (TheBlueMatt)</li>
    <li>#10338 <code class="language-text highlighter-rouge">daf3e7d</code> Maintain state across GetStrongRandBytes calls (sipa)</li>
    <li>#10544 <code class="language-text highlighter-rouge">a4fe077</code> Update to LevelDB 1.20 (sipa)</li>
    <li>#10614 <code class="language-text highlighter-rouge">cafe24f</code> random: fix crash on some 64bit platforms (theuni)</li>
    <li>#10714 <code class="language-text highlighter-rouge">2a09a38</code> Avoid printing incorrect block indexing time due to uninitialized variable (practicalswift)</li>
    <li>#10837 <code class="language-text highlighter-rouge">8bc6d1f</code> Fix resource leak on error in GetDevURandom (corebob)</li>
    <li>#10832 <code class="language-text highlighter-rouge">89bb036</code> init: Factor out AppInitLockDataDirectory and fix startup core dump issue (laanwj)</li>
    <li>#10914 <code class="language-text highlighter-rouge">b995a37</code> Add missing lock in CScheduler::AreThreadsServicingQueue() (TheBlueMatt)</li>
    <li>#10958 <code class="language-text highlighter-rouge">659c096</code> Update to latest Bitcoin patches for LevelDB (sipa)</li>
    <li>#10919 <code class="language-text highlighter-rouge">c1c671f</code> Fix more init bugs (TheBlueMatt)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>ロハン ダル</li>
    <li>Ahmad Kazi</li>
    <li>aideca</li>
    <li>Akio Nakamura</li>
    <li>Alex Morcos</li>
    <li>Allan Doensen</li>
    <li>Andres G. Aragoneses</li>
    <li>Andrew Chow</li>
    <li>Angel Leon</li>
    <li>Awemany</li>
    <li>Bob McElrath</li>
    <li>Brian McMichael</li>
    <li>BtcDrak</li>
    <li>Charlie Lee</li>
    <li>Chris Gavin</li>
    <li>Chris Stewart</li>
    <li>Cory Fields</li>
    <li>CryptAxe</li>
    <li>Dag Robole</li>
    <li>Daniel Aleksandersen</li>
    <li>Daniel Cousens</li>
    <li>darksh1ne</li>
    <li>Dimitris Tsapakidis</li>
    <li>Eric Shaw</li>
    <li>Evan Klitzke</li>
    <li>fanquake</li>
    <li>Felix Weis</li>
    <li>flack</li>
    <li>Guido Vranken</li>
    <li>Greg Griffith</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>Ian Kelling</li>
    <li>Jack Grigg</li>
    <li>James Evans</li>
    <li>James Hilliard</li>
    <li>Jameson Lopp</li>
    <li>Jeremy Rubin</li>
    <li>Jimmy Song</li>
    <li>João Barbosa</li>
    <li>Johnathan Corgan</li>
    <li>John Newbery</li>
    <li>Jonas Schnelli</li>
    <li>Jorge Timón</li>
    <li>Karl-Johan Alm</li>
    <li>kewde</li>
    <li>KibbledJiveElkZoo</li>
    <li>Kirit Thadaka</li>
    <li>kobake</li>
    <li>Kyle Honeycutt</li>
    <li>Lawrence Nahum</li>
    <li>Luke Dashjr</li>
    <li>Marco Falke</li>
    <li>Marcos Mayorga</li>
    <li>Marijn Stollenga</li>
    <li>Mario Dian</li>
    <li>Mark Friedenbach</li>
    <li>Marko Bencun</li>
    <li>Masahiko Hyuga</li>
    <li>Matt Corallo</li>
    <li>Matthew Zipkin</li>
    <li>Matthias Grundmann</li>
    <li>Michael Goldstein</li>
    <li>Michael Rotarius</li>
    <li>Mikerah</li>
    <li>Mike van Rossum</li>
    <li>Mitchell Cash</li>
    <li>Nicolas Dorier</li>
    <li>Patrick Strateman</li>
    <li>Pavel Janík</li>
    <li>Pavlos Antoniou</li>
    <li>Pavol Rusnak</li>
    <li>Pedro Branco</li>
    <li>Peter Todd</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>René Nyffenegger</li>
    <li>Ricardo Velhote</li>
    <li>romanornr</li>
    <li>Russell Yanofsky</li>
    <li>Rusty Russell</li>
    <li>Ryan Havar</li>
    <li>shaolinfry</li>
    <li>Shigeya Suzuki</li>
    <li>Simone Madeo</li>
    <li>Spencer Lievens</li>
    <li>Steven D. Lander</li>
    <li>Suhas Daftuar</li>
    <li>Takashi Mitsuta</li>
    <li>Thomas Snider</li>
    <li>Timothy Redaelli</li>
    <li>tintinweb</li>
    <li>tnaka</li>
    <li>Warren Togami</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.15.0 released</title>
            <link>https://bitcoin.org/en/release/v0.15.0</link>
            <guid>https://bitcoin.org/en/release/v0.15.0</guid>
          
            <pubDate>Thu, 14 Sep 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version <em>0.15.0</em> is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/bitcoin-core-0.15.0/</del></p>

  <p>and</p>

  <p><del>https://bitcoincore.org/bin/bitcoin-core-0.15.0/</del></p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at GitHub:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="how-to-upgrade">How to Upgrade</h1>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the 
installer (on Windows) or just copy over <code class="language-text highlighter-rouge">/Applications/Bitcoin-Qt</code> (on Mac)
or <code class="language-text highlighter-rouge">bitcoind</code>/<code class="language-text highlighter-rouge">bitcoin-qt</code> (on Linux).</p>

  <p>The first time you run version 0.15.0, your chainstate database will be converted to a
new format, which will take anywhere from a few minutes to half an hour,
depending on the speed of your machine.</p>

  <p>The file format of <code class="language-text highlighter-rouge">fee_estimates.dat</code> changed in version 0.15.0. Hence, a
downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee
estimates to be discarded.</p>

  <p>Note that the block database format also changed in version 0.8.0 and there is no
automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading
directly from 0.7.x and earlier without redownloading the blockchain is not supported.
However, as usual, old wallet versions are still supported.</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>The chainstate database for this release is not compatible with previous
releases, so if you run 0.15 and then decide to switch back to any
older version, you will need to run the old release with the <code class="language-text highlighter-rouge">-reindex-chainstate</code>
option to rebuild the chainstate data structures in the old format.</p>

  <p>If your node has pruning enabled, this will entail re-downloading and
processing the entire blockchain.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notes-for-0150">Notes for 0.15.0</h1>

  <h2 id="current-segwit-support">Current SegWit support</h2>

  <p>Version 0.15.0 supports adding a segregated witness address via the <code class="language-text highlighter-rouge">addwitnessaddress</code> RPC, but
please note that this is a testing/expert RPC, which does not guarantee recovery from backup. Only use
this RPC if you know what you are doing. More complete wallet support for segregated witness is coming
in a next version.</p>

  <h2 id="rescanning-with-encrypted-wallets">Rescanning with encrypted wallets</h2>

  <p>As in previous versions, when using an encrypted HD wallet, the keypool cannot be topped up without unlocking
the wallet. This means that currently, in order to recover from a backup of an encrypted HD wallet, the user
must unlock the wallet with a really long timeout and manually trigger a rescan, otherwise they risk missing
some keys when auto-topup cannot run. Unfortunately there is no <code class="language-text highlighter-rouge">rescan</code> RPC in this version, that will be
included in a future version, so for now a rescan can be triggered using one of the <code class="language-text highlighter-rouge">import*</code> commands, using
a dummy address generated by another (trusted) wallet.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="performance-improvements">Performance Improvements</h2>

  <p>Version 0.15 contains a number of significant performance improvements, which make
Initial Block Download, startup, transaction and block validation much faster:</p>

  <ul>
    <li>The chainstate database (which is used for tracking UTXOs) has been changed
from a per-transaction model to a per-output model (See <a href="https://github.com/bitcoin/bitcoin/pull/10195">PR 10195</a>). Advantages of this model
are that it:
      <ul>
        <li>avoids the CPU overhead of deserializing and serializing the unused outputs;</li>
        <li>has more predictable memory usage;</li>
        <li>uses simpler code;</li>
        <li>is adaptable to various future cache flushing strategies.</li>
      </ul>

      <p>As a result, validating the blockchain during Initial Block Download (IBD) and reindex
is ~30-40% faster, uses 10-20% less memory, and flushes to disk far less frequently.
The only downside is that the on-disk database is 15% larger. During the conversion from the previous format
a few extra gigabytes may be used.</p>
    </li>
    <li>Earlier versions experienced a spike in memory usage while flushing UTXO updates to disk.
As a result, only half of the available memory was actually used as cache, and the other half was
reserved to accommodate flushing. This is no longer the case (See <a href="https://github.com/bitcoin/bitcoin/pull/10148">PR 10148</a>), and the entirety of
the available cache (see <code class="language-text highlighter-rouge">-dbcache</code>) is now actually used as cache. This reduces the flushing
frequency by a factor 2 or more.</li>
    <li>In previous versions, signature validation for transactions has been cached when the
transaction is accepted to the mempool. Version 0.15 extends this to cache the entire script
validity (See <a href="https://github.com/bitcoin/bitcoin/pull/10192">PR 10192</a>). This means that if a transaction in a block has already been accepted to the
mempool, the scriptSig does not need to be re-evaluated. Empirical tests show that
this results in new block validation being 40-50% faster.</li>
    <li>LevelDB has been upgraded to version 1.20 (See <a href="https://github.com/bitcoin/bitcoin/pull/10544">PR 10544</a>). This version contains hardware acceleration for CRC
on architectures supporting SSE 4.2. As a result, synchronization and block validation are now faster.</li>
    <li>SHA256 hashing has been optimized for architectures supporting SSE 4 (See <a href="https://github.com/bitcoin/bitcoin/pull/10821">PR 10821</a>). SHA256 is around
50% faster on supported hardware, which results in around 5% faster IBD and block
validation. In version 0.15, SHA256 hardware optimization is disabled in release builds by
default, but can be enabled by using <code class="language-text highlighter-rouge">--enable-experimental-asm</code> when building.</li>
    <li>Refill of the keypool no longer flushes the wallet between each key which resulted in a ~20x speedup in creating a new wallet. Part of this speedup was used to increase the default keypool to 1000 keys to make recovery more robust. (See <a href="https://github.com/bitcoin/bitcoin/pull/10831">PR 10831</a>).</li>
  </ul>

  <h2 id="fee-estimation-improvements">Fee Estimation Improvements</h2>

  <p>Fee estimation has been significantly improved in version 0.15, with more accurate fee estimates used by the wallet and a wider range of options for advanced users of the <code class="language-text highlighter-rouge">estimatesmartfee</code> and <code class="language-text highlighter-rouge">estimaterawfee</code> RPCs (See <a href="https://github.com/bitcoin/bitcoin/pull/10199">PR 10199</a>).</p>

  <h3 id="changes-to-internal-logic-and-wallet-behavior">Changes to internal logic and wallet behavior</h3>

  <ul>
    <li>Internally, estimates are now tracked on 3 different time horizons. This allows for longer targets and means estimates adjust more quickly to changes in conditions.</li>
    <li>Estimates can now be <em>conservative</em> or <em>economical</em>. <em>Conservative</em> estimates use longer time horizons to produce an estimate which is less susceptible to rapid changes in fee conditions. <em>Economical</em> estimates use shorter time horizons and will be more affected by short-term changes in fee conditions. Economical estimates may be considerably lower during periods of low transaction activity (for example over weekends), but may result in transactions being unconfirmed if prevailing fees increase rapidly.</li>
    <li>By default, the wallet will use conservative fee estimates to increase the reliability of transactions being confirmed within the desired target. For transactions that are marked as replaceable, the wallet will use an economical estimate by default, since the fee can be ‘bumped’ if the fee conditions change rapidly (See <a href="https://github.com/bitcoin/bitcoin/pull/10589">PR 10589</a>).</li>
    <li>Estimates can now be made for confirmation targets up to 1008 blocks (one week).</li>
    <li>More data on historical fee rates is stored, leading to more precise fee estimates.</li>
    <li>Transactions which leave the mempool due to eviction or other non-confirmed reasons are now taken into account by the fee estimation logic, leading to more accurate fee estimates.</li>
    <li>The fee estimation logic will make sure enough data has been gathered to return a meaningful estimate. If there is insufficient data, a fallback default fee is used.</li>
  </ul>

  <h3 id="changes-to-fee-estimate-rpcs">Changes to fee estimate RPCs</h3>

  <ul>
    <li>The <code class="language-text highlighter-rouge">estimatefee</code> RPC is now deprecated in favor of using only <code class="language-text highlighter-rouge">estimatesmartfee</code> (which is the implementation used by the GUI)</li>
    <li>The <code class="language-text highlighter-rouge">estimatesmartfee</code> RPC interface has been changed (See <a href="https://github.com/bitcoin/bitcoin/pull/10707">PR 10707</a>):
      <ul>
        <li>The <code class="language-text highlighter-rouge">nblocks</code> argument has been renamed to <code class="language-text highlighter-rouge">conf_target</code> (to be consistent with other RPC methods).</li>
        <li>An <code class="language-text highlighter-rouge">estimate_mode</code> argument has been added. This argument takes one of the following strings: <code class="language-text highlighter-rouge">CONSERVATIVE</code>, <code class="language-text highlighter-rouge">ECONOMICAL</code> or <code class="language-text highlighter-rouge">UNSET</code> (which defaults to <code class="language-text highlighter-rouge">CONSERVATIVE</code>).</li>
        <li>The RPC return object now contains an <code class="language-text highlighter-rouge">errors</code> member, which returns errors encountered during processing.</li>
        <li>If Bitcoin Core has not been running for long enough and has not seen enough blocks or transactions to produce an accurate fee estimation, an error will be returned (previously a value of -1 was used to indicate an error, which could be confused for a feerate).</li>
      </ul>
    </li>
    <li>A new <code class="language-text highlighter-rouge">estimaterawfee</code> RPC is added to provide raw fee data. External clients can query and use this data in their own fee estimation logic.</li>
  </ul>

  <h2 id="multi-wallet-support">Multi-wallet support</h2>

  <p>Bitcoin Core now supports loading multiple, separate wallets (See <a href="https://github.com/bitcoin/bitcoin/pull/8694">PR 8694</a>, <a href="https://github.com/bitcoin/bitcoin/pull/10849">PR 10849</a>). The wallets are completely separated, with individual balances, keys and received transactions.</p>

  <p>Multi-wallet is enabled by using more than one <code class="language-text highlighter-rouge">-wallet</code> argument when starting Bitcoin, either on the command line or in the Bitcoin config file.</p>

  <p><strong>In Bitcoin-Qt, only the first wallet will be displayed and accessible for creating and signing transactions.</strong> GUI selectable multiple wallets will be supported in a future version. However, even in 0.15 other loaded wallets will remain synchronized to the node’s current tip in the background. This can be useful if running a pruned node, since loading a wallet where the most recent sync is beyond the pruned height results in having to download and revalidate the whole blockchain. Continuing to synchronize all wallets in the background avoids this problem.</p>

  <p>Bitcoin Core 0.15.0 contains the following changes to the RPC interface and <code class="language-text highlighter-rouge">bitcoin-cli</code> for multi-wallet:</p>

  <ul>
    <li>When running Bitcoin Core with a single wallet, there are <strong>no</strong> changes to the RPC interface or <code class="language-text highlighter-rouge">bitcoin-cli</code>. All RPC calls and <code class="language-text highlighter-rouge">bitcoin-cli</code> commands continue to work as before.</li>
    <li>When running Bitcoin Core with multi-wallet, all <em>node-level</em> RPC methods continue to work as before. HTTP RPC requests should be send to the normal <code class="language-text highlighter-rouge">&lt;RPC IP address&gt;:&lt;RPC port&gt;/</code> endpoint, and <code class="language-text highlighter-rouge">bitcoin-cli</code> commands should be run as before. A <em>node-level</em> RPC method is any method which does not require access to the wallet.</li>
    <li>When running Bitcoin Core with multi-wallet, <em>wallet-level</em> RPC methods must specify the wallet for which they’re intended in every request. HTTP RPC requests should be send to the <code class="language-text highlighter-rouge">&lt;RPC IP address&gt;:&lt;RPC port&gt;/wallet/&lt;wallet name&gt;/</code> endpoint, for example <code class="language-text highlighter-rouge">127.0.0.1:8332/wallet/wallet1.dat/</code>. <code class="language-text highlighter-rouge">bitcoin-cli</code> commands should be run with a <code class="language-text highlighter-rouge">-rpcwallet</code> option, for example <code class="language-text highlighter-rouge">bitcoin-cli -rpcwallet=wallet1.dat getbalance</code>.</li>
    <li>A new <em>node-level</em> <code class="language-text highlighter-rouge">listwallets</code> RPC method is added to display which wallets are currently loaded. The names returned by this method are the same as those used in the HTTP endpoint and for the <code class="language-text highlighter-rouge">rpcwallet</code> argument.</li>
  </ul>

  <p>Note that while multi-wallet is now fully supported, the RPC multi-wallet interface should be considered unstable for version 0.15.0, and there may backwards-incompatible changes in future versions.</p>

  <h2 id="replace-by-fee-control-in-the-gui">Replace-by-fee control in the GUI</h2>

  <p>Bitcoin Core has supported creating opt-in replace-by-fee (RBF) transactions
since version 0.12.0, and since version 0.14.0 has included a <code class="language-text highlighter-rouge">bumpfee</code> RPC method to
replace unconfirmed opt-in RBF transactions with a new transaction that pays
a higher fee.</p>

  <p>In version 0.15, creating an opt-in RBF transaction and replacing the unconfirmed
transaction with a higher-fee transaction are both supported in the GUI (See <a href="https://github.com/bitcoin/bitcoin/pull/9592">PR 9592</a>).</p>

  <h2 id="removal-of-coin-age-priority">Removal of Coin Age Priority</h2>

  <p>In previous versions of Bitcoin Core, a portion of each block could be reserved for transactions based on the age and value of UTXOs they spent. This concept (Coin Age Priority) is a policy choice by miners, and there are no consensus rules around the inclusion of Coin Age Priority transactions in blocks. In practice, only a few miners continue to use Coin Age Priority for transaction selection in blocks. Bitcoin Core 0.15 removes all remaining support for Coin Age Priority (See <a href="https://github.com/bitcoin/bitcoin/pull/9602">PR 9602</a>). This has the following implications:</p>

  <ul>
    <li>The concept of <em>free transactions</em> has been removed. High Coin Age Priority transactions would previously be allowed to be relayed even if they didn’t attach a miner fee. This is no longer possible since there is no concept of Coin Age Priority. The <code class="language-text highlighter-rouge">-limitfreerelay</code> and <code class="language-text highlighter-rouge">-relaypriority</code> options which controlled relay of free transactions have therefore been removed.</li>
    <li>The <code class="language-text highlighter-rouge">-sendfreetransactions</code> option has been removed, since almost all miners do not include transactions which do not attach a transaction fee.</li>
    <li>The <code class="language-text highlighter-rouge">-blockprioritysize</code> option has been removed.</li>
    <li>The <code class="language-text highlighter-rouge">estimatepriority</code> and <code class="language-text highlighter-rouge">estimatesmartpriority</code> RPCs have been removed.</li>
    <li>The <code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>, <code class="language-text highlighter-rouge">getmempoolentry</code> and <code class="language-text highlighter-rouge">getrawmempool</code> RPCs no longer return <code class="language-text highlighter-rouge">startingpriority</code> and <code class="language-text highlighter-rouge">currentpriority</code>.</li>
    <li>The <code class="language-text highlighter-rouge">prioritisetransaction</code> RPC no longer takes a <code class="language-text highlighter-rouge">priority_delta</code> argument, which is replaced by a <code class="language-text highlighter-rouge">dummy</code> argument for backwards compatibility with clients using positional arguments. The RPC is still used to change the apparent fee-rate of the transaction by using the <code class="language-text highlighter-rouge">fee_delta</code> argument.</li>
    <li><code class="language-text highlighter-rouge">-minrelaytxfee</code> can now be set to 0. If <code class="language-text highlighter-rouge">minrelaytxfee</code> is set, then fees smaller than <code class="language-text highlighter-rouge">minrelaytxfee</code> (per kB) are rejected from relaying, mining and transaction creation. This defaults to 1000 satoshi/kB.</li>
    <li>The <code class="language-text highlighter-rouge">-printpriority</code> option has been updated to only output the fee rate and hash of transactions included in a block by the mining code.</li>
  </ul>

  <h2 id="mempool-persistence-across-restarts">Mempool Persistence Across Restarts</h2>

  <p>Version 0.14 introduced mempool persistence across restarts (the mempool is saved to a <code class="language-text highlighter-rouge">mempool.dat</code> file in the data directory prior to shutdown and restores the mempool when the node is restarted). Version 0.15 allows this feature to be switched on or off using the <code class="language-text highlighter-rouge">-persistmempool</code> command-line option (See <a href="https://github.com/bitcoin/bitcoin/pull/9966">PR 9966</a>). By default, the option is set to true, and the mempool is saved on shutdown and reloaded on startup. If set to false, the <code class="language-text highlighter-rouge">mempool.dat</code> file will not be loaded on startup or saved on shutdown.</p>

  <h2 id="new-rpc-methods">New RPC methods</h2>

  <p>Version 0.15 introduces several new RPC methods:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">abortrescan</code> stops current wallet rescan, e.g. when triggered by an <code class="language-text highlighter-rouge">importprivkey</code> call (See <a href="https://github.com/bitcoin/bitcoin/pull/10208">PR 10208</a>).</li>
    <li><code class="language-text highlighter-rouge">combinerawtransaction</code> accepts a JSON array of raw transactions and combines them into a single raw transaction (See <a href="https://github.com/bitcoin/bitcoin/pull/10571">PR 10571</a>).</li>
    <li><code class="language-text highlighter-rouge">estimaterawfee</code> returns raw fee data so that customized logic can be implemented to analyze the data and calculate estimates. See <a href="#fee-estimation-improvements">Fee Estimation Improvements</a> for full details on changes to the fee estimation logic and interface.</li>
    <li><code class="language-text highlighter-rouge">getchaintxstats</code> returns statistics about the total number and rate of transactions
in the chain (See <a href="https://github.com/bitcoin/bitcoin/pull/9733">PR 9733</a>).</li>
    <li><code class="language-text highlighter-rouge">listwallets</code> lists wallets which are currently loaded. See the <em>Multi-wallet</em> section
of these release notes for full details (See <a href="#multi-wallet-support">Multi-wallet support</a>).</li>
    <li><code class="language-text highlighter-rouge">uptime</code> returns the total runtime of the <code class="language-text highlighter-rouge">bitcoind</code> server since its last start (See <a href="https://github.com/bitcoin/bitcoin/pull/10400">PR 10400</a>).</li>
  </ul>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li>
      <p>When using Bitcoin Core in multi-wallet mode, RPC requests for wallet methods must specify
the wallet that they’re intended for. See <a href="#multi-wallet-support">Multi-wallet support</a> for full details.</p>
    </li>
    <li>The new database model no longer stores information about transaction
versions of unspent outputs (See <a href="#performance-improvements">Performance improvements</a>). This means that:
      <ul>
        <li>The <code class="language-text highlighter-rouge">gettxout</code> RPC no longer has a <code class="language-text highlighter-rouge">version</code> field in the response.</li>
        <li>The <code class="language-text highlighter-rouge">gettxoutsetinfo</code> RPC reports <code class="language-text highlighter-rouge">hash_serialized_2</code> instead of <code class="language-text highlighter-rouge">hash_serialized</code>,
which does not commit to the transaction versions of unspent outputs, but does
commit to the height and coinbase information.</li>
        <li>The <code class="language-text highlighter-rouge">getutxos</code> REST path no longer reports the <code class="language-text highlighter-rouge">txvers</code> field in JSON format,
and always reports 0 for transaction versions in the binary format</li>
      </ul>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">estimatefee</code> RPC is deprecated. Clients should switch to using the <code class="language-text highlighter-rouge">estimatesmartfee</code> RPC, which returns better fee estimates. See <a href="#fee-estimation-improvements">Fee Estimation Improvements</a> for full details on changes to the fee estimation logic and interface.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">gettxoutsetinfo</code> response now contains <code class="language-text highlighter-rouge">disk_size</code> and <code class="language-text highlighter-rouge">bogosize</code> instead of
<code class="language-text highlighter-rouge">bytes_serialized</code>. The first is a more accurate estimate of actual disk usage, but
is not deterministic. The second is unrelated to disk usage, but is a
database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the
length of its scriptPubKey (See <a href="https://github.com/bitcoin/bitcoin/pull/10426">PR 10426</a>).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">signrawtransaction</code> can no longer be used to combine multiple transactions into a single transaction. Instead, use the new <code class="language-text highlighter-rouge">combinerawtransaction</code> RPC (See <a href="https://github.com/bitcoin/bitcoin/pull/10571">PR 10571</a>).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">fundrawtransaction</code> no longer accepts a <code class="language-text highlighter-rouge">reserveChangeKey</code> option. This option used to allow RPC users to fund a raw transaction using an key from the keypool for the change address without removing it from the available keys in the keypool. The key could then be re-used for a <code class="language-text highlighter-rouge">getnewaddress</code> call, which could potentially result in confusing or dangerous behaviour (See <a href="https://github.com/bitcoin/bitcoin/pull/10784">PR 10784</a>).</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">estimatepriority</code> and <code class="language-text highlighter-rouge">estimatesmartpriority</code> have been removed. See <a href="#removal-of-coin-age-priority">Removal of Coin Age Priority</a>.</p>
    </li>
    <li>The <code class="language-text highlighter-rouge">listunspent</code> RPC now takes a <code class="language-text highlighter-rouge">query_options</code> argument (see <a href="https://github.com/bitcoin/bitcoin/pull/8952">PR 8952</a>), which is a JSON object
containing one or more of the following members:
      <ul>
        <li><code class="language-text highlighter-rouge">minimumAmount</code> - a number specifying the minimum value of each UTXO</li>
        <li><code class="language-text highlighter-rouge">maximumAmount</code> - a number specifying the maximum value of each UTXO</li>
        <li><code class="language-text highlighter-rouge">maximumCount</code> - a number specifying the minimum number of UTXOs</li>
        <li><code class="language-text highlighter-rouge">minimumSumAmount</code> - a number specifying the minimum sum value of all UTXOs</li>
      </ul>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>, <code class="language-text highlighter-rouge">getmempoolentry</code> and <code class="language-text highlighter-rouge">getrawmempool</code> RPCs no longer return <code class="language-text highlighter-rouge">startingpriority</code> and <code class="language-text highlighter-rouge">currentpriority</code>. See <a href="#removal-of-coin-age-priority">Removal of Coin Age Priority</a>.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">dumpwallet</code> RPC now returns the full absolute path to the dumped wallet. It
used to return no value, even if successful (See <a href="https://github.com/bitcoin/bitcoin/pull/9740">PR 9740</a>).</p>
    </li>
    <li>
      <p>In the <code class="language-text highlighter-rouge">getpeerinfo</code> RPC, the return object for each peer now returns an <code class="language-text highlighter-rouge">addrbind</code> member, which contains the ip address and port of the connection to the peer. This is in addition to the <code class="language-text highlighter-rouge">addrlocal</code> member which contains the ip address and port of the local node as reported by the peer (See <a href="https://github.com/bitcoin/bitcoin/pull/10478">PR 10478</a>).</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">disconnectnode</code> RPC can now disconnect a node specified by node ID (as well as by IP address/port). To disconnect a node based on node ID, call the RPC with the new <code class="language-text highlighter-rouge">nodeid</code> argument (See <a href="https://github.com/bitcoin/bitcoin/pull/10143">PR 10143</a>).</p>
    </li>
    <li>
      <p>The second argument in <code class="language-text highlighter-rouge">prioritisetransaction</code> has been renamed from <code class="language-text highlighter-rouge">priority_delta</code> to <code class="language-text highlighter-rouge">dummy</code> since Bitcoin Core no longer has a concept of coin age priority. The <code class="language-text highlighter-rouge">dummy</code> argument has no functional effect, but is retained for positional argument compatibility. See <a href="#removal-of-coin-age-priority">Removal of Coin Age Priority</a>.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">resendwallettransactions</code> RPC throws an error if the <code class="language-text highlighter-rouge">-walletbroadcast</code> option is set to false (See <a href="https://github.com/bitcoin/bitcoin/pull/10995">PR 10995</a>).</p>
    </li>
    <li>
      <p>The second argument in the <code class="language-text highlighter-rouge">submitblock</code> RPC argument has been renamed from <code class="language-text highlighter-rouge">parameters</code> to <code class="language-text highlighter-rouge">dummy</code>. This argument never had any effect, and the renaming is simply to communicate this fact to the user (See <a href="https://github.com/bitcoin/bitcoin/pull/10191">PR 10191</a>)
(Clients should, however, use positional arguments for <code class="language-text highlighter-rouge">submitblock</code> in order to be compatible with BIP 22.)</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">verbose</code> argument of <code class="language-text highlighter-rouge">getblock</code> has been renamed to <code class="language-text highlighter-rouge">verbosity</code> and now takes an integer from 0 to 2. Verbose level 0 is equivalent to <code class="language-text highlighter-rouge">verbose=false</code>. Verbose level 1 is equivalent to <code class="language-text highlighter-rouge">verbose=true</code>. Verbose level 2 will give the full transaction details of each transaction in the output as given by <code class="language-text highlighter-rouge">getrawtransaction</code>. The old behavior of using the <code class="language-text highlighter-rouge">verbose</code> named argument and a boolean value is still maintained for compatibility.</p>
    </li>
    <li>Error codes have been updated to be more accurate for the following error cases (See <a href="https://github.com/bitcoin/bitcoin/pull/9853">PR 9853</a>):
      <ul>
        <li><code class="language-text highlighter-rouge">getblock</code> now returns RPC_MISC_ERROR if the block can’t be found on disk (for
example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">pruneblockchain</code> now returns RPC_MISC_ERROR if the blocks cannot be pruned
because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.</li>
        <li><code class="language-text highlighter-rouge">pruneblockchain</code> now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned
because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">pruneblockchain</code> now returns RPC_MISC_ERROR if the blocks cannot be pruned
because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">setban</code> now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address
or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.</li>
        <li><code class="language-text highlighter-rouge">setban</code> now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban
a node that has not previously been banned. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">removeprunedfunds</code> now returns RPC_WALLET_ERROR if <code class="language-text highlighter-rouge">bitcoind</code> is unable to remove
the transaction. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">removeprunedfunds</code> now returns RPC_INVALID_PARAMETER if the transaction does not
exist in the wallet. Previously returned RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">fundrawtransaction</code> now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change
address is provided. Previously returned RPC_INVALID_PARAMETER.</li>
        <li><code class="language-text highlighter-rouge">fundrawtransaction</code> now returns RPC_WALLET_ERROR if <code class="language-text highlighter-rouge">bitcoind</code> is unable to create
the transaction. The error message provides further details. Previously returned
RPC_INTERNAL_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_INVALID_PARAMETER if the provided transaction has
descendants in the wallet. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_INVALID_PARAMETER if the provided transaction has
descendants in the mempool. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has
has been mined or conflicts with a mined transaction. Previously returned
RPC_INVALID_ADDRESS_OR_KEY.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction is not
BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has already
been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction contains
inputs which don’t belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has multiple change
outputs. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the provided transaction has no change
output. Previously returned RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the fee is too high. Previously returned
RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the fee is too low. Previously returned
RPC_MISC_ERROR.</li>
        <li><code class="language-text highlighter-rouge">bumpfee</code> now returns RPC_WALLET_ERROR if the change output is too small to bump the
fee. Previously returned RPC_MISC_ERROR.</li>
      </ul>
    </li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="change-log">0.15.0 Change log</h1>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#9485 <code class="language-text highlighter-rouge">61a640e</code> ZMQ example using python3 and asyncio (mcelrath)</li>
    <li>#9894 <code class="language-text highlighter-rouge">0496e15</code> remove ‘label’ filter for rpc command help (instagibbs)</li>
    <li>#9853 <code class="language-text highlighter-rouge">02bd6e9</code> Fix error codes from various RPCs (jnewbery)</li>
    <li>#9842 <code class="language-text highlighter-rouge">598ef9c</code> Fix RPC failure testing (continuation of #9707) (jnewbery)</li>
    <li>#10038 <code class="language-text highlighter-rouge">d34995a</code> Add mallocinfo mode to <code class="language-text highlighter-rouge">getmemoryinfo</code> RPC (laanwj)</li>
    <li>#9500 <code class="language-text highlighter-rouge">3568b30</code> [Qt/RPC] Autocomplete commands for ‘help’ command in debug console (achow101)</li>
    <li>#10056 <code class="language-text highlighter-rouge">e6156a0</code> [zmq] Call va_end() on va_start()ed args (kallewoof)</li>
    <li>#10086 <code class="language-text highlighter-rouge">7438cea</code> Trivial: move rpcserialversion into RPC option group (jlopp)</li>
    <li>#10150 <code class="language-text highlighter-rouge">350b224</code> [rpc] Add logging rpc (jnewbery)</li>
    <li>#10208 <code class="language-text highlighter-rouge">393160c</code> [wallet] Rescan abortability (kallewoof)</li>
    <li>#10143 <code class="language-text highlighter-rouge">a987def</code> [net] Allow disconnectnode RPC to be called with node id (jnewbery)</li>
    <li>#10281 <code class="language-text highlighter-rouge">0e8499c</code> doc: Add RPC interface guidelines (laanwj)</li>
    <li>#9733 <code class="language-text highlighter-rouge">d4732f3</code> Add getchaintxstats RPC (sipa)</li>
    <li>#10310 <code class="language-text highlighter-rouge">f4b15e2</code> [doc] Add hint about getmempoolentry to getrawmempool help (kallewoof)</li>
    <li>#8704 <code class="language-text highlighter-rouge">96c850c</code> [RPC] Transaction details in getblock (achow101)</li>
    <li>#8952 <code class="language-text highlighter-rouge">9390845</code> Add query options to listunspent RPC call (pedrobranco)</li>
    <li>#10413 <code class="language-text highlighter-rouge">08ac35a</code> Fix docs (there’s no rpc command setpaytxfee) (RHavar)</li>
    <li>#8384 <code class="language-text highlighter-rouge">e317c0d</code> Add witness data output to TxInError messages (instagibbs)</li>
    <li>#9571 <code class="language-text highlighter-rouge">4677151</code> RPC: getblockchaininfo returns BIP signaling statistics  (pinheadmz)</li>
    <li>#10450 <code class="language-text highlighter-rouge">ef2d062</code> Fix bumpfee rpc “errors” return value (ryanofsky)</li>
    <li>#10475 <code class="language-text highlighter-rouge">39039b1</code> [RPC] getmempoolinfo mempoolminfee is a BTC/KB feerate (instagibbs)</li>
    <li>#10478 <code class="language-text highlighter-rouge">296928e</code> rpc: Add listen address to incoming connections in <code class="language-text highlighter-rouge">getpeerinfo</code> (laanwj)</li>
    <li>#10403 <code class="language-text highlighter-rouge">08d0390</code> Fix importmulti failure to return rescan errors (ryanofsky)</li>
    <li>#9740 <code class="language-text highlighter-rouge">9fec4da</code> Add friendly output to dumpwallet (aideca)</li>
    <li>#10426 <code class="language-text highlighter-rouge">16f6c98</code> Replace bytes_serialized with bogosize (sipa)</li>
    <li>#10252 <code class="language-text highlighter-rouge">980deaf</code> RPC/Mining: Restore API compatibility for prioritisetransaction (luke-jr)</li>
    <li>#9672 <code class="language-text highlighter-rouge">46311e7</code> Opt-into-RBF for RPC &amp; bitcoin-tx (luke-jr)</li>
    <li>#10481 <code class="language-text highlighter-rouge">9c248e3</code> Decodehextx scripts sanity check  (achow101)</li>
    <li>#10488 <code class="language-text highlighter-rouge">fa1f106</code> Note that the prioritizetransaction dummy value is deprecated, and has no meaning (TheBlueMatt)</li>
    <li>#9738 <code class="language-text highlighter-rouge">c94b89e</code> gettxoutproof() should return consistent result (jnewbery)</li>
    <li>#10191 <code class="language-text highlighter-rouge">00350bd</code> [trivial] Rename unused RPC arguments ‘dummy’ (jnewbery)</li>
    <li>#10627 <code class="language-text highlighter-rouge">b62b4c8</code> fixed listunspent rpc convert parameter (tnakagawa)</li>
    <li>#10412 <code class="language-text highlighter-rouge">bef02fb</code> Improve wallet rescan API (ryanofsky)</li>
    <li>#10400 <code class="language-text highlighter-rouge">1680ee0</code> [RPC] Add an uptime command that displays the amount of time (in seconds) bitcoind has been running (rvelhote)</li>
    <li>#10683 <code class="language-text highlighter-rouge">d81bec7</code> rpc: Move the <code class="language-text highlighter-rouge">generate</code> RPC call to rpcwallet (laanwj)</li>
    <li>#10710 <code class="language-text highlighter-rouge">30bc0f6</code> REST/RPC example update (Mirobit)</li>
    <li>#10747 <code class="language-text highlighter-rouge">9edda0c</code> [rpc] fix verbose argument for getblock in bitcoin-cli (jnewbery)</li>
    <li>#10589 <code class="language-text highlighter-rouge">104f5f2</code> More economical fee estimates for RBF and RPC options to control (morcos)</li>
    <li>#10543 <code class="language-text highlighter-rouge">b27b004</code> Change API to estimaterawfee (morcos)</li>
    <li>#10807 <code class="language-text highlighter-rouge">afd2fca</code> getbalance example covers at least 6 confirms (instagibbs)</li>
    <li>#10707 <code class="language-text highlighter-rouge">75b5643</code> Better API for estimatesmartfee RPC  (morcos)</li>
    <li>#10784 <code class="language-text highlighter-rouge">9e8d6a3</code> Do not allow users to get keys from keypool without reserving them (TheBlueMatt)</li>
    <li>#10857 <code class="language-text highlighter-rouge">d445a2c</code> [RPC] Add a deprecation warning to getinfo’s output (achow101)</li>
    <li>#10571 <code class="language-text highlighter-rouge">adf170d</code> [RPC]Move transaction combining from signrawtransaction to new RPC (achow101)</li>
    <li>#10783 <code class="language-text highlighter-rouge">041dad9</code> [RPC] Various rpc argument fixes (instagibbs)</li>
    <li>#9622 <code class="language-text highlighter-rouge">6ef3c7e</code> [rpc] listsinceblock should include lost transactions when parameter is a reorg’d block (kallewoof)</li>
    <li>#10799 <code class="language-text highlighter-rouge">8537187</code> Prevent user from specifying conflicting parameters to fundrawtx (TheBlueMatt)</li>
    <li>#10931 <code class="language-text highlighter-rouge">0b11a07</code> Fix misleading “Method not found” multiwallet errors (ryanofsky)</li>
    <li>#10788 <code class="language-text highlighter-rouge">f66c596</code> [RPC] Fix addwitnessaddress by replacing ismine with producesignature (achow101)</li>
    <li>#10999 <code class="language-text highlighter-rouge">627c3c0</code> Fix amounts formatting in <code class="language-text highlighter-rouge">decoderawtransaction</code> (laanwj)</li>
    <li>#11002 <code class="language-text highlighter-rouge">4268426</code> [wallet] return correct error code from resendwallettransaction (jnewbery)</li>
    <li>#11029 <code class="language-text highlighter-rouge">96a63a3</code> [RPC] trivial: gettxout no longer shows version of tx (FelixWeis)</li>
    <li>#11083 <code class="language-text highlighter-rouge">6c2b008</code> Fix combinerawtransaction RPC help result section (jonasnick)</li>
    <li>#11027 <code class="language-text highlighter-rouge">07164bb</code> [RPC] Only return hex field once in getrawtransaction (achow101)</li>
    <li>#10698 <code class="language-text highlighter-rouge">5af6572</code> Be consistent in calling transactions “replaceable” for Opt-In RBF (TheBlueMatt)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#9801 <code class="language-text highlighter-rouge">a8c5751</code> Removed redundant parameter from mempool.PrioritiseTransaction (gubatron)</li>
    <li>#9819 <code class="language-text highlighter-rouge">1efc99c</code> Remove harmless read of unusued priority estimates (morcos)</li>
    <li>#9822 <code class="language-text highlighter-rouge">b7547fa</code> Remove block file location upgrade code (benma)</li>
    <li>#9602 <code class="language-text highlighter-rouge">30ff3a2</code> Remove coin age priority and free transactions - implementation (morcos)</li>
    <li>#9548 <code class="language-text highlighter-rouge">47510ad</code> Remove min reasonable fee (morcos)</li>
    <li>#10249 <code class="language-text highlighter-rouge">c73af54</code> Switch CCoinsMap from boost to std unordered_map (sipa)</li>
    <li>#9966 <code class="language-text highlighter-rouge">2a183de</code> Control mempool persistence using a command line parameter (jnewbery)</li>
    <li>#10199 <code class="language-text highlighter-rouge">318ea50</code> Better fee estimates (morcos)</li>
    <li>#10196 <code class="language-text highlighter-rouge">bee3529</code> Bugfix: PrioritiseTransaction updates the mempool tx counter (sdaftuar)</li>
    <li>#10195 <code class="language-text highlighter-rouge">1088b02</code> Switch chainstate db and cache to per-txout model (sipa)</li>
    <li>#10284 <code class="language-text highlighter-rouge">c2ab38b</code> Always log debug information for fee calculation in CreateTransaction (morcos)</li>
    <li>#10503 <code class="language-text highlighter-rouge">efbcf2b</code> Use REJECT_DUPLICATE for already known and conflicted txn (sipa)</li>
    <li>#10537 <code class="language-text highlighter-rouge">b3eb0d6</code> Few Minor per-utxo assert-semantics re-adds and tweak (TheBlueMatt)</li>
    <li>#10626 <code class="language-text highlighter-rouge">8c841a3</code> doc: Remove outdated minrelaytxfee comment (MarcoFalke)</li>
    <li>#10559 <code class="language-text highlighter-rouge">234ffc6</code> Change semantics of HaveCoinInCache to match HaveCoin (morcos)</li>
    <li>#10581 <code class="language-text highlighter-rouge">7878353</code> Simplify return values of GetCoin/HaveCoin(InCache) (sipa)</li>
    <li>#10684 <code class="language-text highlighter-rouge">a381f6a</code> Remove no longer used mempool.exists(outpoint) (morcos)</li>
    <li>#10148 <code class="language-text highlighter-rouge">d4e551a</code> Use non-atomic flushing with block replay (sipa)</li>
    <li>#10685 <code class="language-text highlighter-rouge">30c2130</code> Clarify CCoinsViewMemPool documentation (TheBlueMatt)</li>
    <li>#10558 <code class="language-text highlighter-rouge">90a002e</code> Address nits from per-utxo change (morcos)</li>
    <li>#10706 <code class="language-text highlighter-rouge">6859ad2</code> Improve wallet fee logic and fix GUI bugs (morcos)</li>
    <li>#10526 <code class="language-text highlighter-rouge">754aa02</code> Force on-the-fly compaction during pertxout upgrade (sipa)</li>
    <li>#10985 <code class="language-text highlighter-rouge">d896d5c</code> Add undocumented -forcecompactdb to force LevelDB compactions (sipa)</li>
    <li>#10292 <code class="language-text highlighter-rouge">e4bbd3d</code> Improved efficiency in COutPoint constructors (mm-s)</li>
    <li>#10290 <code class="language-text highlighter-rouge">8d6d43e</code> Add -stopatheight for benchmarking (sipa)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#9726 <code class="language-text highlighter-rouge">7639d38</code> netbase: Do not print an error on connection timeouts through proxy (laanwj)</li>
    <li>#9805 <code class="language-text highlighter-rouge">5b583ef</code> Add seed.btc.petertodd.org to mainnet DNS seeds (petertodd)</li>
    <li>#9861 <code class="language-text highlighter-rouge">22f609f</code> Trivial: Debug log ambiguity fix for peer addrs (keystrike)</li>
    <li>#9774 <code class="language-text highlighter-rouge">90cb2a2</code> Enable host lookups for -proxy and -onion parameters (jmcorgan)</li>
    <li>#9558 <code class="language-text highlighter-rouge">7b585cf</code> Clarify assumptions made about when BlockCheck is called (TheBlueMatt)</li>
    <li>#10135 <code class="language-text highlighter-rouge">e19586a</code> [p2p] Send the correct error code in reject messages (jnewbery)</li>
    <li>#9665 <code class="language-text highlighter-rouge">eab00d9</code> Use cached [compact] blocks to respond to getdata messages (TheBlueMatt)</li>
    <li>#10215 <code class="language-text highlighter-rouge">a077a90</code> Check interruptNet during dnsseed lookups (TheBlueMatt)</li>
    <li>#10234 <code class="language-text highlighter-rouge">faf2dea</code> [net] listbanned RPC and QT should show correct banned subnets (jnewbery)</li>
    <li>#10134 <code class="language-text highlighter-rouge">314ebdf</code> [qa] Fixes segwit block relay test after inv-direct-fetch was disabled (sdaftuar)</li>
    <li>#10351 <code class="language-text highlighter-rouge">3f57c55</code> removed unused code in INV message (Greg-Griffith)</li>
    <li>#10061 <code class="language-text highlighter-rouge">ae78609</code> [net] Added SetSocketNoDelay() utility function (tjps)</li>
    <li>#10408 <code class="language-text highlighter-rouge">28c6e8d</code> Net: Improvements to Tor control port parser (str4d)</li>
    <li>#10460 <code class="language-text highlighter-rouge">5c63d66</code> Broadcast address every day, not 9 hours (sipa)</li>
    <li>#10471 <code class="language-text highlighter-rouge">400fdd0</code> Denote functions CNode::GetRecvVersion() and CNode::GetRefCount()  as const (pavlosantoniou)</li>
    <li>#10345 <code class="language-text highlighter-rouge">67700b3</code> [P2P] Timeout for headers sync (sdaftuar)</li>
    <li>#10564 <code class="language-text highlighter-rouge">8d9f45e</code> Return early in IsBanned (gmaxwell)</li>
    <li>#10587 <code class="language-text highlighter-rouge">de8db47</code> Net: Fix resource leak in ReadBinaryFile(…) (practicalswift)</li>
    <li>#9549 <code class="language-text highlighter-rouge">b33ca14</code> [net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(…) (practicalswift)</li>
    <li>#10446 <code class="language-text highlighter-rouge">2772dc9</code> net: avoid extra dns query per seed (theuni)</li>
    <li>#10824 <code class="language-text highlighter-rouge">9dd6a2b</code> Avoid unnecessary work in SetNetworkActive (promag)</li>
    <li>#10948 <code class="language-text highlighter-rouge">df3a6f4</code> p2p: Hardcoded seeds update pre-0.15 branch (laanwj)</li>
    <li>#10977 <code class="language-text highlighter-rouge">02f4c4a</code> [net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest&amp;) (practicalswift)</li>
    <li>#10982 <code class="language-text highlighter-rouge">c8b62c7</code> Disconnect network service bits 6 and 8 until Aug 1, 2018 (TheBlueMatt)</li>
    <li>#11012 <code class="language-text highlighter-rouge">0e5cff6</code> Make sure to clean up mapBlockSource if we’ve already seen the block (theuni)</li>
  </ul>

  <h3 id="validation">Validation</h3>
  <ul>
    <li>#9725 <code class="language-text highlighter-rouge">67023e9</code> CValidationInterface Cleanups (TheBlueMatt)</li>
    <li>#10178 <code class="language-text highlighter-rouge">2584925</code> Remove CValidationInterface::UpdatedTransaction (TheBlueMatt)</li>
    <li>#10201 <code class="language-text highlighter-rouge">a6548a4</code> pass Consensus::Params&amp; to functions in validation.cpp and make them static (mariodian)</li>
    <li>#10297 <code class="language-text highlighter-rouge">431a548</code> Simplify DisconnectBlock arguments/return value (sipa)</li>
    <li>#10464 <code class="language-text highlighter-rouge">f94b7d5</code> Introduce static DoWarning (simplify UpdateTip) (jtimon)</li>
    <li>#10569 <code class="language-text highlighter-rouge">2e7d8f8</code> Fix stopatheight (achow101)</li>
    <li>#10192 <code class="language-text highlighter-rouge">2935b46</code> Cache full script execution results in addition to signatures (TheBlueMatt)</li>
    <li>#10179 <code class="language-text highlighter-rouge">21ed30a</code> Give CValidationInterface Support for calling notifications on the CScheduler Thread (TheBlueMatt)</li>
    <li>#10557 <code class="language-text highlighter-rouge">66270a4</code> Make check to distinguish between orphan txs and old txs more efficient (morcos)</li>
    <li>#10775 <code class="language-text highlighter-rouge">7c2400c</code> nCheckDepth chain height fix (romanornr)</li>
    <li>#10821 <code class="language-text highlighter-rouge">16240f4</code> Add SSE4 optimized SHA256 (sipa)</li>
    <li>#10854 <code class="language-text highlighter-rouge">04d395e</code> Avoid using sizes on non-fixed-width types to derive protocol constants (gmaxwell)</li>
    <li>#10945 <code class="language-text highlighter-rouge">2a50b11</code> Update defaultAssumeValid according to release-process.md (gmaxwell)</li>
    <li>#10986 <code class="language-text highlighter-rouge">2361208</code> Update chain transaction statistics (sipa)</li>
    <li>#11028 <code class="language-text highlighter-rouge">6bdf4b3</code> Avoid masking of difficulty adjustment errors by checkpoints (sipa)</li>
    <li>#9533 <code class="language-text highlighter-rouge">cb598cf</code> Allow non-power-of-2 signature cache sizes (sipa)</li>
    <li>#9208 <code class="language-text highlighter-rouge">acd9957</code> Improve DisconnectTip performance (sdaftuar)</li>
    <li>#10618 <code class="language-text highlighter-rouge">f90603a</code> Remove confusing MAX_BLOCK_BASE_SIZE (gmaxwell)</li>
    <li>#10758 <code class="language-text highlighter-rouge">bd92424</code> Fix some chainstate-init-order bugs (TheBlueMatt)</li>
    <li>#10550 <code class="language-text highlighter-rouge">b7296bc</code> Don’t return stale data from CCoinsViewCache::Cursor() (ryanofsky)</li>
    <li>#10998 <code class="language-text highlighter-rouge">2507fd5</code> Fix upgrade cancel warnings (TheBlueMatt)</li>
    <li>#9868 <code class="language-text highlighter-rouge">cbdb473</code> Abstract out the command line options for block assembly (sipa)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#9727 <code class="language-text highlighter-rouge">5f0556d</code> Remove fallbacks for boost_filesystem &lt; v3 (laanwj)</li>
    <li>#9788 <code class="language-text highlighter-rouge">50a2265</code> gitian: bump descriptors for master (theuni)</li>
    <li>#9794 <code class="language-text highlighter-rouge">7ca2f54</code> Minor update to qrencode package builder (mitchellcash)</li>
    <li>#9514 <code class="language-text highlighter-rouge">2cc0df1</code> release: Windows signing script (theuni)</li>
    <li>#9921 <code class="language-text highlighter-rouge">8b789d8</code> build: Probe MSG_DONTWAIT in the same way as MSG_NOSIGNAL (laanwj)</li>
    <li>#10011 <code class="language-text highlighter-rouge">32d1b34</code> build: Fix typo s/HAVE_DONTWAIT/HAVE_MSG_DONTWAIT (laanwj)</li>
    <li>#9946 <code class="language-text highlighter-rouge">90dd9e6</code> Fix build errors if spaces in path or parent directory (pinheadmz)</li>
    <li>#10136 <code class="language-text highlighter-rouge">81da4c7</code> build: Disable Wshadow warning (laanwj)</li>
    <li>#10166 <code class="language-text highlighter-rouge">64962ae</code> Ignore Doxyfile generated from Doxyfile.in template (paveljanik)</li>
    <li>#10239 <code class="language-text highlighter-rouge">0416ea9</code> Make Boost use std::atomic internally (sipa)</li>
    <li>#10228 <code class="language-text highlighter-rouge">27faa6c</code> build: regenerate bitcoin-config.h as necessary (theuni)</li>
    <li>#10273 <code class="language-text highlighter-rouge">8979f45</code> [scripts] Minor improvements to <code class="language-text highlighter-rouge">macdeployqtplus</code> script (chrisgavin)</li>
    <li>#10325 <code class="language-text highlighter-rouge">a26280b</code> 0.15.0 Depends Updates (fanquake)</li>
    <li>#10328 <code class="language-text highlighter-rouge">79aeff6</code> Update contrib/debian to latest Ubuntu PPA upload (TheBlueMatt)</li>
    <li>#7522 <code class="language-text highlighter-rouge">d25449f</code> Bugfix: Only use git for build info if the repository is actually the right one (luke-jr)</li>
    <li>#10489 <code class="language-text highlighter-rouge">e654d61</code> build: silence gcc7’s implicit fallthrough warning (theuni)</li>
    <li>#10549 <code class="language-text highlighter-rouge">ad1a13e</code> Avoid printing generic and duplicated “checking for QT” during ./configure (drizzt)</li>
    <li>#10628 <code class="language-text highlighter-rouge">8465b68</code> [depends] expat 2.2.1 (fanquake)</li>
    <li>#10806 <code class="language-text highlighter-rouge">db825d2</code> build: verify that the assembler can handle crc32 functions (theuni)</li>
    <li>#10766 <code class="language-text highlighter-rouge">b4d03be</code> Building Environment: Set ARFLAGS to cr (ReneNyffenegger)</li>
    <li>#10803 <code class="language-text highlighter-rouge">91edda8</code> Explicitly search for bdb5.3 (pstratem)</li>
    <li>#10855 <code class="language-text highlighter-rouge">81560b0</code> random: only use getentropy on openbsd (theuni)</li>
    <li>#10508 <code class="language-text highlighter-rouge">1caafa6</code> Run Qt wallet tests on travis (ryanofsky)</li>
    <li>#10851 <code class="language-text highlighter-rouge">e222618</code> depends: fix fontconfig with newer glibc (theuni)</li>
    <li>#10971 <code class="language-text highlighter-rouge">88b1e4b</code> build: fix missing sse42 in depends builds (theuni)</li>
    <li>#11097 <code class="language-text highlighter-rouge">129b03f</code> gitian: quick hack to fix version string in releases (theuni)</li>
    <li>#10039 <code class="language-text highlighter-rouge">919aaf6</code> Fix compile errors with Qt 5.3.2 and Boost 1.55.0 (ryanofsky)</li>
    <li>#10168 <code class="language-text highlighter-rouge">7032021</code> Fix build warning from #error text (jnewbery)</li>
    <li>#10301 <code class="language-text highlighter-rouge">318392c</code> Check if sys/random.h is required for getentropy (jameshilliard)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#9724 <code class="language-text highlighter-rouge">1a9fd5c</code> Qt/Intro: Add explanation of IBD process (luke-jr)</li>
    <li>#9834 <code class="language-text highlighter-rouge">b00ba62</code> qt: clean up initialize/shutdown signals (benma)</li>
    <li>#9481 <code class="language-text highlighter-rouge">ce01e62</code> [Qt] Show more significant warning if we fall back to the default fee (jonasschnelli)</li>
    <li>#9974 <code class="language-text highlighter-rouge">b9f930b</code> Add basic Qt wallet test (ryanofsky)</li>
    <li>#9690 <code class="language-text highlighter-rouge">a387d3a</code> Change ‘Clear’ button string to ‘Reset’ (da2x)</li>
    <li>#9592 <code class="language-text highlighter-rouge">9c7b7cf</code> [Qt] Add checkbox in the GUI to opt-in to RBF when creating a transaction (ryanofsky)</li>
    <li>#10098 <code class="language-text highlighter-rouge">2b477e6</code> Make qt wallet test compatible with qt4 (ryanofsky)</li>
    <li>#9890 <code class="language-text highlighter-rouge">1fa4ae6</code> Add a button to open the config file in a text editor (ericshawlinux)</li>
    <li>#10156 <code class="language-text highlighter-rouge">51833a1</code> Fix for issues with startup and multiple monitors on windows (AllanDoensen)</li>
    <li>#10177 <code class="language-text highlighter-rouge">de01da7</code> Changed “Send” button default status from true to false (KibbledJiveElkZoo)</li>
    <li>#10221 <code class="language-text highlighter-rouge">e96486c</code> Stop treating coinbase outputs differently in GUI: show them at 1conf (TheBlueMatt)</li>
    <li>#10231 <code class="language-text highlighter-rouge">987a6c0</code> [Qt] Reduce a significant cs_main lock freeze (jonasschnelli)</li>
    <li>#10242 <code class="language-text highlighter-rouge">f6f3b58</code> [qt] Don’t call method on null WalletModel object (ryanofsky)</li>
    <li>#10093 <code class="language-text highlighter-rouge">a3e756b</code> [Qt] Don’t add arguments of sensitive command to console window (jonasschnelli)</li>
    <li>#10362 <code class="language-text highlighter-rouge">95546c8</code> [GUI] Add OSX keystroke to RPCConsole info (spencerlievens)</li>
    <li>#9697 <code class="language-text highlighter-rouge">962cd3f</code> [Qt] simple fee bumper with user verification (jonasschnelli)</li>
    <li>#10390 <code class="language-text highlighter-rouge">e477516</code> [wallet] remove minimum total fee option (instagibbs)</li>
    <li>#10420 <code class="language-text highlighter-rouge">4314544</code> Add Qt tests for wallet spends &amp; bumpfee (ryanofsky)</li>
    <li>#10454 <code class="language-text highlighter-rouge">c1c9a95</code> Fix broken q4 test build (ryanofsky)</li>
    <li>#10449 <code class="language-text highlighter-rouge">64beb13</code> Overhaul Qt fee bumper (jonasschnelli)</li>
    <li>#10582 <code class="language-text highlighter-rouge">7c72fb9</code> Pass in smart fee slider value to coin control dialog (morcos)</li>
    <li>#10673 <code class="language-text highlighter-rouge">4c72cc3</code> [qt] Avoid potential null pointer dereference in TransactionView::exportClicked() (practicalswift)</li>
    <li>#10769 <code class="language-text highlighter-rouge">8fdd23a</code> [Qt] replace fee slider with a Dropdown, extend conf. targets (jonasschnelli)</li>
    <li>#10870 <code class="language-text highlighter-rouge">412b466</code> [Qt] Use wallet 0 in rpc console if running with multiple wallets (jonasschnelli)</li>
    <li>#10988 <code class="language-text highlighter-rouge">a9dd111</code> qt: Increase BLOCK_CHAIN_SIZE constants (laanwj)</li>
    <li>#10644 <code class="language-text highlighter-rouge">e292140</code> Slightly overhaul NSI pixmaps (jonasschnelli)</li>
    <li>#10660 <code class="language-text highlighter-rouge">0c3542e</code> Allow to cancel the txdb upgrade via splashscreen keypress ‘q’ (jonasschnelli)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#9359 <code class="language-text highlighter-rouge">f7ec7cf</code> Add test for CWalletTx::GetImmatureCredit() returning stale values (ryanofsky)</li>
    <li>#9576 <code class="language-text highlighter-rouge">56ab672</code> [wallet] Remove redundant initialization (practicalswift)</li>
    <li>#9333 <code class="language-text highlighter-rouge">fa625b0</code> Document CWalletTx::mapValue entries and remove erase of nonexistent “version” entry (ryanofsky)</li>
    <li>#9906 <code class="language-text highlighter-rouge">72fb515</code> Disallow copy constructor CReserveKeys (instagibbs)</li>
    <li>#9369 <code class="language-text highlighter-rouge">3178b2c</code> Factor out CWallet::nTimeSmart computation into a method (ryanofsky)</li>
    <li>#9830 <code class="language-text highlighter-rouge">afcd7c0</code> Add safe flag to listunspent result (NicolasDorier)</li>
    <li>#9993 <code class="language-text highlighter-rouge">c49355c</code> Initialize nRelockTime (pstratem)</li>
    <li>#9818 <code class="language-text highlighter-rouge">3d857f3</code> Save watch only key timestamps when reimporting keys (ryanofsky)</li>
    <li>#9294 <code class="language-text highlighter-rouge">f34cdcb</code> Use internal HD chain for change outputs (hd split) (jonasschnelli)</li>
    <li>#10164 <code class="language-text highlighter-rouge">e183ea2</code> Wallet: reduce excess logic InMempool() (kewde)</li>
    <li>#10186 <code class="language-text highlighter-rouge">c9ff4f8</code> Remove SYNC_TRANSACTION_NOT_IN_BLOCK magic number (jnewbery)</li>
    <li>#10226 <code class="language-text highlighter-rouge">64c45aa</code> wallet: Use boost to more portably ensure -wallet specifies only a filename (luke-jr)</li>
    <li>#9827 <code class="language-text highlighter-rouge">c91ca0a</code> Improve ScanForWalletTransactions return value (ryanofsky)</li>
    <li>#9951 <code class="language-text highlighter-rouge">fa1ac28</code> Wallet database handling abstractions/simplifications (laanwj)</li>
    <li>#10265 <code class="language-text highlighter-rouge">c29a0d4</code> [wallet/moveonly] Check non-null pindex before potentially referencing (kallewoof)</li>
    <li>#10283 <code class="language-text highlighter-rouge">a550f6e</code> Cleanup: reduce to one GetMinimumFee call signature (morcos)</li>
    <li>#10294 <code class="language-text highlighter-rouge">e2b99b1</code> [Wallet] unset change position when there is no change (instagibbs)</li>
    <li>#10115 <code class="language-text highlighter-rouge">d3dce0e</code> Avoid reading the old hd master key during wallet encryption (TheBlueMatt)</li>
    <li>#10341 <code class="language-text highlighter-rouge">18c9deb</code> rpc/wallet: Workaround older UniValue which returns a std::string temporary for get_str (luke-jr)</li>
    <li>#10308 <code class="language-text highlighter-rouge">94e5227</code> [wallet] Securely erase potentially sensitive keys/values (tjps)</li>
    <li>#10257 <code class="language-text highlighter-rouge">ea1fd43</code> [test] Add test for getmemoryinfo (jimmysong)</li>
    <li>#10295 <code class="language-text highlighter-rouge">ce8176d</code> [qt] Move some WalletModel functions into CWallet (ryanofsky)</li>
    <li>#10506 <code class="language-text highlighter-rouge">7cc2c67</code> Fix bumpfee test after #10449 (ryanofsky)</li>
    <li>#10500 <code class="language-text highlighter-rouge">098b01d</code> Avoid CWalletTx copies in GetAddressBalances and GetAddressGroupings (ryanofsky)</li>
    <li>#10455 <code class="language-text highlighter-rouge">0747d33</code> Simplify feebumper minimum fee code slightly (ryanofsky)</li>
    <li>#10522 <code class="language-text highlighter-rouge">2805d60</code> [wallet] Remove unused variables (practicalswift)</li>
    <li>#8694 <code class="language-text highlighter-rouge">177433a</code> Basic multiwallet support (luke-jr)</li>
    <li>#10598 <code class="language-text highlighter-rouge">7a74f88</code> Supress struct/class mismatch warnings introduced in #10284 (paveljanik)</li>
    <li>#9343 <code class="language-text highlighter-rouge">209eef6</code> Don’t create change at dust limit (morcos)</li>
    <li>#10744 <code class="language-text highlighter-rouge">ed88e31</code> Use method name via <strong>func</strong> macro (darksh1ne)</li>
    <li>#10712 <code class="language-text highlighter-rouge">e8b9523</code> Add change output if necessary to reduce excess fee (morcos)</li>
    <li>#10816 <code class="language-text highlighter-rouge">1c011ff</code> Properly forbid -salvagewallet and -zapwallettxes for multi wallet (morcos)</li>
    <li>#10235 <code class="language-text highlighter-rouge">5cfdda2</code> Track keypool entries as internal vs external in memory (TheBlueMatt)</li>
    <li>#10330 <code class="language-text highlighter-rouge">bf0a08b</code> [wallet] fix zapwallettxes interaction with persistent mempool (jnewbery)</li>
    <li>#10831 <code class="language-text highlighter-rouge">0b01935</code> Batch flushing operations to the walletdb during top up and increase keypool size (gmaxwell)</li>
    <li>#10795 <code class="language-text highlighter-rouge">7b6e8bc</code> No longer ever reuse keypool indexes (TheBlueMatt)</li>
    <li>#10849 <code class="language-text highlighter-rouge">bde4f93</code> Multiwallet: simplest endpoint support (jonasschnelli)</li>
    <li>#10817 <code class="language-text highlighter-rouge">9022aa3</code> Redefine Dust and add a discard_rate (morcos)</li>
    <li>#10883 <code class="language-text highlighter-rouge">bf3b742</code> Rename -usewallet to -rpcwallet (morcos)</li>
    <li>#10604 <code class="language-text highlighter-rouge">420238d</code> [wallet/tests] Add listwallets RPC, include wallet name in <code class="language-text highlighter-rouge">getwalletinfo</code> and add multiwallet test (jnewbery)</li>
    <li>#10885 <code class="language-text highlighter-rouge">70888a3</code> Reject invalid wallets (promag)</li>
    <li>#10949 <code class="language-text highlighter-rouge">af56397</code> Clarify help message for -discardfee (morcos)</li>
    <li>#10942 <code class="language-text highlighter-rouge">2e857bb</code> Eliminate fee overpaying edge case when subtracting fee from recipients (morcos)</li>
    <li>#10995 <code class="language-text highlighter-rouge">fa64636</code> Fix resendwallettransactions assert failure if -walletbroadcast=0 (TheBlueMatt)</li>
    <li>#11022 <code class="language-text highlighter-rouge">653a46d</code> Basic keypool topup (jnewbery)</li>
    <li>#11081 <code class="language-text highlighter-rouge">9fe1f6b</code> Add length check for CExtKey deserialization (jonasschnelli, guidovranken)</li>
    <li>#11044 <code class="language-text highlighter-rouge">4ef8374</code> [wallet] Keypool topup cleanups (jnewbery)</li>
    <li>#11145 <code class="language-text highlighter-rouge">e51bb71</code> Fix rounding bug in calculation of minimum change (morcos)</li>
    <li>#9605 <code class="language-text highlighter-rouge">779f2f9</code> Use CScheduler for wallet flushing, remove ThreadFlushWalletDB (TheBlueMatt)</li>
    <li>#10108 <code class="language-text highlighter-rouge">4e3efd4</code> ApproximateBestSubset should take inputs by reference, not value (RHavar)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#9744 <code class="language-text highlighter-rouge">8efd1c8</code> Remove unused module from rpc-tests (34ro)</li>
    <li>#9657 <code class="language-text highlighter-rouge">7ff4a53</code> Improve rpc-tests.py (jnewbery)</li>
    <li>#9766 <code class="language-text highlighter-rouge">7146d96</code> Add –exclude option to rpc-tests.py (jnewbery)</li>
    <li>#9577 <code class="language-text highlighter-rouge">d6064a8</code> Fix docstrings in qa tests (jnewbery)</li>
    <li>#9823 <code class="language-text highlighter-rouge">a13a417</code> qa: Set correct path for binaries in rpc tests (MarcoFalke)</li>
    <li>#9847 <code class="language-text highlighter-rouge">6206252</code> Extra test vector for BIP32 (sipa)</li>
    <li>#9350 <code class="language-text highlighter-rouge">88c2ae3</code> [Trivial] Adding label for amount inside of tx_valid/tx_invalid.json (Christewart)</li>
    <li>#9888 <code class="language-text highlighter-rouge">36afd4d</code> travis: Verify commits only for one target (MarcoFalke)</li>
    <li>#9904 <code class="language-text highlighter-rouge">58861ad</code> test: Fail if InitBlockIndex fails (laanwj)</li>
    <li>#9828 <code class="language-text highlighter-rouge">67c5cc1</code> Avoid -Wshadow warnings in wallet_tests (ryanofsky)</li>
    <li>#9832 <code class="language-text highlighter-rouge">48c3429</code> [qa] assert_start_raises_init_error (NicolasDorier)</li>
    <li>#9739 <code class="language-text highlighter-rouge">9d5fcbf</code> Fix BIP68 activation test (jnewbery)</li>
    <li>#9547 <code class="language-text highlighter-rouge">d32581c</code> bench: Assert that division by zero is unreachable (practicalswift)</li>
    <li>#9843 <code class="language-text highlighter-rouge">c78adbf</code> Fix segwit getblocktemplate test (jnewbery)</li>
    <li>#9929 <code class="language-text highlighter-rouge">d5ce14e</code> tests: Delete unused function _rpchost_to_args (laanwj)</li>
    <li>#9555 <code class="language-text highlighter-rouge">19be26a</code> [test] Avoid reading a potentially uninitialized variable in tx_invalid-test (transaction_tests.cpp) (practicalswift)</li>
    <li>#9945 <code class="language-text highlighter-rouge">ac23a7c</code> Improve logging in bctest.py if there is a formatting mismatch (jnewbery)</li>
    <li>#9768 <code class="language-text highlighter-rouge">8910b47</code> [qa] Add logging to test_framework.py (jnewbery)</li>
    <li>#9972 <code class="language-text highlighter-rouge">21833f9</code> Fix extended rpc tests broken by #9768 (jnewbery)</li>
    <li>#9977 <code class="language-text highlighter-rouge">857d1e1</code> QA: getblocktemplate_longpoll.py should always use &gt;0 fee tx (sdaftuar)</li>
    <li>#9970 <code class="language-text highlighter-rouge">3cc13ea</code> Improve readability of segwit.py, smartfees.py (sdaftuar)</li>
    <li>#9497 <code class="language-text highlighter-rouge">2c781fb</code> CCheckQueue Unit Tests (JeremyRubin)</li>
    <li>#10024 <code class="language-text highlighter-rouge">9225de2</code> [trivial] Use log.info() instead of print() in remaining functional test cases (jnewbery)</li>
    <li>#9956 <code class="language-text highlighter-rouge">3192e52</code> Reorganise qa directory (jnewbery)</li>
    <li>#10017 <code class="language-text highlighter-rouge">02d64bd</code> combine_logs.py - aggregates log files from multiple bitcoinds during functional tests (jnewbery)</li>
    <li>#10047 <code class="language-text highlighter-rouge">dfef6b6</code> [tests] Remove unused variables and imports (practicalswift)</li>
    <li>#9701 <code class="language-text highlighter-rouge">a230b05</code> Make bumpfee tests less fragile (ryanofsky)</li>
    <li>#10053 <code class="language-text highlighter-rouge">ca20923</code> [test] Allow functional test cases to be skipped (jnewbery)</li>
    <li>#10052 <code class="language-text highlighter-rouge">a0b1e57</code> [test] Run extended tests once daily in Travis (jnewbery)</li>
    <li>#10069 <code class="language-text highlighter-rouge">1118493</code> [QA] Fix typo in fundrawtransaction test (NicolasDorier)</li>
    <li>#10083 <code class="language-text highlighter-rouge">c044f03</code> [QA] Renaming rawTx into rawtx (NicolasDorier)</li>
    <li>#10073 <code class="language-text highlighter-rouge">b1a4f27</code> Actually run assumevalid.py (jnewbery)</li>
    <li>#9780 <code class="language-text highlighter-rouge">c412fd8</code> Suppress noisy output from qa tests in Travis (jnewbery)</li>
    <li>#10096 <code class="language-text highlighter-rouge">79af9fb</code> Check that all test scripts in test/functional are being run (jnewbery)</li>
    <li>#10076 <code class="language-text highlighter-rouge">5b029aa</code> [qa] combine_logs: Use ordered list for logfiles (MarcoFalke)</li>
    <li>#10107 <code class="language-text highlighter-rouge">f2734c2</code> Remove unused variable. Remove accidental trailing semicolons in Python code (practicalswift)</li>
    <li>#10109 <code class="language-text highlighter-rouge">8ac8041</code> Remove SingleNodeConnCB (jnewbery)</li>
    <li>#10114 <code class="language-text highlighter-rouge">edc62c9</code> [tests] sync_with_ping should assert that ping hasn’t timed out (jnewbery)</li>
    <li>#10128 <code class="language-text highlighter-rouge">427d2fd</code> Speed Up CuckooCache tests (JeremyRubin)</li>
    <li>#10072 <code class="language-text highlighter-rouge">12af74b</code> Remove sources of unreliablility in extended functional tests (jnewbery)</li>
    <li>#10077 <code class="language-text highlighter-rouge">ebfd653</code> [qa] Add setnetworkactive smoke test (MarcoFalke)</li>
    <li>#10152 <code class="language-text highlighter-rouge">080d7c7</code> [trivial] remove unused line in Travis config (jnewbery)</li>
    <li>#10159 <code class="language-text highlighter-rouge">df1ca9e</code> [tests] color test results and sort alphabetically (jnewbery)</li>
    <li>#10124 <code class="language-text highlighter-rouge">88799ea</code> [test] Suppress test logging spam (jnewbery)</li>
    <li>#10142 <code class="language-text highlighter-rouge">ed09dd3</code> Run bitcoin_test-qt under minimal QPA platform (ryanofsky)</li>
    <li>#9949 <code class="language-text highlighter-rouge">a27dbc5</code> [bench] Avoid function call arguments which are pointers to uninitialized values (practicalswift)</li>
    <li>#10187 <code class="language-text highlighter-rouge">b44adf9</code> tests: Fix test_runner return value in case of skipped test (laanwj)</li>
    <li>#10197 <code class="language-text highlighter-rouge">d86bb07</code> [tests] Functional test warnings (jnewbery)</li>
    <li>#10219 <code class="language-text highlighter-rouge">9111df9</code> Tests: Order Python Tests Differently (jimmysong)</li>
    <li>#10229 <code class="language-text highlighter-rouge">f3db4c6</code> Tests: Add test for getdifficulty (jimmysong)</li>
    <li>#10224 <code class="language-text highlighter-rouge">2723bcd</code> [test] Add test for getaddednodeinfo (jimmysong)</li>
    <li>#10023 <code class="language-text highlighter-rouge">c530c15</code> [tests] remove maxblocksinflight.py (functionality covered by other test) (jnewbery)</li>
    <li>#10097 <code class="language-text highlighter-rouge">1b25b6d</code> Move zmq test skipping logic into individual test case (jnewbery)</li>
    <li>#10272 <code class="language-text highlighter-rouge">54e2d87</code> [Tests] Prevent warning: variable ‘x’ is uninitialized (paveljanik)</li>
    <li>#10225 <code class="language-text highlighter-rouge">e0a7e19</code> [test] Add aborttrescan tests (kallewoof)</li>
    <li>#10278 <code class="language-text highlighter-rouge">8254a8a</code> [test] Add Unit Test for GetListenPort (jimmysong)</li>
    <li>#10280 <code class="language-text highlighter-rouge">47535d7</code> [test] Unit test amount.h/amount.cpp (jimmysong)</li>
    <li>#10256 <code class="language-text highlighter-rouge">80c3a73</code> [test] Add test for gettxout to wallet.py (jimmysong)</li>
    <li>#10264 <code class="language-text highlighter-rouge">492d22f</code> [test] Add tests for getconnectioncount, getnettotals and ping (jimmysong)</li>
    <li>#10169 <code class="language-text highlighter-rouge">8f3e384</code> [tests] Remove func test code duplication (jnewbery)</li>
    <li>#10198 <code class="language-text highlighter-rouge">dc8fc0c</code> [tests] Remove is_network_split from functional test framework (jnewbery)</li>
    <li>#10255 <code class="language-text highlighter-rouge">3c5e6c9</code> [test] Add test for listaddressgroupings (jimmysong)</li>
    <li>#10137 <code class="language-text highlighter-rouge">75171f0</code> Remove unused import. Remove accidental trailing semicolons (practicalswift)</li>
    <li>#10307 <code class="language-text highlighter-rouge">83073de</code> [tests] allow zmq test to be run in out-of-tree builds (jnewbery)</li>
    <li>#10344 <code class="language-text highlighter-rouge">e927483</code> [tests] Fix abandonconflict.py intermittency (jnewbery)</li>
    <li>#10318 <code class="language-text highlighter-rouge">170bc2c</code> [tests] fix wait_for_inv() (jnewbery)</li>
    <li>#10171 <code class="language-text highlighter-rouge">fff72de</code> [tests] Add node methods to test framework (jnewbery)</li>
    <li>#10352 <code class="language-text highlighter-rouge">23d78c4</code> test: Add elapsed time to RPC tracing (laanwj)</li>
    <li>#10342 <code class="language-text highlighter-rouge">6a796b2</code> [tests] Improve mempool_persist test (jnewbery)</li>
    <li>#10287 <code class="language-text highlighter-rouge">776ba23</code> [tests] Update Unit Test for addrman.h/addrman.cpp (jimmysong)</li>
    <li>#10365 <code class="language-text highlighter-rouge">7ee5236</code> [tests] increase timeouts in sendheaders test (jnewbery)</li>
    <li>#10361 <code class="language-text highlighter-rouge">f6241b3</code> qa: disablewallet: Check that wallet is really disabled (MarcoFalke)</li>
    <li>#10371 <code class="language-text highlighter-rouge">4b766fc</code> [tests] Clean up addrman_tests.cpp (jimmysong)</li>
    <li>#10253 <code class="language-text highlighter-rouge">87abe20</code> [test] Add test for getnetworkhashps (jimmysong)</li>
    <li>#10376 <code class="language-text highlighter-rouge">8bd16ee</code> [tests] fix disconnect_ban intermittency (jnewbery)</li>
    <li>#10374 <code class="language-text highlighter-rouge">5411997</code> qa: Warn when specified test is not found (MarcoFalke)</li>
    <li>#10405 <code class="language-text highlighter-rouge">0542978</code> tests: Correct testcase in script_tests.json for large number OP_EQUAL (laanwj)</li>
    <li>#10429 <code class="language-text highlighter-rouge">6b99daf</code> tests: fix spurious addrman test failure (theuni)</li>
    <li>#10433 <code class="language-text highlighter-rouge">8e57256</code> [tests] improve tmpdir structure (jnewbery)</li>
    <li>#10415 <code class="language-text highlighter-rouge">217b416</code> [tests] Speed up fuzzing by ~200x when using afl-fuzz (practicalswift)</li>
    <li>#10445 <code class="language-text highlighter-rouge">b4b057a</code> Add test for empty chain and reorg consistency for gettxoutsetinfo (gmaxwell)</li>
    <li>#10423 <code class="language-text highlighter-rouge">1aefc94</code> [tests] skipped tests should clean up after themselves (jnewbery)</li>
    <li>#10359 <code class="language-text highlighter-rouge">329fc1d</code> [tests] functional tests should call BitcoinTestFramework start/stop node methods (jnewbery)</li>
    <li>#10514 <code class="language-text highlighter-rouge">e103b3f</code> Bugfix: missing == 0 after randrange (sipa)</li>
    <li>#10515 <code class="language-text highlighter-rouge">c871f32</code> [test] Add test for getchaintxstats (jimmysong)</li>
    <li>#10509 <code class="language-text highlighter-rouge">bea5b00</code> Remove xvfb configuration from travis (ryanofsky)</li>
    <li>#10535 <code class="language-text highlighter-rouge">30853e1</code> [qa] fundrawtx: Fix shutdown race (MarcoFalke)</li>
    <li>#9909 <code class="language-text highlighter-rouge">300f8e7</code> tests: Add FindEarliestAtLeast test for edge cases (ryanofsky)</li>
    <li>#10331 <code class="language-text highlighter-rouge">75e898c</code> Share config between util and functional tests (jnewbery)</li>
    <li>#10321 <code class="language-text highlighter-rouge">e801084</code> Use FastRandomContext for all tests (sipa)</li>
    <li>#10524 <code class="language-text highlighter-rouge">6c2d81f</code> [tests] Remove printf(…) (practicalswift)</li>
    <li>#10547 <code class="language-text highlighter-rouge">71ab6e5</code> [tests] Use FastRandomContext instead of boost::random::{mt19937,uniform_int_distribution} (practicalswift)</li>
    <li>#10551 <code class="language-text highlighter-rouge">6702617</code> [Tests] Wallet encryption functional tests (achow101)</li>
    <li>#10555 <code class="language-text highlighter-rouge">643fa0b</code> [tests] various improvements to zmq_test.py (jnewbery)</li>
    <li>#10533 <code class="language-text highlighter-rouge">d083bd9</code> [tests] Use cookie auth instead of rpcuser and rpcpassword (achow101)</li>
    <li>#10632 <code class="language-text highlighter-rouge">c68a9a6</code> qa: Add stopatheight test (MarcoFalke)</li>
    <li>#10636 <code class="language-text highlighter-rouge">4bc853b</code> [qa] util: Check return code after closing bitcoind proc (MarcoFalke)</li>
    <li>#10662 <code class="language-text highlighter-rouge">e0a7801</code> Initialize randomness in benchmarks (achow101)</li>
    <li>#10612 <code class="language-text highlighter-rouge">7c87a9c</code> The young person’s guide to the test_framework (jnewbery)</li>
    <li>#10659 <code class="language-text highlighter-rouge">acb1153</code> [qa] blockchain: Pass on closed connection during generate call (MarcoFalke)</li>
    <li>#10690 <code class="language-text highlighter-rouge">416af3e</code> [qa] Bugfix: allow overriding extra_args in ComparisonTestFramework (sdaftuar)</li>
    <li>#10556 <code class="language-text highlighter-rouge">65cc7aa</code> Move stop/start functions from utils.py into BitcoinTestFramework (jnewbery)</li>
    <li>#10704 <code class="language-text highlighter-rouge">dd07f47</code> [tests] nits in dbcrash.py (jnewbery)</li>
    <li>#10743 <code class="language-text highlighter-rouge">be82498</code> [test] don’t run dbcrash.py on Travis (jnewbery)</li>
    <li>#10761 <code class="language-text highlighter-rouge">d3b5870</code> [tests] fix replace_by_fee.py (jnewbery)</li>
    <li>#10759 <code class="language-text highlighter-rouge">1d4805c</code> Fix multi_rpc test for hosts that dont default to utf8 (TheBlueMatt)</li>
    <li>#10190 <code class="language-text highlighter-rouge">e4f226a</code> [tests] mining functional tests (including regression test for submitblock) (jnewbery)</li>
    <li>#10739 <code class="language-text highlighter-rouge">1fc783f</code> test: Move variable <code class="language-text highlighter-rouge">state</code> down where it is used (paveljanik)</li>
    <li>#9980 <code class="language-text highlighter-rouge">fee0d80</code> Fix mem access violation merkleblock (Christewart)</li>
    <li>#10893 <code class="language-text highlighter-rouge">0c173a1</code> [QA] Avoid running multiwallet.py twice (jonasschnelli)</li>
    <li>#10927 <code class="language-text highlighter-rouge">9d5e8f9</code> test: Make sure wallet.backup is created in temp path (laanwj)</li>
    <li>#10899 <code class="language-text highlighter-rouge">f29d5db</code> [test] Qt: Use _putenv_s instead of setenv on Windows builds (brianmcmichael)</li>
    <li>#10912 <code class="language-text highlighter-rouge">5c8eb79</code> [tests] Fix incorrect memory_cleanse(…) call in crypto_tests.cpp (practicalswift)</li>
    <li>#11001 <code class="language-text highlighter-rouge">fa8a063</code> [tests] Test disconnecting unsupported service bits logic (jnewbery)</li>
    <li>#10695 <code class="language-text highlighter-rouge">929fd72</code> [qa] Rewrite BIP65/BIP66 functional tests (sdaftuar)</li>
    <li>#10963 <code class="language-text highlighter-rouge">ecd2135</code> [bench] Restore format state of cout after printing with std::fixed/setprecision (practicalswift)</li>
    <li>#11025 <code class="language-text highlighter-rouge">e5d26e4</code> qa: Fix inv race in example_test (MarcoFalke)</li>
    <li>#10765 <code class="language-text highlighter-rouge">2c811e0</code> Tests: address placement should be deterministic by default (ReneNyffenegger)</li>
    <li>#11000 <code class="language-text highlighter-rouge">ac016e1</code> test: Add resendwallettransactions functional tests (promag)</li>
    <li>#11032 <code class="language-text highlighter-rouge">aeb3175</code> [qa] Fix block message processing error in sendheaders.py (sdaftuar)</li>
    <li>#10105 <code class="language-text highlighter-rouge">0b9fb68</code> [tests] fixup - make all Travis test runs quiet, non just cron job runs (jnewbery)</li>
    <li>#10222 <code class="language-text highlighter-rouge">6ce7337</code> [tests] test_runner - check unicode (jnewbery)</li>
    <li>#10327 <code class="language-text highlighter-rouge">35da2ae</code> [tests] remove import-abort-rescan.py (jnewbery)</li>
    <li>#11023 <code class="language-text highlighter-rouge">bf74d37</code> [tests] Add option to attach a python debugger if functional test fails (jnewbery)</li>
    <li>#10565 <code class="language-text highlighter-rouge">8c2098a</code> [coverage] Remove subtrees and benchmarks from coverage report (achow101)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#9871 <code class="language-text highlighter-rouge">be8ba2c</code> Add a tree sha512 hash to merge commits (sipa)</li>
    <li>#9821 <code class="language-text highlighter-rouge">d19d45a</code> util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD (laanwj)</li>
    <li>#9903 <code class="language-text highlighter-rouge">ba80a68</code> Docs: add details to -rpcclienttimeout doc (ian-kelling)</li>
    <li>#9910 <code class="language-text highlighter-rouge">53c300f</code> Docs: correct and elaborate -rpcbind doc (ian-kelling)</li>
    <li>#9905 <code class="language-text highlighter-rouge">01b7cda</code> [contrib] gh-merge: Move second sha512 check to the end (MarcoFalke)</li>
    <li>#9880 <code class="language-text highlighter-rouge">4df8213</code> Verify Tree-SHA512s in merge commits, enforce sigs are not SHA1 (TheBlueMatt)</li>
    <li>#9932 <code class="language-text highlighter-rouge">00c13ea</code> Fix verify-commits on travis and always check top commit’s tree (TheBlueMatt)</li>
    <li>#9952 <code class="language-text highlighter-rouge">6996e06</code> Add historical release notes for 0.14.0 (laanwj)</li>
    <li>#9940 <code class="language-text highlighter-rouge">fa99663</code> Fix verify-commits on OSX, update for new bad Tree-SHA512, point travis to different keyservers (TheBlueMatt)</li>
    <li>#9963 <code class="language-text highlighter-rouge">8040ae6</code> util: Properly handle errors during log message formatting (laanwj)</li>
    <li>#9984 <code class="language-text highlighter-rouge">cce056d</code> devtools: Make github-merge compute SHA512 from git, instead of worktree (laanwj)</li>
    <li>#9995 <code class="language-text highlighter-rouge">8bcf934</code> [doc] clarify blockchain size and pruning (askmike)</li>
    <li>#9734 <code class="language-text highlighter-rouge">0c17afc</code> Add updating of chainTxData to release process (sipa)</li>
    <li>#10063 <code class="language-text highlighter-rouge">530fcbd</code> add missing spaces so that markdown recognizes headline (flack)</li>
    <li>#10085 <code class="language-text highlighter-rouge">db1ae54</code> Docs: remove ‘noconnect’ option (jlopp)</li>
    <li>#10090 <code class="language-text highlighter-rouge">8e4f7e7</code> Update bitcoin.conf with example for pruning (coinables)</li>
    <li>#9424 <code class="language-text highlighter-rouge">1a5aaab</code> Change LogAcceptCategory to use uint32_t rather than sets of strings (gmaxwell)</li>
    <li>#10036 <code class="language-text highlighter-rouge">fbf36ca</code> Fix init README format to render correctly on github (jlopp)</li>
    <li>#10058 <code class="language-text highlighter-rouge">a2cd0b0</code> No need to use OpenSSL malloc/free (tjps)</li>
    <li>#10123 <code class="language-text highlighter-rouge">471ed00</code> Allow debug logs to be excluded from specified component (jnewbery)</li>
    <li>#10104 <code class="language-text highlighter-rouge">fadf078</code> linearize script: Option to use RPC cookie (achow101)</li>
    <li>#10162 <code class="language-text highlighter-rouge">a3a2160</code> [trivial] Log calls to getblocktemplate (jnewbery)</li>
    <li>#10155 <code class="language-text highlighter-rouge">928695b</code> build: Deduplicate version numbers (laanwj)</li>
    <li>#10211 <code class="language-text highlighter-rouge">a86255b</code> [doc] Contributor fixes &amp; new “finding reviewers” section (kallewoof)</li>
    <li>#10250 <code class="language-text highlighter-rouge">1428f30</code> Fix some empty vector references (sipa)</li>
    <li>#10270 <code class="language-text highlighter-rouge">95f5e44</code> Remove Clang workaround for Boost 1.46 (fanquake)</li>
    <li>#10263 <code class="language-text highlighter-rouge">cb007e4</code> Trivial: fix fee estimate write error log message (CryptAxe)</li>
    <li>#9670 <code class="language-text highlighter-rouge">bd9ec0e</code> contrib: github-merge improvements (laanwj)</li>
    <li>#10260 <code class="language-text highlighter-rouge">1d75597</code> [doc] Minor corrections to osx dependencies (fanquake)</li>
    <li>#10189 <code class="language-text highlighter-rouge">750c5a5</code> devtools/net: add a verifier for scriptable changes. Use it to make CNode::id private (theuni)</li>
    <li>#10322 <code class="language-text highlighter-rouge">bc64b5a</code> Use hardware timestamps in RNG seeding (sipa)</li>
    <li>#10381 <code class="language-text highlighter-rouge">7f2b9e0</code> Shadowing warnings are not enabled by default, update doc accordingly (paveljanik)</li>
    <li>#10380 <code class="language-text highlighter-rouge">b6ee855</code> [doc] Removing comments about dirty entries on txmempool (madeo)</li>
    <li>#10383 <code class="language-text highlighter-rouge">d0c37ee</code> [logging] log system time and mock time (jnewbery)</li>
    <li>#10404 <code class="language-text highlighter-rouge">b45a52a</code> doc: Add logging to FinalizeNode() (sdaftuar)</li>
    <li>#10388 <code class="language-text highlighter-rouge">526e839</code> Output line to debug.log when IsInitialBlockDownload latches to false (morcos)</li>
    <li>#10372 <code class="language-text highlighter-rouge">15254e9</code> Add perf counter data to GetStrongRandBytes state in scheduler (TheBlueMatt)</li>
    <li>#10461 <code class="language-text highlighter-rouge">55b72f3</code> Update style guide (sipa)</li>
    <li>#10486 <code class="language-text highlighter-rouge">10e8c0a</code> devtools: Retry after signing fails in github-merge (laanwj)</li>
    <li>#10447 <code class="language-text highlighter-rouge">f259263</code> Make bitcoind invalid argument error message specific (laanwj)</li>
    <li>#10495 <code class="language-text highlighter-rouge">6a38b79</code> contrib: Update location of seeds.txt (laanwj)</li>
    <li>#10469 <code class="language-text highlighter-rouge">b6b150b</code> Fixing typo in rpcdump.cpp help message (keystrike)</li>
    <li>#10451 <code class="language-text highlighter-rouge">27b9931</code> contrib/init/bitcoind.openrcconf: Don’t disable wallet by default (luke-jr)</li>
    <li>#10323 <code class="language-text highlighter-rouge">00d3692</code> Update to latest libsecp256k1 master (sipa)</li>
    <li>#10422 <code class="language-text highlighter-rouge">cec9e1e</code> Fix timestamp in fee estimate debug message (morcos)</li>
    <li>#10566 <code class="language-text highlighter-rouge">5d034ee</code> [docs] Use the “domain name setup” image (previously unused) in the gitian docs (practicalswift)</li>
    <li>#10534 <code class="language-text highlighter-rouge">a514ac3</code> Clarify prevector::erase and avoid swap-to-clear (sipa)</li>
    <li>#10575 <code class="language-text highlighter-rouge">22ec768</code> Header include guideline (sipa)</li>
    <li>#10480 <code class="language-text highlighter-rouge">fbf5d3b</code> Improve commit-check-script.sh (sipa)</li>
    <li>#10502 <code class="language-text highlighter-rouge">1ad3d4e</code> scripted-diff: Remove BOOST_FOREACH, Q_FOREACH and PAIRTYPE (jtimon)</li>
    <li>#10377 <code class="language-text highlighter-rouge">b63be2c</code> Use rdrand as entropy source on supported platforms (sipa)</li>
    <li>#9895 <code class="language-text highlighter-rouge">228c319</code> Turn TryCreateDirectory() into TryCreateDirectories() (benma)</li>
    <li>#10602 <code class="language-text highlighter-rouge">d76e84a</code> Make clang-format use C++11 features (practicalswift)</li>
    <li>#10623 <code class="language-text highlighter-rouge">c38f540</code> doc: Add 0.14.2 release notes (MarcoFalke)</li>
    <li>#10276 <code class="language-text highlighter-rouge">b750b33</code> contrib/verifybinaries: allow filtering by platform (knocte)</li>
    <li>#10248 <code class="language-text highlighter-rouge">01c4b14</code> Rewrite addrdb with less duplication using CHashVerifier (sipa)</li>
    <li>#10577 <code class="language-text highlighter-rouge">232508f</code> Add an explanation of quickly hashing onto a non-power of two range (gmaxwell)</li>
    <li>#10608 <code class="language-text highlighter-rouge">eee398f</code> Add a comment explaining the use of MAX_BLOCK_BASE_SIZE (gmaxwell)</li>
    <li>#10728 <code class="language-text highlighter-rouge">7397af9</code> fix typo in help text for removeprunedfunds (AkioNak)</li>
    <li>#10193 <code class="language-text highlighter-rouge">6dbcc74</code> scripted-diff: Remove #include &lt;boost/foreach.hpp&gt; (jtimon)</li>
    <li>#10676 <code class="language-text highlighter-rouge">379aed0</code> document script-based return fields for validateaddress (instagibbs)</li>
    <li>#10651 <code class="language-text highlighter-rouge">cef4b5c</code> Verify binaries from bitcoincore.org and bitcoin.org (TheBlueMatt)</li>
    <li>#10786 <code class="language-text highlighter-rouge">ca4c545</code> Add PR description to merge commit in github-merge.py (sipa)</li>
    <li>#10812 <code class="language-text highlighter-rouge">c5904e8</code> [utils] Allow bitcoin-cli’s -rpcconnect option to be used with square brackets (jnewbery)</li>
    <li>#10842 <code class="language-text highlighter-rouge">3895e25</code> Fix incorrect Doxygen tag (@ince → @since). Doxygen parameter name matching (practicalswift)</li>
    <li>#10681 <code class="language-text highlighter-rouge">df0793f</code> add gdb attach process to test README (instagibbs)</li>
    <li>#10789 <code class="language-text highlighter-rouge">1124328</code> Punctuation/grammer fixes in rpcwallet.cpp (stevendlander)</li>
    <li>#10655 <code class="language-text highlighter-rouge">78f307b</code> Properly document target_confirmations in listsinceblock (RHavar)</li>
    <li>#10917 <code class="language-text highlighter-rouge">5c003cb</code> developer-notes: add reference to snake_case and PascalCase (benma)</li>
    <li>#11003 <code class="language-text highlighter-rouge">4b5a7ce</code> Docs: Capitalize bullet points in CONTRIBUTING guide (eklitzke)</li>
    <li>#10968 <code class="language-text highlighter-rouge">98aa3f6</code> Add instructions for parallel gitian builds (coblee)</li>
    <li>#11076 <code class="language-text highlighter-rouge">1c4b9b3</code> 0.15 release-notes nits: fix redundancy, remove accidental parenthesis &amp; fix range style (practicalswift)</li>
    <li>#11090 <code class="language-text highlighter-rouge">8f0121c</code> Update contributor names in release-notes.md (Derek701)</li>
    <li>#11056 <code class="language-text highlighter-rouge">cbdd338</code> disable jni in builds (instagibbs)</li>
    <li>#11080 <code class="language-text highlighter-rouge">2b59cfb</code> doc: Update build-openbsd for 6.1 (laanwj)</li>
    <li>#11119 <code class="language-text highlighter-rouge">0a6af47</code> [doc] build-windows: Mention that only trusty works (MarcoFalke)</li>
    <li>#11108 <code class="language-text highlighter-rouge">e8ad101</code> Changing -txindex requires -reindex, not -reindex-chainstate (TheBlueMatt)</li>
    <li>#9792 <code class="language-text highlighter-rouge">342b9bc</code> FastRandomContext improvements and switch to ChaCha20 (sipa)</li>
    <li>#9505 <code class="language-text highlighter-rouge">67ed40e</code> Prevector Quick Destruct (JeremyRubin)</li>
    <li>#10820 <code class="language-text highlighter-rouge">ef37f20</code> Use cpuid intrinsics instead of asm code (sipa)</li>
    <li>#9999 <code class="language-text highlighter-rouge">a328904</code> [LevelDB] Plug leveldb logs to bitcoin logs (NicolasDorier)</li>
    <li>#9693 <code class="language-text highlighter-rouge">c5e9e42</code> Prevent integer overflow in ReadVarInt (gmaxwell)</li>
    <li>#10129 <code class="language-text highlighter-rouge">351d0ad</code> scheduler: fix sub-second precision with boost &lt; 1.50 (theuni)</li>
    <li>#10153 <code class="language-text highlighter-rouge">fade788</code> logging: Fix off-by-one for shrinkdebugfile default (MarcoFalke)</li>
    <li>#10305 <code class="language-text highlighter-rouge">c45da32</code> Fix potential NPD introduced in b297426c (TheBlueMatt)</li>
    <li>#10338 <code class="language-text highlighter-rouge">daf3e7d</code> Maintain state across GetStrongRandBytes calls (sipa)</li>
    <li>#10544 <code class="language-text highlighter-rouge">a4fe077</code> Update to LevelDB 1.20 (sipa)</li>
    <li>#10614 <code class="language-text highlighter-rouge">cafe24f</code> random: fix crash on some 64bit platforms (theuni)</li>
    <li>#10714 <code class="language-text highlighter-rouge">2a09a38</code> Avoid printing incorrect block indexing time due to uninitialized variable (practicalswift)</li>
    <li>#10837 <code class="language-text highlighter-rouge">8bc6d1f</code> Fix resource leak on error in GetDevURandom (corebob)</li>
    <li>#10832 <code class="language-text highlighter-rouge">89bb036</code> init: Factor out AppInitLockDataDirectory and fix startup core dump issue (laanwj)</li>
    <li>#10914 <code class="language-text highlighter-rouge">b995a37</code> Add missing lock in CScheduler::AreThreadsServicingQueue() (TheBlueMatt)</li>
    <li>#10958 <code class="language-text highlighter-rouge">659c096</code> Update to latest Bitcoin patches for LevelDB (sipa)</li>
    <li>#10919 <code class="language-text highlighter-rouge">c1c671f</code> Fix more init bugs (TheBlueMatt)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>ロハン ダル</li>
    <li>Ahmad Kazi</li>
    <li>aideca</li>
    <li>Akio Nakamura</li>
    <li>Alex Morcos</li>
    <li>Allan Doensen</li>
    <li>Andres G. Aragoneses</li>
    <li>Andrew Chow</li>
    <li>Angel Leon</li>
    <li>Awemany</li>
    <li>Bob McElrath</li>
    <li>Brian McMichael</li>
    <li>BtcDrak</li>
    <li>Charlie Lee</li>
    <li>Chris Gavin</li>
    <li>Chris Stewart</li>
    <li>Cory Fields</li>
    <li>CryptAxe</li>
    <li>Dag Robole</li>
    <li>Daniel Aleksandersen</li>
    <li>Daniel Cousens</li>
    <li>darksh1ne</li>
    <li>Dimitris Tsapakidis</li>
    <li>Eric Shaw</li>
    <li>Evan Klitzke</li>
    <li>fanquake</li>
    <li>Felix Weis</li>
    <li>flack</li>
    <li>Guido Vranken</li>
    <li>Greg Griffith</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>Ian Kelling</li>
    <li>Jack Grigg</li>
    <li>James Evans</li>
    <li>James Hilliard</li>
    <li>Jameson Lopp</li>
    <li>Jeremy Rubin</li>
    <li>Jimmy Song</li>
    <li>João Barbosa</li>
    <li>Johnathan Corgan</li>
    <li>John Newbery</li>
    <li>Jonas Schnelli</li>
    <li>Jorge Timón</li>
    <li>Karl-Johan Alm</li>
    <li>kewde</li>
    <li>KibbledJiveElkZoo</li>
    <li>Kirit Thadaka</li>
    <li>kobake</li>
    <li>Kyle Honeycutt</li>
    <li>Lawrence Nahum</li>
    <li>Luke Dashjr</li>
    <li>Marco Falke</li>
    <li>Marcos Mayorga</li>
    <li>Marijn Stollenga</li>
    <li>Mario Dian</li>
    <li>Mark Friedenbach</li>
    <li>Marko Bencun</li>
    <li>Masahiko Hyuga</li>
    <li>Matt Corallo</li>
    <li>Matthew Zipkin</li>
    <li>Matthias Grundmann</li>
    <li>Michael Goldstein</li>
    <li>Michael Rotarius</li>
    <li>Mikerah</li>
    <li>Mike van Rossum</li>
    <li>Mitchell Cash</li>
    <li>Nicolas Dorier</li>
    <li>Patrick Strateman</li>
    <li>Pavel Janík</li>
    <li>Pavlos Antoniou</li>
    <li>Pavol Rusnak</li>
    <li>Pedro Branco</li>
    <li>Peter Todd</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>René Nyffenegger</li>
    <li>Ricardo Velhote</li>
    <li>romanornr</li>
    <li>Russell Yanofsky</li>
    <li>Rusty Russell</li>
    <li>Ryan Havar</li>
    <li>shaolinfry</li>
    <li>Shigeya Suzuki</li>
    <li>Simone Madeo</li>
    <li>Spencer Lievens</li>
    <li>Steven D. Lander</li>
    <li>Suhas Daftuar</li>
    <li>Takashi Mitsuta</li>
    <li>Thomas Snider</li>
    <li>Timothy Redaelli</li>
    <li>tintinweb</li>
    <li>tnaka</li>
    <li>Warren Togami</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.14.2 released</title>
            <link>https://bitcoin.org/en/release/v0.14.2</link>
            <guid>https://bitcoin.org/en/release/v0.14.2</guid>
          
            <pubDate>Sat, 17 Jun 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.14.2 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/bitcoin-core-0.14.2/</del></p>

  <p>This is a new minor version release, including various bugfixes and
performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later.</p>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
No attempt is made to prevent installing or running the software on Windows XP, you
can still do so at your own risk but be aware that there are known instabilities and issues.
Please do not report issues about Windows XP to the issue tracker.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="miniupnp-cve-2017-8798">miniupnp CVE-2017-8798</h2>

  <p>Bundled miniupnpc was updated to 2.0.20170509. This fixes an integer signedness error
(present in MiniUPnPc v1.4.20101221 through v2.0) that allows remote attackers
(within the LAN) to cause a denial of service or possibly have unspecified
other impact.</p>

  <p>This only affects users that have explicitly enabled UPnP through the GUI
setting or through the <code class="language-text highlighter-rouge">-upnp</code> option, as since the last UPnP vulnerability
(in Bitcoin Core 0.10.3) it has been disabled by default.</p>

  <p>If you use this option, it is recommended to upgrade to this version as soon as
possible.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="known-bugs">Known Bugs</h1>

  <p>Since 0.14.0 the approximate transaction fee shown in Bitcoin-Qt when using coin
control and smart fee estimation does not reflect any change in target from the
smart fee slider. It will only present an approximate fee calculated using the
default target. The fee calculated using the correct target is still applied to
the transaction and shown in the final send confirmation dialog.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.14.2 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#10410 <code class="language-text highlighter-rouge">321419b</code> Fix importwallet edge case rescan bug (ryanofsky)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#10424 <code class="language-text highlighter-rouge">37a8fc5</code> Populate services in GetLocalAddress (morcos)</li>
    <li>#10441 <code class="language-text highlighter-rouge">9e3ad50</code> Only enforce expected services for half of outgoing connections (theuni)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#10414 <code class="language-text highlighter-rouge">ffb0c4b</code> miniupnpc 2.0.20170509 (fanquake)</li>
    <li>#10228 <code class="language-text highlighter-rouge">ae479bc</code> Regenerate bitcoin-config.h as necessary (theuni)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#10245 <code class="language-text highlighter-rouge">44a17f2</code> Minor fix in build documentation for FreeBSD 11 (shigeya)</li>
    <li>#10215 <code class="language-text highlighter-rouge">0aee4a1</code> Check interruptNet during dnsseed lookups (TheBlueMatt)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#10231 <code class="language-text highlighter-rouge">1e936d7</code> Reduce a significant cs_main lock freeze (jonasschnelli)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#10294 <code class="language-text highlighter-rouge">1847642</code> Unset change position when there is no change (instagibbs)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Alex Morcos</li>
    <li>Cory Fields</li>
    <li>fanquake</li>
    <li>Gregory Sanders</li>
    <li>Jonas Schnelli</li>
    <li>Matt Corallo</li>
    <li>Russell Yanofsky</li>
    <li>Shigeya Suzuki</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.14.1 released</title>
            <link>https://bitcoin.org/en/release/v0.14.1</link>
            <guid>https://bitcoin.org/en/release/v0.14.1</guid>
          
            <pubDate>Sat, 22 Apr 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.14.1 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/bitcoin-core-0.14.1/</del></p>

  <p>This is a new minor version release, including various bugfixes and
performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later.</p>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
No attempt is made to prevent installing or running the software on Windows XP, you
can still do so at your own risk but be aware that there are known instabilities and issues.
Please do not report issues about Windows XP to the issue tracker.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="rpc-changes">RPC changes</h2>

  <ul>
    <li>
      <p>The first positional argument of <code class="language-text highlighter-rouge">createrawtransaction</code> was renamed from
<code class="language-text highlighter-rouge">transactions</code> to <code class="language-text highlighter-rouge">inputs</code>.</p>
    </li>
    <li>
      <p>The argument of <code class="language-text highlighter-rouge">disconnectnode</code> was renamed from <code class="language-text highlighter-rouge">node</code> to <code class="language-text highlighter-rouge">address</code>.</p>
    </li>
  </ul>

  <p>These interface changes break compatibility with 0.14.0, when the named
arguments functionality, introduced in 0.14.0, is used. Client software
using these calls with named arguments needs to be updated.</p>

  <h2 id="mining">Mining</h2>

  <p>In previous versions, getblocktemplate required segwit support from downstream
clients/miners once the feature activated on the network. In this version, it
now supports non-segwit clients even after activation, by removing all segwit
transactions from the returned block template. This allows non-segwit miners to
continue functioning correctly even after segwit has activated.</p>

  <p>Due to the limitations in previous versions, getblocktemplate also recommended
non-segwit clients to not signal for the segwit version-bit. Since this is no
longer an issue, getblocktemplate now always recommends signalling segwit for
all miners. This is safe because ability to enforce the rule is the only
required criteria for safe activation, not actually producing segwit-enabled
blocks.</p>

  <h2 id="utxo-memory-accounting">UTXO memory accounting</h2>

  <p>Memory usage for the UTXO cache is being calculated more accurately, so that
the configured limit (<code class="language-text highlighter-rouge">-dbcache</code>) will be respected when memory usage peaks
during cache flushes.  The memory accounting in prior releases is estimated to
only account for half the actual peak utilization.</p>

  <p>The default <code class="language-text highlighter-rouge">-dbcache</code> has also been changed in this release to 450MiB.  Users
who currently set <code class="language-text highlighter-rouge">-dbcache</code> to a high value (e.g. to keep the UTXO more fully
cached in memory) should consider increasing this setting in order to achieve
the same cache performance as prior releases.  Users on low-memory systems
(such as systems with 1GB or less) should consider specifying a lower value for
this parameter.</p>

  <p>Additional information relating to running on low-memory systems can be found
here:
<a href="https://gist.github.com/laanwj/efe29c7661ce9b6620a7">reducing-bitcoind-memory-usage.md</a>.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.14.1 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#10084 <code class="language-text highlighter-rouge">142fbb2</code> Rename first named arg of createrawtransaction (MarcoFalke)</li>
    <li>#10139 <code class="language-text highlighter-rouge">f15268d</code> Remove auth cookie on shutdown (practicalswift)</li>
    <li>#10146 <code class="language-text highlighter-rouge">2fea10a</code> Better error handling for submitblock (rawodb, gmaxwell)</li>
    <li>#10144 <code class="language-text highlighter-rouge">d947afc</code> Prioritisetransaction wasn’t always updating ancestor fee (sdaftuar)</li>
    <li>#10204 <code class="language-text highlighter-rouge">3c79602</code> Rename disconnectnode argument (jnewbery)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#10126 <code class="language-text highlighter-rouge">0b5e162</code> Compensate for memory peak at flush time (sipa)</li>
    <li>#9912 <code class="language-text highlighter-rouge">fc3d7db</code> Optimize GetWitnessHash() for non-segwit transactions (sdaftuar)</li>
    <li>#10133 <code class="language-text highlighter-rouge">ab864d3</code> Clean up calculations of pcoinsTip memory usage (morcos)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#9953/#10013 <code class="language-text highlighter-rouge">d2548a4</code> Fix shutdown hang with &gt;= 8 -addnodes set (TheBlueMatt)</li>
    <li>#10176 <code class="language-text highlighter-rouge">30fa231</code> net: gracefully handle NodeId wrapping (theuni)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#9973 <code class="language-text highlighter-rouge">e9611d1</code> depends: fix zlib build on osx (theuni)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#10060 <code class="language-text highlighter-rouge">ddc2dd1</code> Ensure an item exists on the rpcconsole stack before adding (achow101)</li>
  </ul>

  <h3 id="mining-1">Mining</h3>
  <ul>
    <li>#9955/#10006 <code class="language-text highlighter-rouge">569596c</code> Don’t require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)</li>
    <li>#9959/#10127 <code class="language-text highlighter-rouge">b5c3440</code> Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#10157 <code class="language-text highlighter-rouge">55f641c</code> Fix the <code class="language-text highlighter-rouge">mempool_packages.py</code> test (sdaftuar)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#10037 <code class="language-text highlighter-rouge">4d8e660</code> Trivial: Fix typo in help getrawtransaction RPC (keystrike)</li>
    <li>#10120 <code class="language-text highlighter-rouge">e4c9a90</code> util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)</li>
    <li>#10130 <code class="language-text highlighter-rouge">ecc5232</code> bitcoin-tx input verification (awemany, jnewbery)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Alex Morcos</li>
    <li>Andrew Chow</li>
    <li>Awemany</li>
    <li>Cory Fields</li>
    <li>Gregory Maxwell</li>
    <li>James Evans</li>
    <li>John Newbery</li>
    <li>MarcoFalke</li>
    <li>Matt Corallo</li>
    <li>Pieter Wuille</li>
    <li>practicalswift</li>
    <li>rawodb</li>
    <li>Suhas Daftuar</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.14.0 released</title>
            <link>https://bitcoin.org/en/release/v0.14.0</link>
            <guid>https://bitcoin.org/en/release/v0.14.0</guid>
          
            <pubDate>Wed, 08 Mar 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.14.0 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/bitcoin-core-0.14.0/</del></p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Bitcoin Core is extensively tested on multiple operating systems using
the Linux kernel, macOS 10.8+, and Windows Vista and later.</p>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
No attempt is made to prevent installing or running the software on Windows XP, you
can still do so at your own risk but be aware that there are known instabilities and issues.
Please do not report issues about Windows XP to the issue tracker.</p>

  <p>Bitcoin Core should also work on most other Unix-like systems but is not
frequently tested on them.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="performance-improvements">Performance Improvements</h2>

  <p>Validation speed and network propagation performance have been greatly
improved, leading to much shorter sync and initial block download times.</p>

  <ul>
    <li>The script signature cache has been reimplemented as a “cuckoo cache”,
allowing for more signatures to be cached and faster lookups.</li>
    <li>Assumed-valid blocks have been introduced which allows script validation to
be skipped for ancestors of known-good blocks, without changing the security
model. See below for more details.</li>
    <li>In some cases, compact blocks are now relayed before being fully validated as
per BIP152.</li>
    <li>P2P networking has been refactored with a focus on concurrency and
throughput. Network operations are no longer bottlenecked by validation. As a
result, block fetching is several times faster than previous releases in many
cases.</li>
    <li>The UTXO cache now claims unused mempool memory. This speeds up initial block
download as UTXO lookups are a major bottleneck there, and there is no use for
the mempool at that stage.</li>
  </ul>

  <h2 id="manual-pruning">Manual Pruning</h2>

  <p>Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning
the blockchain allows for significant storage space savings as the vast majority of
the downloaded data can be discarded after processing so very little of it remains
on the disk.</p>

  <p>Manual block pruning can now be enabled by setting <code class="language-text highlighter-rouge">-prune=1</code>. Once that is set,
the RPC command <code class="language-text highlighter-rouge">pruneblockchain</code> can be used to prune the blockchain up to the
specified height or timestamp.</p>

  <h2 id="getinfo-deprecated"><code class="language-text highlighter-rouge">getinfo</code> Deprecated</h2>

  <p>The <code class="language-text highlighter-rouge">getinfo</code> RPC command has been deprecated. Each field in the RPC call
has been moved to another command’s output with that command also giving
additional information that <code class="language-text highlighter-rouge">getinfo</code> did not provide. The following table
shows where each field has been moved to:</p>

  <table>
    <thead>
      <tr>
        <th><code class="language-text highlighter-rouge">getinfo</code> field</th>
        <th>Moved to</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><code class="language-text highlighter-rouge">"version"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["version"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"protocolversion"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["protocolversion"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"walletversion"</code></td>
        <td><code class="language-text highlighter-rouge">getwalletinfo()["walletversion"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"balance"</code></td>
        <td><code class="language-text highlighter-rouge">getwalletinfo()["balance"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"blocks"</code></td>
        <td><code class="language-text highlighter-rouge">getblockchaininfo()["blocks"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"timeoffset"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["timeoffset"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"connections"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["connections"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"proxy"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["networks"]&amp;#91;0&amp;#93;["proxy"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"difficulty"</code></td>
        <td><code class="language-text highlighter-rouge">getblockchaininfo()["difficulty"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"testnet"</code></td>
        <td><code class="language-text highlighter-rouge">getblockchaininfo()["chain"] == "test"</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"keypoololdest"</code></td>
        <td><code class="language-text highlighter-rouge">getwalletinfo()["keypoololdest"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"keypoolsize"</code></td>
        <td><code class="language-text highlighter-rouge">getwalletinfo()["keypoolsize"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"unlocked_until"</code></td>
        <td><code class="language-text highlighter-rouge">getwalletinfo()["unlocked_until"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"paytxfee"</code></td>
        <td><code class="language-text highlighter-rouge">getwalletinfo()["paytxfee"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"relayfee"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["relayfee"]</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">"errors"</code></td>
        <td><code class="language-text highlighter-rouge">getnetworkinfo()["warnings"]</code></td>
      </tr>
    </tbody>
  </table>

  <h2 id="zmq-on-windows">ZMQ On Windows</h2>

  <p>Previously the ZeroMQ notification system was unavailable on Windows
due to various issues with ZMQ. These have been fixed upstream and
now ZMQ can be used on Windows. Please see <a href="https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md">this document</a> for
help with using ZMQ in general.</p>

  <h2 id="nested-rpc-commands-in-debug-console">Nested RPC Commands in Debug Console</h2>

  <p>The ability to nest RPC commands has been added to the debug console. This
allows users to have the output of a command become the input to another
command without running the commands separately.</p>

  <p>The nested RPC commands use bracket syntax (i.e. <code class="language-text highlighter-rouge">getwalletinfo()</code>) and can
be nested (i.e. <code class="language-text highlighter-rouge">getblock(getblockhash(1))</code>). Simple queries can be
done with square brackets where object values are accessed with either an 
array index or a non-quoted string (i.e. <code class="language-text highlighter-rouge">listunspent()&amp;#91;0&amp;#93;[txid]</code>). Both
commas and spaces can be used to separate parameters in both the bracket syntax
and normal RPC command syntax.</p>

  <h2 id="network-activity-toggle">Network Activity Toggle</h2>

  <p>A RPC command and GUI toggle have been added to enable or disable all p2p
network activity. The network status icon in the bottom right hand corner 
is now the GUI toggle. Clicking the icon will either enable or disable all
p2p network activity. If network activity is disabled, the icon will 
be grayed out with an X on top of it.</p>

  <p>Additionally the <code class="language-text highlighter-rouge">setnetworkactive</code> RPC command has been added which does
the same thing as the GUI icon. The command takes one boolean parameter,
<code class="language-text highlighter-rouge">true</code> enables networking and <code class="language-text highlighter-rouge">false</code> disables it.</p>

  <h2 id="out-of-sync-modal-info-layer">Out-of-sync Modal Info Layer</h2>

  <p>When Bitcoin Core is out-of-sync on startup, a semi-transparent information
layer will be shown over top of the normal display. This layer contains
details about the current sync progress and estimates the amount of time
remaining to finish syncing. This layer can also be hidden and subsequently
unhidden by clicking on the progress bar at the bottom of the window.</p>

  <h2 id="support-for-json-rpc-named-arguments">Support for JSON-RPC Named Arguments</h2>

  <p>Commands sent over the JSON-RPC interface and through the <code class="language-text highlighter-rouge">bitcoin-cli</code> binary
can now use named arguments. This follows the <a href="http://www.jsonrpc.org/specification">JSON-RPC specification</a>
for passing parameters by-name with an object.</p>

  <p><code class="language-text highlighter-rouge">bitcoin-cli</code> has been updated to support this by parsing <code class="language-text highlighter-rouge">name=value</code> arguments
when the <code class="language-text highlighter-rouge">-named</code> option is given.</p>

  <p>Some examples:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>src/bitcoin-cli -named help command="help"
src/bitcoin-cli -named getblockhash height=0
src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
src/bitcoin-cli -named sendtoaddress address="(snip)" amount="1.0" subtractfeefromamount=true
</code></pre></div>  </div>

  <p>The order of arguments doesn’t matter in this case. Named arguments are also
useful to leave out arguments that should stay at their default value. The
rarely-used arguments <code class="language-text highlighter-rouge">comment</code> and <code class="language-text highlighter-rouge">comment_to</code> to <code class="language-text highlighter-rouge">sendtoaddress</code>, for example, can
be left out. However, this is not yet implemented for many RPC calls, this is
expected to land in a later release.</p>

  <p>The RPC server remains fully backwards compatible with positional arguments.</p>

  <h2 id="opt-into-rbf-when-sending">Opt into RBF When Sending</h2>

  <p>A new startup option, <code class="language-text highlighter-rouge">-walletrbf</code>, has been added to allow users to have all
transactions sent opt into RBF support. The default value for this option is
currently <code class="language-text highlighter-rouge">false</code>, so transactions will not opt into RBF by default. The new
<code class="language-text highlighter-rouge">bumpfee</code> RPC can be used to replace transactions that opt into RBF.</p>

  <h2 id="sensitive-data-is-no-longer-stored-in-debug-console-history">Sensitive Data Is No Longer Stored In Debug Console History</h2>

  <p>The debug console maintains a history of previously entered commands that can be
accessed by pressing the Up-arrow key so that users can easily reuse previously
entered commands. Commands which have sensitive information such as passphrases and
private keys will now have a <code class="language-text highlighter-rouge">(...)</code> in place of the parameters when accessed through
the history.</p>

  <h2 id="retaining-the-mempool-across-restarts">Retaining the Mempool Across Restarts</h2>

  <p>The mempool will be saved to the data directory prior to shutdown
to a <code class="language-text highlighter-rouge">mempool.dat</code> file. This file preserves the mempool so that when the node
restarts the mempool can be filled with transactions without waiting for new transactions
to be created. This will also preserve any changes made to a transaction through
commands such as <code class="language-text highlighter-rouge">prioritisetransaction</code> so that those changes will not be lost.</p>

  <h2 id="final-alert">Final Alert</h2>

  <p>The Alert System was <a href="https://bitcoin.org/en/alert/2016-11-01-alert-retirement">disabled and deprecated</a> in Bitcoin Core 0.12.1 and removed in 0.13.0. 
The Alert System was retired with a maximum sequence final alert which causes any nodes
supporting the Alert System to display a static hard-coded “Alert Key Compromised” message which also
prevents any other alerts from overriding it. This final alert is hard-coded into this release
so that all old nodes receive the final alert.</p>

  <h2 id="gui-changes">GUI Changes</h2>

  <ul>
    <li>
      <p>After resetting the options by clicking the <code class="language-text highlighter-rouge">Reset Options</code> button 
in the options dialog or with the <code class="language-text highlighter-rouge">-resetguioptions</code> startup option, 
the user will be prompted to choose the data directory again. This 
is to ensure that custom data directories will be kept after the 
option reset which clears the custom data directory set via the choose 
datadir dialog.</p>
    </li>
    <li>
      <p>Multiple peers can now be selected in the list of peers in the debug 
window. This allows for users to ban or disconnect multiple peers 
simultaneously instead of banning them one at a time.</p>
    </li>
    <li>
      <p>An indicator has been added to the bottom right hand corner of the main
window to indicate whether the wallet being used is a HD wallet. This
icon will be grayed out with an X on top of it if the wallet is not a
HD wallet.</p>
    </li>
  </ul>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li>
      <p><code class="language-text highlighter-rouge">importprunedfunds</code> only accepts two required arguments. Some versions accept
an optional third arg, which was always ignored. Make sure to never pass more
than two arguments.</p>
    </li>
    <li>
      <p>The first boolean argument to <code class="language-text highlighter-rouge">getaddednodeinfo</code> has been removed. This is 
an incompatible change.</p>
    </li>
    <li>
      <p>RPC command <code class="language-text highlighter-rouge">getmininginfo</code> loses the “testnet” field in favor of the more
generic “chain” (which has been present for years).</p>
    </li>
    <li>
      <p>A new RPC command <code class="language-text highlighter-rouge">preciousblock</code> has been added which marks a block as
precious. A precious block will be treated as if it were received earlier
than a competing block.</p>
    </li>
    <li>
      <p>A new RPC command <code class="language-text highlighter-rouge">importmulti</code> has been added which receives an array of 
JSON objects representing the intention of importing a public key, a 
private key, an address and script/p2sh</p>
    </li>
    <li>
      <p>Use of <code class="language-text highlighter-rouge">getrawtransaction</code> for retrieving confirmed transactions with unspent
outputs has been deprecated. For now this will still work, but in the future
it may change to only be able to retrieve information about transactions in
the mempool or if <code class="language-text highlighter-rouge">txindex</code> is enabled.</p>
    </li>
    <li>
      <p>A new RPC command <code class="language-text highlighter-rouge">getmemoryinfo</code> has been added which will return information
about the memory usage of Bitcoin Core. This was added in conjunction with
optimizations to memory management. See #8753.
for more information.</p>
    </li>
    <li>
      <p>A new RPC command <code class="language-text highlighter-rouge">bumpfee</code> has been added which allows replacing an
unconfirmed wallet transaction that signaled RBF (see the <code class="language-text highlighter-rouge">-walletrbf</code>
startup option above) with a new transaction that pays a higher fee, and
should be more likely to get confirmed quickly.</p>
    </li>
  </ul>

  <h2 id="http-rest-changes">HTTP REST Changes</h2>

  <ul>
    <li>UTXO set query (<code class="language-text highlighter-rouge">GET /rest/getutxos/&lt;checkmempool&gt;/&lt;txid&gt;-&lt;n&gt;/&lt;txid&gt;-&lt;n&gt;
/.../&lt;txid&gt;-&lt;n&gt;.&lt;bin|hex|json&gt;</code>) responses were changed to return status 
code <code class="language-text highlighter-rouge">HTTP_BAD_REQUEST</code> (400) instead of <code class="language-text highlighter-rouge">HTTP_INTERNAL_SERVER_ERROR</code> (500)
when requests contain invalid parameters.</li>
  </ul>

  <h2 id="minimum-fee-rate-policies">Minimum Fee Rate Policies</h2>

  <p>Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set <code class="language-text highlighter-rouge">-minrelaytxfee</code>. With this release the following concepts that were tied to this option have been separated out:</p>
  <ul>
    <li>incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)</li>
    <li>calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)</li>
    <li>minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new <code class="language-text highlighter-rouge">-blockmintxfee</code> option.  (defaults to 1000 satoshis/kB)</li>
  </ul>

  <p>The <code class="language-text highlighter-rouge">-minrelaytxfee</code> option continues to exist but is recommended to be left unset.</p>

  <h2 id="fee-estimation-changes">Fee Estimation Changes</h2>

  <ul>
    <li>
      <p>Since 0.13.2 fee estimation for a confirmation target of 1 block has been
disabled. The fee slider will no longer be able to choose a target of 1 block.
This is only a minor behavior change as there was often insufficient
data for this target anyway. <code class="language-text highlighter-rouge">estimatefee 1</code> will now always return -1 and
<code class="language-text highlighter-rouge">estimatesmartfee 1</code> will start searching at a target of 2.</p>
    </li>
    <li>
      <p>The default target for fee estimation is changed to 6 blocks in both the GUI
(previously 25) and for RPC calls (previously 2).</p>
    </li>
  </ul>

  <h2 id="removal-of-priority-estimation">Removal of Priority Estimation</h2>

  <ul>
    <li>
      <p>Estimation of “priority” needed for a transaction to be included within a target
number of blocks has been removed.  The RPC calls are deprecated and will either
return -1 or 1e24 appropriately. The format for <code class="language-text highlighter-rouge">fee_estimates.dat</code> has also
changed to no longer save these priority estimates. It will automatically be
converted to the new format which is not readable by prior versions of the
software.</p>
    </li>
    <li>
      <p>Support for “priority” (coin age) transaction sorting for mining is
considered deprecated in Core and will be removed in the next major version.
This is not to be confused with the <code class="language-text highlighter-rouge">prioritisetransaction</code> RPC which will remain
supported by Core for adding fee deltas to transactions.</p>
    </li>
  </ul>

  <h2 id="p2p-connection-management">P2P connection management</h2>

  <ul>
    <li>
      <p>Peers manually added through the <code class="language-text highlighter-rouge">-addnode</code> option or <code class="language-text highlighter-rouge">addnode</code> RPC now have their own
limit of eight connections which does not compete with other inbound or outbound
connection usage and is not subject to the limitation imposed by the <code class="language-text highlighter-rouge">-maxconnections</code>
option.</p>
    </li>
    <li>
      <p>New connections to manually added peers are performed more quickly.</p>
    </li>
  </ul>

  <h2 id="introduction-of-assumed-valid-blocks">Introduction of assumed-valid blocks</h2>

  <ul>
    <li>
      <p>A significant portion of the initial block download time is spent verifying
scripts/signatures.  Although the verification must pass to ensure the security
of the system, no other result from this verification is needed: If the node
knew the history of a given block were valid it could skip checking scripts
for its ancestors.</p>
    </li>
    <li>
      <p>A new configuration option ‘assumevalid’ is provided to express this knowledge
to the software.  Unlike the ‘checkpoints’ in the past this setting does not
force the use of a particular chain: chains that are consistent with it are
processed quicker, but other chains are still accepted if they’d otherwise
be chosen as best. Also unlike ‘checkpoints’ the user can configure which
block history is assumed true, this means that even outdated software can
sync more quickly if the setting is updated by the user.</p>
    </li>
    <li>
      <p>Because the validity of a chain history is a simple objective fact it is much
easier to review this setting.  As a result the software ships with a default
value adjusted to match the current chain shortly before release.  The use
of this default value can be disabled by setting -assumevalid=0</p>
    </li>
  </ul>

  <h2 id="fundrawtransaction-change-address-reuse">Fundrawtransaction change address reuse</h2>

  <ul>
    <li>
      <p>Before 0.14, <code class="language-text highlighter-rouge">fundrawtransaction</code> was by default wallet stateless. In
almost all cases <code class="language-text highlighter-rouge">fundrawtransaction</code> does add a change-output to the
outputs of the funded transaction. Before 0.14, the used keypool key was
never marked as change-address key and directly returned to the keypool
(leading to address reuse).  Before 0.14, calling <code class="language-text highlighter-rouge">getnewaddress</code>
directly after <code class="language-text highlighter-rouge">fundrawtransaction</code> did generate the same address as
the change-output address.</p>
    </li>
    <li>
      <p>Since 0.14, fundrawtransaction does reserve the change-output-key from
the keypool by default (optional by setting  <code class="language-text highlighter-rouge">reserveChangeKey</code>, default =
<code class="language-text highlighter-rouge">true</code>)</p>
    </li>
    <li>
      <p>Users should also consider using <code class="language-text highlighter-rouge">getrawchangeaddress()</code> in conjunction
with <code class="language-text highlighter-rouge">fundrawtransaction</code>’s <code class="language-text highlighter-rouge">changeAddress</code> option.</p>
    </li>
  </ul>

  <h2 id="unused-mempool-memory-used-by-coincache">Unused mempool memory used by coincache</h2>

  <ul>
    <li>Before 0.14, memory reserved for mempool (using the <code class="language-text highlighter-rouge">-maxmempool</code> option)
went unused during initial block download, or IBD. In 0.14, the UTXO DB cache
(controlled with the <code class="language-text highlighter-rouge">-dbcache</code> option) borrows memory from the mempool
when there is extra memory available. This may result in an increase in
memory usage during IBD for those previously relying on only the <code class="language-text highlighter-rouge">-dbcache</code>
option to limit memory during that time.</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.14.0 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, minor refactors and string updates. For convenience
in locating the code changes and accompanying discussion, both the pull request
and git merge commit are mentioned.</p>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#8421 <code class="language-text highlighter-rouge">b77bb95</code> httpserver: drop boost dependency (theuni)</li>
    <li>#8638 <code class="language-text highlighter-rouge">f061415</code> rest.cpp: change <code class="language-text highlighter-rouge">HTTP_INTERNAL_SERVER_ERROR</code> to <code class="language-text highlighter-rouge">HTTP_BAD_REQUEST</code> (djpnewton)</li>
    <li>#8272 <code class="language-text highlighter-rouge">91990ee</code> Make the dummy argument to getaddednodeinfo optional (sipa)</li>
    <li>#8722 <code class="language-text highlighter-rouge">bb843ad</code> bitcoin-cli: More detailed error reporting (laanwj)</li>
    <li>#6996 <code class="language-text highlighter-rouge">7f71a3c</code> Add preciousblock RPC (sipa)</li>
    <li>#8788 <code class="language-text highlighter-rouge">97c7f73</code> Give RPC commands more information about the RPC request (jonasschnelli)</li>
    <li>#7948 <code class="language-text highlighter-rouge">5d2c8e5</code> Augment getblockchaininfo bip9_softforks data (mruddy)</li>
    <li>#8980 <code class="language-text highlighter-rouge">0e22855</code> importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)</li>
    <li>#9025 <code class="language-text highlighter-rouge">4d8558a</code> Getrawtransaction should take a bool for verbose (jnewbery)</li>
    <li>#8811 <code class="language-text highlighter-rouge">5754e03</code> Add support for JSON-RPC named arguments (laanwj)</li>
    <li>#9520 <code class="language-text highlighter-rouge">2456a83</code> Deprecate non-txindex getrawtransaction and better warning (sipa)</li>
    <li>#9518 <code class="language-text highlighter-rouge">a65ced1</code> Return height of last block pruned by pruneblockchain RPC (ryanofsky)</li>
    <li>#9222 <code class="language-text highlighter-rouge">7cb024e</code> Add ‘subtractFeeFromAmount’ option to ‘fundrawtransaction’ (dooglus)</li>
    <li>#8456 <code class="language-text highlighter-rouge">2ef52d3</code> Simplified <code class="language-text highlighter-rouge">bumpfee</code> command (mrbandrews)</li>
    <li>#9516 <code class="language-text highlighter-rouge">727a798</code> Bug-fix: listsinceblock: use fork point as reference for blocks in reorg’d chains (kallewoof)</li>
    <li>#9640 <code class="language-text highlighter-rouge">7bfb770</code> Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)</li>
    <li>#9673 <code class="language-text highlighter-rouge">8d6447e</code> Set correct metadata on bumpfee wallet transactions (ryanofsky)</li>
    <li>#9650 <code class="language-text highlighter-rouge">40f7e27</code> Better handle invalid parameters to signrawtransaction (TheBlueMatt)</li>
    <li>#9682 <code class="language-text highlighter-rouge">edc9e63</code> Require timestamps for importmulti keys (ryanofsky)</li>
    <li>#9108 <code class="language-text highlighter-rouge">d8e8b06</code> Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)</li>
    <li>#9756 <code class="language-text highlighter-rouge">7a93af8</code> Return error when importmulti called with invalid address (ryanofsky)</li>
    <li>#9778 <code class="language-text highlighter-rouge">ad168ef</code> Add two hour buffer to manual pruning (morcos)</li>
    <li>#9761 <code class="language-text highlighter-rouge">9828f9a</code> Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)</li>
    <li>#9474 <code class="language-text highlighter-rouge">48d7e0d</code> Mark the minconf parameter to move as ignored (sipa)</li>
    <li>#9619 <code class="language-text highlighter-rouge">861cb0c</code> Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)</li>
    <li>#9773 <code class="language-text highlighter-rouge">9072395</code> Return errors from importmulti if complete rescans are not successful (ryanofsky)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#8391 <code class="language-text highlighter-rouge">37d83bb</code> Consensus: Remove ISM (NicolasDorier)</li>
    <li>#8365 <code class="language-text highlighter-rouge">618c9dd</code> Treat high-sigop transactions as larger rather than rejecting them (sipa)</li>
    <li>#8814 <code class="language-text highlighter-rouge">14b7b3f</code> wallet, policy: ParameterInteraction: Don’t allow 0 fee (MarcoFalke)</li>
    <li>#8515 <code class="language-text highlighter-rouge">9bdf526</code> A few mempool removal optimizations (sipa)</li>
    <li>#8448 <code class="language-text highlighter-rouge">101c642</code> Store mempool and prioritization data to disk (sipa)</li>
    <li>#7730 <code class="language-text highlighter-rouge">3c03dc2</code> Remove priority estimation (morcos)</li>
    <li>#9111 <code class="language-text highlighter-rouge">fb15610</code> Remove unused variable <code class="language-text highlighter-rouge">UNLIKELY_PCT</code> from fees.h (fanquake)</li>
    <li>#9133 <code class="language-text highlighter-rouge">434e683</code> Unset fImporting for loading mempool (morcos)</li>
    <li>#9179 <code class="language-text highlighter-rouge">b9a87b4</code> Set <code class="language-text highlighter-rouge">DEFAULT_LIMITFREERELAY</code> = 0 kB/minute (MarcoFalke)</li>
    <li>#9239 <code class="language-text highlighter-rouge">3fbf079</code> Disable fee estimates for 1-block target (morcos)</li>
    <li>#7562 <code class="language-text highlighter-rouge">1eef038</code> Bump transaction version default to 2 (btcdrak)</li>
    <li>#9313,#9367 If we don’t allow free txs, always send a fee filter (morcos)</li>
    <li>#9346 <code class="language-text highlighter-rouge">b99a093</code> Batch construct batches (sipa)</li>
    <li>#9262 <code class="language-text highlighter-rouge">5a70572</code> Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)</li>
    <li>#9288 <code class="language-text highlighter-rouge">1ce7ede</code> Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)</li>
    <li>#9395 <code class="language-text highlighter-rouge">0fc1c31</code> Add test for <code class="language-text highlighter-rouge">-walletrejectlongchains</code> (morcos)</li>
    <li>#9107 <code class="language-text highlighter-rouge">7dac1e5</code> Safer modify new coins (morcos)</li>
    <li>#9312 <code class="language-text highlighter-rouge">a72f76c</code> Increase mempool expiry time to 2 weeks (morcos)</li>
    <li>#8610 <code class="language-text highlighter-rouge">c252685</code> Share unused mempool memory with coincache (sipa)</li>
    <li>#9138 <code class="language-text highlighter-rouge">f646275</code> Improve fee estimation (morcos)</li>
    <li>#9408 <code class="language-text highlighter-rouge">46b249e</code> Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)</li>
    <li>#9310 <code class="language-text highlighter-rouge">8c87f17</code> Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)</li>
    <li>#7871 <code class="language-text highlighter-rouge">e2e624d</code> Manual block file pruning (mrbandrews)</li>
    <li>#9507 <code class="language-text highlighter-rouge">0595042</code> Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)</li>
    <li>#9380 <code class="language-text highlighter-rouge">dd98f04</code> Separate different uses of minimum fees (morcos)</li>
    <li>#9596 <code class="language-text highlighter-rouge">71148b8</code> bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)</li>
    <li>#9371 <code class="language-text highlighter-rouge">4a1dc35</code> Notify on removal (morcos)</li>
    <li>#9519 <code class="language-text highlighter-rouge">9b4d267</code> Exclude RBF replacement txs from fee estimation (morcos)</li>
    <li>#8606 <code class="language-text highlighter-rouge">e2a1a1e</code> Fix some locks (sipa)</li>
    <li>#8681 <code class="language-text highlighter-rouge">6898213</code> Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)</li>
    <li>#8223 <code class="language-text highlighter-rouge">744d265</code> c++11: Use std::unique_ptr for block creation (domob1812)</li>
    <li>#9125 <code class="language-text highlighter-rouge">7490ae8</code> Make CBlock a vector of shared_ptr of CTransactions (sipa)</li>
    <li>#8930 <code class="language-text highlighter-rouge">93566e0</code> Move orphan processing to ActivateBestChain (TheBlueMatt)</li>
    <li>#8580 <code class="language-text highlighter-rouge">46904ee</code> Make CTransaction actually immutable (sipa)</li>
    <li>#9240 <code class="language-text highlighter-rouge">a1dcf2e</code> Remove txConflicted (morcos)</li>
    <li>#8589 <code class="language-text highlighter-rouge">e8cfe1e</code> Inline CTxInWitness inside CTxIn (sipa)</li>
    <li>#9349 <code class="language-text highlighter-rouge">2db4cbc</code> Make CScript (and prevector) c++11 movable (sipa)</li>
    <li>#9252 <code class="language-text highlighter-rouge">ce5c1f4</code> Release cs_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)</li>
    <li>#9283 <code class="language-text highlighter-rouge">869781c</code> A few more CTransactionRef optimizations (sipa)</li>
    <li>#9499 <code class="language-text highlighter-rouge">9c9af5a</code> Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)</li>
    <li>#9813 <code class="language-text highlighter-rouge">3972a8e</code> Read/write mempool.dat as a binary (paveljanik)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#8128 <code class="language-text highlighter-rouge">1030fa7</code> Turn net structures into dumb storage classes (theuni)</li>
    <li>#8282 <code class="language-text highlighter-rouge">026c6ed</code> Feeler connections to increase online addrs in the tried table (EthanHeilman)</li>
    <li>#8462 <code class="language-text highlighter-rouge">53f8f22</code> Move AdvertiseLocal debug output to net category (Mirobit)</li>
    <li>#8612 <code class="language-text highlighter-rouge">84decb5</code> Check for compatibility with download in FindNextBlocksToDownload (sipa)</li>
    <li>#8594 <code class="language-text highlighter-rouge">5b2ea29</code> Do not add random inbound peers to addrman (gmaxwell)</li>
    <li>#8085 <code class="language-text highlighter-rouge">6423116</code> Begin encapsulation (theuni)</li>
    <li>#8715 <code class="language-text highlighter-rouge">881d7ea</code> only delete CConnman if it’s been created (theuni)</li>
    <li>#8707 <code class="language-text highlighter-rouge">f07424a</code> Fix maxuploadtarget setting (theuni)</li>
    <li>#8661 <code class="language-text highlighter-rouge">d2e4655</code> Do not set an addr time penalty when a peer advertises itself (gmaxwell)</li>
    <li>#8822 <code class="language-text highlighter-rouge">9bc6a6b</code> Consistent checksum handling (laanwj)</li>
    <li>#8936 <code class="language-text highlighter-rouge">1230890</code> Report NodeId in misbehaving debug (rebroad)</li>
    <li>#8968 <code class="language-text highlighter-rouge">3cf496d</code> Don’t hold cs_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)</li>
    <li>#9002 <code class="language-text highlighter-rouge">e1d1f57</code> Make connect=0 disable automatic outbound connections (gmaxwell)</li>
    <li>#9050 <code class="language-text highlighter-rouge">fcf61b8</code> Make a few values immutable, and use deterministic randomness for the localnonce (theuni)</li>
    <li>#8969 <code class="language-text highlighter-rouge">3665483</code> Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)</li>
    <li>#8708 <code class="language-text highlighter-rouge">c8c572f</code> have CConnman handle message sending (theuni)</li>
    <li>#8709 <code class="language-text highlighter-rouge">1e50d22</code> Allow filterclear messages for enabling TX relay only (rebroad)</li>
    <li>#9045 <code class="language-text highlighter-rouge">9f554e0</code> Hash P2P messages as they are received instead of at process-time (TheBlueMatt)</li>
    <li>#9026 <code class="language-text highlighter-rouge">dc6b940</code> Fix handling of invalid compact blocks (sdaftuar)</li>
    <li>#8996 <code class="language-text highlighter-rouge">ab914a6</code> Network activity toggle (luke-jr)</li>
    <li>#9131 <code class="language-text highlighter-rouge">62af164</code> fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)</li>
    <li>#8872 <code class="language-text highlighter-rouge">0c577f2</code> Remove block-request logic from INV message processing (TheBlueMatt)</li>
    <li>#8690 <code class="language-text highlighter-rouge">791b58d</code> Do not fully sort all nodes for addr relay (sipa)</li>
    <li>#9128 <code class="language-text highlighter-rouge">76fec09</code> Decouple CConnman and message serialization (theuni)</li>
    <li>#9226 <code class="language-text highlighter-rouge">3bf06e9</code> Remove fNetworkNode and pnodeLocalHost (gmaxwell)</li>
    <li>#9352 <code class="language-text highlighter-rouge">a7f7651</code> Attempt reconstruction from all compact block announcements (sdaftuar)</li>
    <li>#9319 <code class="language-text highlighter-rouge">a55716a</code> Break addnode out from the outbound connection limits (gmaxwell)</li>
    <li>#9261 <code class="language-text highlighter-rouge">2742568</code> Add unstored orphans with rejected parents to recentRejects (morcos)</li>
    <li>#9441 <code class="language-text highlighter-rouge">8b66bf7</code> Massive speedup. Net locks overhaul (theuni)</li>
    <li>#9375 <code class="language-text highlighter-rouge">3908fc4</code> Relay compact block messages prior to full block connection (TheBlueMatt)</li>
    <li>#9400 <code class="language-text highlighter-rouge">8a445c5</code> Set peers as HB peers upon full block validation (instagibbs)</li>
    <li>#9561 <code class="language-text highlighter-rouge">6696b46</code> Wake message handling thread when we receive a new block (TheBlueMatt)</li>
    <li>#9535 <code class="language-text highlighter-rouge">82274c0</code> Split CNode::cs_vSend: message processing and message sending (TheBlueMatt)</li>
    <li>#9606 <code class="language-text highlighter-rouge">3f9f962</code> Consistently use GetTimeMicros() for inactivity checks (sdaftuar)</li>
    <li>#9594 <code class="language-text highlighter-rouge">fd70211</code> Send final alert message to older peers after connecting (gmaxwell)</li>
    <li>#9626 <code class="language-text highlighter-rouge">36966a1</code> Clean up a few CConnman cs_vNodes/CNode things (TheBlueMatt)</li>
    <li>#9609 <code class="language-text highlighter-rouge">4966917</code> Fix remaining net assertions (theuni)</li>
    <li>#9671 <code class="language-text highlighter-rouge">7821db3</code> Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)</li>
    <li>#9730 <code class="language-text highlighter-rouge">33f3b21</code> Remove bitseed.xf2.org form the dns seed list (jonasschnelli)</li>
    <li>#9698 <code class="language-text highlighter-rouge">2447c10</code> Fix socket close race (theuni)</li>
    <li>#9708 <code class="language-text highlighter-rouge">a06ede9</code> Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)</li>
    <li>#9715 <code class="language-text highlighter-rouge">b08656e</code> Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)</li>
    <li>#9720 <code class="language-text highlighter-rouge">e87ce95</code> Fix banning and disallow sending messages before receiving verack (theuni)</li>
    <li>#9268 <code class="language-text highlighter-rouge">09c4fd1</code> Fix rounding privacy leak introduced in #9260 (TheBlueMatt)</li>
    <li>#9075 <code class="language-text highlighter-rouge">9346f84</code> Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)</li>
    <li>#8688 <code class="language-text highlighter-rouge">047ded0</code> Move static global randomizer seeds into CConnman (sipa)</li>
    <li>#9289 <code class="language-text highlighter-rouge">d9ae1ce</code> net: drop boost::thread_group (theuni)</li>
  </ul>

  <h3 id="validation">Validation</h3>
  <ul>
    <li>#9014 <code class="language-text highlighter-rouge">d04aeba</code> Fix block-connection performance regression (TheBlueMatt)</li>
    <li>#9299 <code class="language-text highlighter-rouge">d52ce89</code> Remove no longer needed check for premature v2 txs (morcos)</li>
    <li>#9273 <code class="language-text highlighter-rouge">b68685a</code> Remove unused <code class="language-text highlighter-rouge">CDiskBlockPos*</code> argument from ProcessNewBlock (TheBlueMatt)</li>
    <li>#8895 <code class="language-text highlighter-rouge">b83264d</code> Better SigCache Implementation (JeremyRubin)</li>
    <li>#9490 <code class="language-text highlighter-rouge">e126d0c</code> Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)</li>
    <li>#9484 <code class="language-text highlighter-rouge">812714f</code> Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)</li>
    <li>#9511 <code class="language-text highlighter-rouge">7884956</code> Don’t overwrite validation state with corruption check (morcos)</li>
    <li>#9765 <code class="language-text highlighter-rouge">1e92e04</code> Harden against mistakes handling invalid blocks (sdaftuar)</li>
    <li>#9779 <code class="language-text highlighter-rouge">3c02b95</code> Update nMinimumChainWork and defaultAssumeValid (gmaxwell)</li>
    <li>#8524 <code class="language-text highlighter-rouge">19b0f33</code> Precompute sighashes (sipa)</li>
    <li>#9791 <code class="language-text highlighter-rouge">1825a03</code> Avoid VLA in hash.h (sipa)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#8238 <code class="language-text highlighter-rouge">6caf3ee</code> ZeroMQ 4.1.5 &amp;&amp; ZMQ on Windows (fanquake)</li>
    <li>#8520 <code class="language-text highlighter-rouge">b40e19c</code> Remove check for <code class="language-text highlighter-rouge">openssl/ec.h</code> (laanwj)</li>
    <li>#8617 <code class="language-text highlighter-rouge">de07fdc</code> Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)</li>
    <li>#8566 <code class="language-text highlighter-rouge">7b98895</code> Easy to use gitian building script (achow101)</li>
    <li>#8604 <code class="language-text highlighter-rouge">f256843</code> build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)</li>
    <li>#8640 <code class="language-text highlighter-rouge">2663e51</code> depends: Remove Qt46 package (fanquake)</li>
    <li>#8645 <code class="language-text highlighter-rouge">8ea4440</code> Remove unused Qt 4.6 patch (droark)</li>
    <li>#8608 <code class="language-text highlighter-rouge">7e9ab95</code> Install manpages via make install, also add some autogenerated manpages (nomnombtc)</li>
    <li>#8781 <code class="language-text highlighter-rouge">ca69ef4</code> contrib: delete <code class="language-text highlighter-rouge">qt_translations.py</code> (MarcoFalke)</li>
    <li>#8783 <code class="language-text highlighter-rouge">64dc645</code> share: remove qt/protobuf.pri (MarcoFalke)</li>
    <li>#8423 <code class="language-text highlighter-rouge">3166dff</code> depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)</li>
    <li>#8791 <code class="language-text highlighter-rouge">b694b0d</code> travis: cross-mac: explicitly enable gui (MarcoFalke)</li>
    <li>#8820 <code class="language-text highlighter-rouge">dc64141</code> depends: Fix Qt compilation with Xcode 8 (fanquake)</li>
    <li>#8730 <code class="language-text highlighter-rouge">489a6ab</code> depends: Add libevent compatibility patch for windows (laanwj)</li>
    <li>#8819 <code class="language-text highlighter-rouge">c841816</code> depends: Boost 1.61.0 (fanquake)</li>
    <li>#8826 <code class="language-text highlighter-rouge">f560d95</code> Do not include <code class="language-text highlighter-rouge">env_win.cc</code> on non-Windows systems (paveljanik)</li>
    <li>#8948 <code class="language-text highlighter-rouge">e077e00</code> Reorder Windows gitian build order to match Linux (Michagogo)</li>
    <li>#8568 <code class="language-text highlighter-rouge">078900d</code> new var <code class="language-text highlighter-rouge">DIST_CONTRIB</code> adds useful things for packagers from contrib (nomnombtc)</li>
    <li>#9114 <code class="language-text highlighter-rouge">21e6c6b</code> depends: Set <code class="language-text highlighter-rouge">OSX_MIN_VERSION</code> to 10.8 (fanquake)</li>
    <li>#9140 <code class="language-text highlighter-rouge">018a4eb</code> Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)</li>
    <li>#9156 <code class="language-text highlighter-rouge">a8b2a82</code> Add compile and link options echo to configure (jonasschnelli)</li>
    <li>#9393 <code class="language-text highlighter-rouge">03d85f6</code> Include cuckoocache header in Makefile (MarcoFalke)</li>
    <li>#9420 <code class="language-text highlighter-rouge">bebe369</code> Fix linker error when configured with –enable-lcov (droark)</li>
    <li>#9412 <code class="language-text highlighter-rouge">53442af</code> Fix ‘make deploy’ for OSX (jonasschnelli)</li>
    <li>#9475 <code class="language-text highlighter-rouge">7014506</code> Let autoconf detect presence of <code class="language-text highlighter-rouge">EVP_MD_CTX_new</code> (luke-jr)</li>
    <li>#9513 <code class="language-text highlighter-rouge">bbf193f</code> Fix qt distdir builds (theuni)</li>
    <li>#9471 <code class="language-text highlighter-rouge">ca615e6</code> depends: libevent 2.1.7rc (fanquake)</li>
    <li>#9468 <code class="language-text highlighter-rouge">f9117f2</code> depends: Dependency updates for 0.14.0 (fanquake)</li>
    <li>#9469 <code class="language-text highlighter-rouge">01c4576</code> depends: Qt 5.7.1 (fanquake)</li>
    <li>#9574 <code class="language-text highlighter-rouge">5ac6687</code> depends: Fix QT build on OSX (fanquake)</li>
    <li>#9646 <code class="language-text highlighter-rouge">720b579</code> depends: Fix cross build for qt5.7 (theuni)</li>
    <li>#9705 <code class="language-text highlighter-rouge">6a55515</code> Add options to override BDB cflags/libs (laanwj)</li>
    <li>#8249 <code class="language-text highlighter-rouge">4e1567a</code> Enable (and check for) 64-bit ASLR on Windows (laanwj)</li>
    <li>#9758 <code class="language-text highlighter-rouge">476cc47</code> Selectively suppress deprecation warnings (jonasschnelli)</li>
    <li>#9783 <code class="language-text highlighter-rouge">6d61a2b</code> release: bump gitian descriptors for a new 0.14 package cache (theuni)</li>
    <li>#9789 <code class="language-text highlighter-rouge">749fe95</code> build: add –enable-werror and warn on vla’s (theuni)</li>
    <li>#9831 <code class="language-text highlighter-rouge">99fd85c</code> build: force a c++ standard to be specified (theuni)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#8192 <code class="language-text highlighter-rouge">c503863</code> Remove URLs from About dialog translations (fanquake)</li>
    <li>#8540 <code class="language-text highlighter-rouge">36404ae</code> Fix random segfault when closing “Choose data directory” dialog (laanwj)</li>
    <li>#8517 <code class="language-text highlighter-rouge">2468292</code> Show wallet HD state in statusbar (jonasschnelli)</li>
    <li>#8463 <code class="language-text highlighter-rouge">62a5a8a</code> Remove Priority from coincontrol dialog (MarcoFalke)</li>
    <li>#7579 <code class="language-text highlighter-rouge">0606f95</code> Show network/chain errors in the GUI (jonasschnelli)</li>
    <li>#8583 <code class="language-text highlighter-rouge">c19f8a4</code> Show XTHIN in GUI (rebroad)</li>
    <li>#7783 <code class="language-text highlighter-rouge">4335d5a</code> RPC-Console: support nested commands and simple value queries (jonasschnelli)</li>
    <li>#8672 <code class="language-text highlighter-rouge">6052d50</code> Show transaction size in transaction details window (Cocosoft)</li>
    <li>#8777 <code class="language-text highlighter-rouge">fec6af7</code> WalletModel: Expose disablewallet (MarcoFalke)</li>
    <li>#8371 <code class="language-text highlighter-rouge">24f72e9</code> Add out-of-sync modal info layer (jonasschnelli)</li>
    <li>#8885 <code class="language-text highlighter-rouge">b2fec4e</code> Fix ban from qt console (theuni)</li>
    <li>#8821 <code class="language-text highlighter-rouge">bf8e68a</code> sync-overlay: Don’t block during reindex (MarcoFalke)</li>
    <li>#8906 <code class="language-text highlighter-rouge">088d1f4</code> sync-overlay: Don’t show progress twice (MarcoFalke)</li>
    <li>#8918 <code class="language-text highlighter-rouge">47ace42</code> Add “Copy URI” to payment request context menu (luke-jr)</li>
    <li>#8925 <code class="language-text highlighter-rouge">f628d9a</code> Display minimum ping in debug window (rebroad)</li>
    <li>#8774 <code class="language-text highlighter-rouge">3e942a7</code> Qt refactors to better abstract wallet access (luke-jr)</li>
    <li>#8985 <code class="language-text highlighter-rouge">7b1bfa3</code> Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)</li>
    <li>#8989 <code class="language-text highlighter-rouge">d2143dc</code> Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)</li>
    <li>#9043 <code class="language-text highlighter-rouge">273bde3</code> Return useful error message on ATMP failure (MarcoFalke)</li>
    <li>#9088 <code class="language-text highlighter-rouge">4e57824</code> Reduce ambiguity of warning message (rebroad)</li>
    <li>#8874 <code class="language-text highlighter-rouge">e984730</code> Multiple Selection for peer and ban tables (achow101)</li>
    <li>#9145 <code class="language-text highlighter-rouge">924745d</code> Make network disabled icon 50% opaque (MarcoFalke)</li>
    <li>#9130 <code class="language-text highlighter-rouge">ac489b2</code> Mention the new network toggle functionality in the tooltip (paveljanik)</li>
    <li>#9218 <code class="language-text highlighter-rouge">4d955fc</code> Show progress overlay when clicking spinner icon (laanwj)</li>
    <li>#9280 <code class="language-text highlighter-rouge">e15660c</code> Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)</li>
    <li>#9296 <code class="language-text highlighter-rouge">fde7d99</code> Fix missed change to WalletTx structure (morcos)</li>
    <li>#9266 <code class="language-text highlighter-rouge">2044e37</code> Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)</li>
    <li>#9255 <code class="language-text highlighter-rouge">9851a84</code> layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)</li>
    <li>#9330 <code class="language-text highlighter-rouge">47e6a19</code> Console: add security warning (jonasschnelli)</li>
    <li>#9329 <code class="language-text highlighter-rouge">db45ad8</code> Console: allow empty arguments (jonasschnelli)</li>
    <li>#8877 <code class="language-text highlighter-rouge">6dc4c43</code> Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)</li>
    <li>#9462 <code class="language-text highlighter-rouge">649cf5f</code> Do not translate tilde character (MarcoFalke)</li>
    <li>#9457 <code class="language-text highlighter-rouge">123ea73</code> Select more files for translation (MarcoFalke)</li>
    <li>#9413 <code class="language-text highlighter-rouge">fd7d8c7</code> CoinControl: Allow non-wallet owned change addresses (jonasschnelli)</li>
    <li>#9461 <code class="language-text highlighter-rouge">b250686</code> Improve progress display during headers-sync and peer-finding (jonasschnelli)</li>
    <li>#9588 <code class="language-text highlighter-rouge">5086452</code> Use nPowTargetSpacing constant (MarcoFalke)</li>
    <li>#9637 <code class="language-text highlighter-rouge">d9e4d1d</code> Fix transaction details output-index to reflect vout index (jonasschnelli)</li>
    <li>#9718 <code class="language-text highlighter-rouge">36f9d3a</code> Qt/Intro: Various fixes (luke-jr)</li>
    <li>#9735 <code class="language-text highlighter-rouge">ec66d06</code> devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)</li>
    <li>#9755 <code class="language-text highlighter-rouge">a441db0</code> Bugfix: Qt/Options: Restore persistent “restart required” notice (luke-jr)</li>
    <li>#9817 <code class="language-text highlighter-rouge">7d75a5a</code> Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#8152 <code class="language-text highlighter-rouge">b9c1cd8</code> Remove <code class="language-text highlighter-rouge">CWalletDB*</code> parameter from CWallet::AddToWallet (pstratem)</li>
    <li>#8432 <code class="language-text highlighter-rouge">c7e05b3</code> Make CWallet::fFileBacked private (pstratem)</li>
    <li>#8445 <code class="language-text highlighter-rouge">f916700</code> Move CWallet::setKeyPool to private section of CWallet (pstratem)</li>
    <li>#8564 <code class="language-text highlighter-rouge">0168019</code> Remove unused code/conditions in ReadAtCursor (jonasschnelli)</li>
    <li>#8601 <code class="language-text highlighter-rouge">37ac678</code> Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)</li>
    <li>#8494 <code class="language-text highlighter-rouge">a5b20ed</code> init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)</li>
    <li>#8760 <code class="language-text highlighter-rouge">02ac669</code> init: Get rid of some <code class="language-text highlighter-rouge">ENABLE_WALLET</code> (MarcoFalke)</li>
    <li>#8696 <code class="language-text highlighter-rouge">a1f8d3e</code> Wallet: Remove last external reference to CWalletDB (pstratem)</li>
    <li>#8768 <code class="language-text highlighter-rouge">886e8c9</code> init: Get rid of fDisableWallet (MarcoFalke)</li>
    <li>#8486 <code class="language-text highlighter-rouge">ab0b411</code> Add high transaction fee warnings (MarcoFalke)</li>
    <li>#8851 <code class="language-text highlighter-rouge">940748b</code> Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)</li>
    <li>#8287 <code class="language-text highlighter-rouge">e10af96</code> Set fLimitFree = true (MarcoFalke)</li>
    <li>#8928 <code class="language-text highlighter-rouge">c587577</code> Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)</li>
    <li>#7551 <code class="language-text highlighter-rouge">f2d7056</code> Add importmulti RPC call (pedrobranco)</li>
    <li>#9016 <code class="language-text highlighter-rouge">0dcb888</code> Return useful error message on ATMP failure (instagibbs)</li>
    <li>#8753 <code class="language-text highlighter-rouge">f8723d2</code> Locked memory manager (laanwj)</li>
    <li>#8828 <code class="language-text highlighter-rouge">a4fd8df</code> Move CWalletDB::ReorderTransactions to CWallet (pstratem)</li>
    <li>#8977 <code class="language-text highlighter-rouge">6a1343f</code> Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)</li>
    <li>#9036 <code class="language-text highlighter-rouge">ed0cc50</code> Change default confirm target from 2 to 6 (laanwj)</li>
    <li>#9071 <code class="language-text highlighter-rouge">d1871da</code> Declare wallet.h functions inline (sipa)</li>
    <li>#9132 <code class="language-text highlighter-rouge">f54e460</code> Make strWalletFile const (jonasschnelli)</li>
    <li>#9141 <code class="language-text highlighter-rouge">5ea5e04</code> Remove unnecessary calls to CheckFinalTx (jonasschnelli)</li>
    <li>#9165 <code class="language-text highlighter-rouge">c01f16a</code> SendMoney: use already-calculated balance (instagibbs)</li>
    <li>#9311 <code class="language-text highlighter-rouge">a336d13</code> Flush wallet after abandontransaction (morcos)</li>
    <li>#8717 <code class="language-text highlighter-rouge">38e4887</code> Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)</li>
    <li>#9446 <code class="language-text highlighter-rouge">510c0d9</code> SetMerkleBranch: remove unused code, remove cs_main lock requirement (jonasschnelli)</li>
    <li>#8776 <code class="language-text highlighter-rouge">2a524b8</code> Wallet refactoring leading up to multiwallet (luke-jr)</li>
    <li>#9465 <code class="language-text highlighter-rouge">a7d55c9</code> Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)</li>
    <li>#9404 <code class="language-text highlighter-rouge">12e3112</code> Smarter coordination of change and fee in CreateTransaction (morcos)</li>
    <li>#9377 <code class="language-text highlighter-rouge">fb75cd0</code> fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)</li>
    <li>#9578 <code class="language-text highlighter-rouge">923dc44</code> Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)</li>
    <li>#9227 <code class="language-text highlighter-rouge">02464da</code> Make nWalletDBUpdated atomic to avoid a potential race (pstratem)</li>
    <li>#9764 <code class="language-text highlighter-rouge">f8af89a</code> Prevent “overrides a member function but is not marked ‘override’” warnings (laanwj)</li>
    <li>#9771 <code class="language-text highlighter-rouge">e43a585</code> Add missing cs_wallet lock that triggers new lock held assertion (ryanofsky)</li>
    <li>#9316 <code class="language-text highlighter-rouge">3097ea4</code> Disable free transactions when relay is disabled (MarcoFalke)</li>
    <li>#9615 <code class="language-text highlighter-rouge">d2c9e4d</code> Wallet incremental fee (morcos)</li>
    <li>#9760 <code class="language-text highlighter-rouge">40c754c</code> Remove importmulti always-true check (ryanofsky)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#8270 <code class="language-text highlighter-rouge">6e5e5ab</code> Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)</li>
    <li>#8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)</li>
    <li>#8482 <code class="language-text highlighter-rouge">740cff5</code> Use single cache dir for chains (MarcoFalke)</li>
    <li>#8450 <code class="language-text highlighter-rouge">21857d2</code> Replace <code class="language-text highlighter-rouge">rpc_wallet_tests.cpp</code> with python RPC unit tests (pstratem)</li>
    <li>#8671 <code class="language-text highlighter-rouge">ddc3080</code> Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)</li>
    <li>#8680 <code class="language-text highlighter-rouge">666eaf0</code> Address Travis spurious failures (theuni)</li>
    <li>#8789 <code class="language-text highlighter-rouge">e31a43c</code> pull-tester: Only print output when failed (MarcoFalke)</li>
    <li>#8810 <code class="language-text highlighter-rouge">14e8f99</code> tests: Add exception error message for JSONRPCException (laanwj)</li>
    <li>#8830 <code class="language-text highlighter-rouge">ef0801b</code> test: Add option to run bitcoin-util-test.py manually (jnewbery)</li>
    <li>#8881 <code class="language-text highlighter-rouge">e66cc1d</code> Add some verbose logging to bitcoin-util-test.py (jnewbery)</li>
    <li>#8922 <code class="language-text highlighter-rouge">0329511</code> Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)</li>
    <li>#8873 <code class="language-text highlighter-rouge">74dc388</code> Add microbenchmarks to profile more code paths (ryanofsky)</li>
    <li>#9032 <code class="language-text highlighter-rouge">6a8be7b</code> test: Add format-dependent comparison to bctest (laanwj)</li>
    <li>#9023 <code class="language-text highlighter-rouge">774db92</code> Add logging to bitcoin-util-test.py (jnewbery)</li>
    <li>#9065 <code class="language-text highlighter-rouge">c9bdf9a</code> Merge <code class="language-text highlighter-rouge">doc/unit-tests.md</code> into <code class="language-text highlighter-rouge">src/test/README.md</code> (laanwj)</li>
    <li>#9069 <code class="language-text highlighter-rouge">ed64bce</code> Clean up bctest.py and bitcoin-util-test.py (jnewbery)</li>
    <li>#9095 <code class="language-text highlighter-rouge">b8f43e3</code> test: Fix test_random includes (MarcoFalke)</li>
    <li>#8894 <code class="language-text highlighter-rouge">faec09b</code> Testing: Include fRelay in mininode version messages (jnewbery)</li>
    <li>#9097 <code class="language-text highlighter-rouge">e536499</code> Rework <code class="language-text highlighter-rouge">sync_*</code> and preciousblock.py (MarcoFalke)</li>
    <li>#9049 <code class="language-text highlighter-rouge">71bc39e</code> Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)</li>
    <li>#9136 <code class="language-text highlighter-rouge">b422913</code> sync_blocks cleanup (ryanofsky)</li>
    <li>#9151 <code class="language-text highlighter-rouge">4333b1c</code> proxy_test: Calculate hardcoded port numbers (MarcoFalke)</li>
    <li>#9206 <code class="language-text highlighter-rouge">e662d28</code> Make test constant consistent with consensus.h (btcdrak)</li>
    <li>#9139 <code class="language-text highlighter-rouge">0de7fd3</code> Change sync_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)</li>
    <li>#9100 <code class="language-text highlighter-rouge">97ec6e5</code> tx_valid: re-order inputs to how they are encoded (dcousens)</li>
    <li>#9202 <code class="language-text highlighter-rouge">e56cf67</code> bench: Add support for measuring CPU cycles (laanwj)</li>
    <li>#9223 <code class="language-text highlighter-rouge">5412c08</code> unification of Bloom filter representation (s-matthew-english)</li>
    <li>#9257 <code class="language-text highlighter-rouge">d7ba4a2</code> Dump debug logs on travis failures (sdaftuar)</li>
    <li>#9221 <code class="language-text highlighter-rouge">9e4bb31</code> Get rid of duplicate code (MarcoFalke)</li>
    <li>#9274 <code class="language-text highlighter-rouge">919db03</code> Use cached utxo set to fix performance regression (MarcoFalke)</li>
    <li>#9276 <code class="language-text highlighter-rouge">ea33f19</code> Some minor testing cleanups (morcos)</li>
    <li>#9291 <code class="language-text highlighter-rouge">8601784</code> Remove mapOrphanTransactionsByPrev from DoS_tests (sipa)</li>
    <li>#9309 <code class="language-text highlighter-rouge">76fcd9d</code> Wallet needs to stay unlocked for whole test (morcos)</li>
    <li>#9172 <code class="language-text highlighter-rouge">5bc209c</code> Resurrect pstratem’s “Simple fuzzing framework” (laanwj)</li>
    <li>#9331 <code class="language-text highlighter-rouge">c6fd923</code> Add test for rescan feature of wallet key import RPCs (ryanofsky)</li>
    <li>#9354 <code class="language-text highlighter-rouge">b416095</code> Make fuzzer actually test CTxOutCompressor (sipa)</li>
    <li>#9390,#9416 travis: make distdir (MarcoFalke)</li>
    <li>#9308 <code class="language-text highlighter-rouge">0698639</code> test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)</li>
    <li>#9406 <code class="language-text highlighter-rouge">0f921e6</code> Re-enable a blank v1 Tx JSON test (droark)</li>
    <li>#9435 <code class="language-text highlighter-rouge">dbc8a8c</code> Removed unused variable in test, fixing warning (ryanofsky)</li>
    <li>#9436 <code class="language-text highlighter-rouge">dce853e</code> test: Include tx data in <code class="language-text highlighter-rouge">EXTRA_DIST</code> (MarcoFalke)</li>
    <li>#9525 <code class="language-text highlighter-rouge">02e5308</code> test: Include tx data in <code class="language-text highlighter-rouge">EXTRA_DIST</code> (MarcoFalke)</li>
    <li>#9498 <code class="language-text highlighter-rouge">054d664</code> Basic CCheckQueue Benchmarks (JeremyRubin)</li>
    <li>#9554 <code class="language-text highlighter-rouge">0b96abc</code> test: Avoid potential NULL pointer dereference in <code class="language-text highlighter-rouge">addrman_tests.cpp</code> (practicalswift)</li>
    <li>#9628 <code class="language-text highlighter-rouge">f895023</code> Increase a sync_blocks timeout in pruning.py (sdaftuar)</li>
    <li>#9638 <code class="language-text highlighter-rouge">a7ea2f8</code> Actually test assertions in pruning.py (MarcoFalke)</li>
    <li>#9647 <code class="language-text highlighter-rouge">e99f0d7</code> Skip RAII event tests if libevent is built without <code class="language-text highlighter-rouge">event_set_mem_functions</code> (luke-jr)</li>
    <li>#9691 <code class="language-text highlighter-rouge">fc67cd2</code> Init ECC context for <code class="language-text highlighter-rouge">test_bitcoin_fuzzy</code> (gmaxwell)</li>
    <li>#9712 <code class="language-text highlighter-rouge">d304fef</code> bench: Fix initialization order in registration (laanwj)</li>
    <li>#9707 <code class="language-text highlighter-rouge">b860915</code> Fix RPC failure testing (jnewbery)</li>
    <li>#9269 <code class="language-text highlighter-rouge">43e8150</code> Align struct COrphan definition (sipa)</li>
    <li>#9820 <code class="language-text highlighter-rouge">599c69a</code> Fix pruning test broken by 2 hour manual prune window (ryanofsky)</li>
    <li>#9824 <code class="language-text highlighter-rouge">260c71c</code> qa: Check return code when stopping nodes (MarcoFalke)</li>
    <li>#9875 <code class="language-text highlighter-rouge">50953c2</code> tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)</li>
    <li>#9839 <code class="language-text highlighter-rouge">eddaa6b</code> [qa] Make import-rescan.py watchonly check reliable (ryanofsky)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#8332 <code class="language-text highlighter-rouge">806b9e7</code> Clarify witness branches in transaction.h serialization (dcousens)</li>
    <li>#8935 <code class="language-text highlighter-rouge">0306978</code> Documentation: Building on Windows with WSL (pooleja)</li>
    <li>#9144 <code class="language-text highlighter-rouge">c98f6b3</code> Correct waitforblockheight example help text (fanquake)</li>
    <li>#9407 <code class="language-text highlighter-rouge">041331e</code> Added missing colons in when running help command (anditto)</li>
    <li>#9378 <code class="language-text highlighter-rouge">870cd2b</code> Add documentation for CWalletTx::fFromMe member (ryanofsky)</li>
    <li>#9297 <code class="language-text highlighter-rouge">0b73807</code> Various RPC help outputs updated (Mirobit)</li>
    <li>#9613 <code class="language-text highlighter-rouge">07421cf</code> Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)</li>
    <li>#9663 <code class="language-text highlighter-rouge">e30d928</code> Clarify listunspent amount description (instagibbs)</li>
    <li>#9396 <code class="language-text highlighter-rouge">d65a13b</code> Updated listsinceblock rpc documentation (accraze)</li>
    <li>#8747 <code class="language-text highlighter-rouge">ce43630</code> rpc: Fix transaction size comments and RPC help text (jnewbery)</li>
    <li>#8058 <code class="language-text highlighter-rouge">bbd9740</code> Doc: Add issue template (AmirAbrams)</li>
    <li>#8567 <code class="language-text highlighter-rouge">85d4e21</code> Add default port numbers to REST doc (djpnewton)</li>
    <li>#8624 <code class="language-text highlighter-rouge">89de153</code> build: Mention curl (MarcoFalke)</li>
    <li>#8786 <code class="language-text highlighter-rouge">9da7366</code> Mandatory copyright agreement (achow101)</li>
    <li>#8823 <code class="language-text highlighter-rouge">7b05af6</code> Add privacy recommendation when running hidden service (laanwj)</li>
    <li>#9433 <code class="language-text highlighter-rouge">caa2f10</code> Update the Windows build notes (droark)</li>
    <li>#8879 <code class="language-text highlighter-rouge">f928050</code> Rework docs (MarcoFalke)</li>
    <li>#8887 <code class="language-text highlighter-rouge">61d191f</code> Improve GitHub issue template (fanquake)</li>
    <li>#8787 <code class="language-text highlighter-rouge">279bbad</code> Add missing autogen to example builds (AmirAbrams)</li>
    <li>#8892 <code class="language-text highlighter-rouge">d270c30</code> Add build instructions for FreeBSD (laanwj)</li>
    <li>#8890 <code class="language-text highlighter-rouge">c71a654</code> Update Doxygen configuration file (fanquake)</li>
    <li>#9207 <code class="language-text highlighter-rouge">fa1f944</code> Move comments above bash command in build-unix (AmirAbrams)</li>
    <li>#9219 <code class="language-text highlighter-rouge">c4522e7</code> Improve windows build instructions using Linux subsystem (laanwj)</li>
    <li>#8954 <code class="language-text highlighter-rouge">932d02a</code> contrib: Add README for pgp keys (MarcoFalke)</li>
    <li>#9093 <code class="language-text highlighter-rouge">2fae5b9</code> release-process: Mention GitHub release and archived release notes (MarcoFalke)</li>
    <li>#8743 <code class="language-text highlighter-rouge">bae178f</code> Remove old manpages from contrib/debian in favour of doc/man (fanquake)</li>
    <li>#9550 <code class="language-text highlighter-rouge">4105cb6</code> Trim down the XP notice and say more about what we support (gmaxwell)</li>
    <li>#9246 <code class="language-text highlighter-rouge">9851498</code> Developer docs about existing subtrees (gmaxwell)</li>
    <li>#9401 <code class="language-text highlighter-rouge">c2ea1e6</code> Make rpcauth help message clearer, add example in example .conf (instagibbs)</li>
    <li>#9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)</li>
    <li>#8771 <code class="language-text highlighter-rouge">bc9e3ab</code> contributing: Mention not to open several pulls (luke-jr)</li>
    <li>#8852 <code class="language-text highlighter-rouge">7b784cc</code> Mention Gitian building script in doc (Laudaa) (laanwj)</li>
    <li>#8915 <code class="language-text highlighter-rouge">03dd707</code> Add copyright/patent issues to possible NACK reasons (petertodd)</li>
    <li>#8965 <code class="language-text highlighter-rouge">23e03f8</code> Mention that PPA doesn’t support Debian (anduck)</li>
    <li>#9115 <code class="language-text highlighter-rouge">bfc7aad</code> Mention reporting security issues responsibly (paveljanik)</li>
    <li>#9840 <code class="language-text highlighter-rouge">08e0690</code> Update sendfrom RPC help to correct coin selection misconception (ryanofsky)</li>
    <li>#9865 <code class="language-text highlighter-rouge">289204f</code> Change bitcoin address in RPC help message (marijnfs)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#8274 <code class="language-text highlighter-rouge">7a2d402</code> util: Update tinyformat (laanwj)</li>
    <li>#8291 <code class="language-text highlighter-rouge">5cac8b1</code> util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)</li>
    <li>#8557 <code class="language-text highlighter-rouge">44691f3</code> contrib: Rework verifybinaries (MarcoFalke)</li>
    <li>#8621 <code class="language-text highlighter-rouge">e8ed6eb</code> contrib: python: Don’t use shell=True (MarcoFalke)</li>
    <li>#8813 <code class="language-text highlighter-rouge">fb24d7e</code> bitcoind: Daemonize using daemon(3) (laanwj)</li>
    <li>#9004 <code class="language-text highlighter-rouge">67728a3</code> Clarify <code class="language-text highlighter-rouge">listenonion</code> (unsystemizer)</li>
    <li>#8674 <code class="language-text highlighter-rouge">bae81b8</code> tools for analyzing, updating and adding copyright headers in source files (isle2983)</li>
    <li>#8976 <code class="language-text highlighter-rouge">8c6218a</code> libconsensus: Add input validation of flags (laanwj)</li>
    <li>#9112 <code class="language-text highlighter-rouge">46027e8</code> Avoid ugly exception in log on unknown inv type (laanwj)</li>
    <li>#8837 <code class="language-text highlighter-rouge">2108911</code> Allow bitcoin-tx to parse partial transactions (jnewbery)</li>
    <li>#9204 <code class="language-text highlighter-rouge">74ced54</code> Clarify CreateTransaction error messages (instagibbs)</li>
    <li>#9265 <code class="language-text highlighter-rouge">31bcc66</code> bitcoin-cli: Make error message less confusing (laanwj)</li>
    <li>#9303 <code class="language-text highlighter-rouge">72bf1b3</code> Update comments in ctaes (sipa)</li>
    <li>#9417 <code class="language-text highlighter-rouge">c4b7d4f</code> Do not evaluate hidden LogPrint arguments (sipa)</li>
    <li>#9506 <code class="language-text highlighter-rouge">593a00c</code> RFC: Improve style for if indentation (sipa)</li>
    <li>#8883 <code class="language-text highlighter-rouge">d5d4ad8</code> Add all standard TXO types to bitcoin-tx (jnewbery)</li>
    <li>#9531 <code class="language-text highlighter-rouge">23281a4</code> Release notes for estimation changes  (morcos)</li>
    <li>#9486 <code class="language-text highlighter-rouge">f62bc10</code> Make peer=%d log prints consistent (TheBlueMatt)</li>
    <li>#9552 <code class="language-text highlighter-rouge">41cb05c</code> Add IPv6 support to qos.sh (jamesmacwhite)</li>
    <li>#9542 <code class="language-text highlighter-rouge">e9e7993</code> Docs: Update CONTRIBUTING.md (jnewbery)</li>
    <li>#9649 <code class="language-text highlighter-rouge">53ab12d</code> Remove unused clang format dev script (MarcoFalke)</li>
    <li>#9625 <code class="language-text highlighter-rouge">77bd8c4</code> Increase minimum debug.log size to 10MB after shrink (morcos)</li>
    <li>#9070 <code class="language-text highlighter-rouge">7b22e50</code> Lockedpool fixes (kazcw)</li>
    <li>#8779 <code class="language-text highlighter-rouge">7008e28</code> contrib: Delete spendfrom (MarcoFalke)</li>
    <li>#9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)</li>
    <li>#9063 <code class="language-text highlighter-rouge">f2a6e82</code> Use deprecated <code class="language-text highlighter-rouge">MAP_ANON</code> if <code class="language-text highlighter-rouge">MAP_ANONYMOUS</code> is not defined (paveljanik)</li>
    <li>#9060 <code class="language-text highlighter-rouge">1107653</code> Fix bloom filter init to isEmpty = true (robmcl4)</li>
    <li>#8613 <code class="language-text highlighter-rouge">613bda4</code> LevelDB 1.19 (sipa)</li>
    <li>#9225 <code class="language-text highlighter-rouge">5488514</code> Fix some benign races (TheBlueMatt)</li>
    <li>#8736 <code class="language-text highlighter-rouge">5fa7b07</code> base58: Improve DecodeBase58 performance (wjx)</li>
    <li>#9039 <code class="language-text highlighter-rouge">e81df49</code> Various serialization simplifcations and optimizations (sipa)</li>
    <li>#9010 <code class="language-text highlighter-rouge">a143b88</code> Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)</li>
    <li>#9230 <code class="language-text highlighter-rouge">c79e52a</code> Fix some benign races in timestamp logging (TheBlueMatt)</li>
    <li>#9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)</li>
    <li>#9236 <code class="language-text highlighter-rouge">7f72568</code> Fix races for strMiscWarning and <code class="language-text highlighter-rouge">fLargeWork*Found</code>, make QT runawayException use GetWarnings (gmaxwell)</li>
    <li>#9243 <code class="language-text highlighter-rouge">7aa7004</code> Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)</li>
    <li>#9387 <code class="language-text highlighter-rouge">cfe41d7</code> RAII of libevent stuff using unique ptrs with deleters (kallewoof)</li>
    <li>#9472 <code class="language-text highlighter-rouge">fac0f30</code> Disentangle progress estimation from checkpoints and update it (sipa)</li>
    <li>#9512 <code class="language-text highlighter-rouge">6012967</code> Fix various things -fsanitize complains about (sipa)</li>
    <li>#9373,#9580 Various linearization script issues (droark)</li>
    <li>#9674 <code class="language-text highlighter-rouge">dd163f5</code> Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)</li>
    <li>#8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)</li>
    <li>#9656 <code class="language-text highlighter-rouge">7c93952</code> Check verify-commits on pushes to master (TheBlueMatt)</li>
    <li>#9679 <code class="language-text highlighter-rouge">a351162</code> Access WorkQueue::running only within the cs lock (TheBlueMatt)</li>
    <li>#9777 <code class="language-text highlighter-rouge">8dee822</code> Handle unusual maxsigcachesize gracefully (jnewbery)</li>
    <li>#8863,#8807 univalue: Pull subtree (MarcoFalke)</li>
    <li>#9798 <code class="language-text highlighter-rouge">e22c067</code> Fix Issue #9775 (Check returned value of fopen) (kirit93)</li>
    <li>#9856 <code class="language-text highlighter-rouge">69832aa</code> Terminate immediately when allocation fails (theuni)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>accraze</li>
    <li>adlawren</li>
    <li>Alex Morcos</li>
    <li>Alexey Vesnin</li>
    <li>Amir Abrams</li>
    <li>Anders Øyvind Urke-Sætre</li>
    <li>Anditto Heristyo</li>
    <li>Andrew Chow</li>
    <li>anduck</li>
    <li>Anthony Towns</li>
    <li>Brian Deery</li>
    <li>BtcDrak</li>
    <li>Chris Moore</li>
    <li>Chris Stewart</li>
    <li>Christian Barcenas</li>
    <li>Christian Decker</li>
    <li>Cory Fields</li>
    <li>crowning-</li>
    <li>CryptAxe</li>
    <li>CryptoVote</li>
    <li>Dagur Valberg Johannsson</li>
    <li>Daniel Cousens</li>
    <li>Daniel Kraft</li>
    <li>Derek Miller</li>
    <li>djpnewton</li>
    <li>Don Patterson</li>
    <li>Doug</li>
    <li>Douglas Roark</li>
    <li>Ethan Heilman</li>
    <li>fsb4000</li>
    <li>Gaurav Rana</li>
    <li>Geoffrey Tsui</li>
    <li>Greg Walker</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>Hampus Sjöberg</li>
    <li>isle2983</li>
    <li>Ivo van der Sangen</li>
    <li>James White</li>
    <li>Jameson Lopp</li>
    <li>Jeremy Rubin</li>
    <li>Jiaxing Wang</li>
    <li>jnewbery</li>
    <li>John Newbery</li>
    <li>Johnson Lau</li>
    <li>Jon Lund Steffensen</li>
    <li>Jonas Schnelli</li>
    <li>jonnynewbs</li>
    <li>Jorge Timón</li>
    <li>Justin Camarena</li>
    <li>Karl-Johan Alm</li>
    <li>Kaz Wesley</li>
    <li>kirit93</li>
    <li>Koki Takahashi</li>
    <li>Lauda</li>
    <li>leijurv</li>
    <li>lizhi</li>
    <li>Luke Dashjr</li>
    <li>maiiz</li>
    <li>MarcoFalke</li>
    <li>Marijn Stollenga</li>
    <li>Marty Jones</li>
    <li>Masahiko Hyuga</li>
    <li>Matt Corallo</li>
    <li>Matthew King</li>
    <li>matthias</li>
    <li>Micha</li>
    <li>Michael Ford</li>
    <li>Michael Rotarius</li>
    <li>Mitchell Cash</li>
    <li>mrbandrews</li>
    <li>mruddy</li>
    <li>Nicolas DORIER</li>
    <li>nomnombtc</li>
    <li>Patrick Strateman</li>
    <li>Pavel Janík</li>
    <li>Pedro Branco</li>
    <li>Peter Todd</li>
    <li>Pieter Wuille</li>
    <li>poole_party</li>
    <li>practicalswift</li>
    <li>R E Broadley</li>
    <li>randy-waterhouse</li>
    <li>Richard Kiss</li>
    <li>Robert McLaughlin</li>
    <li>rodasmith</li>
    <li>Russell Yanofsky</li>
    <li>S. Matthew English</li>
    <li>Sev</li>
    <li>Spencer Lievens</li>
    <li>Stanislas Marion</li>
    <li>Steven</li>
    <li>Suhas Daftuar</li>
    <li>Thomas Snider</li>
    <li>UdjinM6</li>
    <li>unsystemizer</li>
    <li>whythat</li>
    <li>Will Binns</li>
    <li>Wladimir J. van der Laan</li>
    <li>wodry</li>
    <li>Zak Wilcox</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.13.2 released</title>
            <link>https://bitcoin.org/en/release/v0.13.2</link>
            <guid>https://bitcoin.org/en/release/v0.13.2</guid>
          
            <pubDate>Tue, 03 Jan 2017 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.13.2 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.13.2/">https://bitcoin.org/bin/bitcoin-core-0.13.2/</a></p>

  <p>This is a new minor version release, including various bugfixes and
performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
an OS initially released in 2001. This means that not even critical security
updates will be released anymore. Without security updates, using a bitcoin
wallet on a XP machine is irresponsible at least.</p>

  <p>In addition to that, with 0.12.x there have been varied reports of Bitcoin Core
randomly crashing on Windows XP. It is <a href="https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891">not clear</a>
what the source of these crashes is, but it is likely that upstream
libraries such as Qt are no longer being tested on XP.</p>

  <p>We do not have time nor resources to provide support for an OS that is
end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are
suggested to upgrade to a newer version of Windows, or install an alternative OS
that is supported.</p>

  <p>No attempt is made to prevent installing or running the software on Windows XP,
you can still do so at your own risk, but do not expect it to work: do not
report issues about Windows XP to the issue tracker.</p>

  <p>From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, 
but severe issues with the libc++ version on 10.7.x keep it from running reliably. 
0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="change-to-wallet-handling-of-mempool-rejection">Change to wallet handling of mempool rejection</h2>

  <p>When a newly created transaction failed to enter the mempool due to
the limits on chains of unconfirmed transactions the sending RPC
calls would return an error.  The transaction would still be queued
in the wallet and, once some of the parent transactions were
confirmed, broadcast after the software was restarted.</p>

  <p>This behavior has been changed to return success and to reattempt
mempool insertion at the same time transaction rebroadcast is
attempted, avoiding a need for a restart.</p>

  <p>Transactions in the wallet which cannot be accepted into the mempool
can be abandoned with the previously existing abandontransaction RPC
(or in the GUI via a context menu on the transaction).</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.13.2 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#9293 <code class="language-text highlighter-rouge">e591c10</code> [0.13 Backport #9053] IBD using chainwork instead of height and not using header timestamp (gmaxwell)</li>
    <li>#9053 <code class="language-text highlighter-rouge">5b93eee</code> IBD using chainwork instead of height and not using header timestamps (gmaxwell)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#8845 <code class="language-text highlighter-rouge">1d048b9</code> Don’t return the address of a P2SH of a P2SH (jnewbery)</li>
    <li>#9041 <code class="language-text highlighter-rouge">87fbced</code> keypoololdest denote Unix epoch, not GMT (s-matthew-english)</li>
    <li>#9122 <code class="language-text highlighter-rouge">f82c81b</code> fix getnettotals RPC description about timemillis (visvirial)</li>
    <li>#9042 <code class="language-text highlighter-rouge">5bcb05d</code> [rpc] ParseHash: Fail when length is not 64 (MarcoFalke)</li>
    <li>#9194 <code class="language-text highlighter-rouge">f26dab7</code> Add option to return non-segwit serialization via rpc (instagibbs)</li>
    <li>#9347 <code class="language-text highlighter-rouge">b711390</code> [0.13.2] wallet/rpc backports (MarcoFalke)</li>
    <li>#9292 <code class="language-text highlighter-rouge">c365556</code> Complain when unknown rpcserialversion is specified (sipa)</li>
    <li>#9322 <code class="language-text highlighter-rouge">49a612f</code> [qa] Don’t set unknown rpcserialversion (MarcoFalke)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#8357 <code class="language-text highlighter-rouge">ce0d817</code> [mempool] Fix relaypriority calculation error (maiiz)</li>
    <li>#9267 <code class="language-text highlighter-rouge">0a4aa87</code> [0.13 backport #9239] Disable fee estimates for a confirm target of 1 block (morcos)</li>
    <li>#9196 <code class="language-text highlighter-rouge">0c09d9f</code> Send tip change notification from invalidateblock (ryanofsky)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#8995 <code class="language-text highlighter-rouge">9ef3875</code> Add missing cs_main lock to ::GETBLOCKTXN processing (TheBlueMatt)</li>
    <li>#9234 <code class="language-text highlighter-rouge">94531b5</code> torcontrol: Explicitly request RSA1024 private key (laanwj)</li>
    <li>#8637 <code class="language-text highlighter-rouge">2cad5db</code> Compact Block Tweaks (rebase of #8235) (sipa)</li>
    <li>#9058 <code class="language-text highlighter-rouge">286e548</code> Fixes for p2p-compactblocks.py test timeouts on travis (#8842) (ryanofsky)</li>
    <li>#8865 <code class="language-text highlighter-rouge">4c71fc4</code> Decouple peer-processing-logic from block-connection-logic (TheBlueMatt)</li>
    <li>#9117 <code class="language-text highlighter-rouge">6fe3981</code> net: don’t send feefilter messages before the version handshake is complete (theuni)</li>
    <li>#9188 <code class="language-text highlighter-rouge">ca1fd75</code> Make orphan parent fetching ask for witnesses (gmaxwell)</li>
    <li>#9052 <code class="language-text highlighter-rouge">3a3bcbf</code> Use RelevantServices instead of node_network in AttemptToEvict (gmaxwell)</li>
    <li>#9048 <code class="language-text highlighter-rouge">9460771</code> [0.13 backport #9026] Fix handling of invalid compact blocks (sdaftuar)</li>
    <li>#9357 <code class="language-text highlighter-rouge">03b6f62</code> [0.13 backport #9352] Attempt reconstruction from all compact block announcements (sdaftuar)</li>
    <li>#9189 <code class="language-text highlighter-rouge">b96a8f7</code> Always add default_witness_commitment with GBT client support (sipa)</li>
    <li>#9253 <code class="language-text highlighter-rouge">28d0f22</code> Fix calculation of number of bound sockets to use (TheBlueMatt)</li>
    <li>#9199 <code class="language-text highlighter-rouge">da5a16b</code> Always drop the least preferred HB peer when adding a new one (gmaxwell)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#9169 <code class="language-text highlighter-rouge">d1b4da9</code> build: fix qt5.7 build under macOS (theuni)</li>
    <li>#9326 <code class="language-text highlighter-rouge">a0f7ece</code> Update for OpenSSL 1.1 API (gmaxwell)</li>
    <li>#9224 <code class="language-text highlighter-rouge">396c405</code> Prevent FD_SETSIZE error building on OpenBSD (ivdsangen)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#8972 <code class="language-text highlighter-rouge">6f86b53</code> Make warnings label selectable (jonasschnelli) (MarcoFalke)</li>
    <li>#9185 <code class="language-text highlighter-rouge">6d70a73</code> Fix coincontrol sort issue (jonasschnelli)</li>
    <li>#9094 <code class="language-text highlighter-rouge">5f3a12c</code> Use correct conversion function for boost::path datadir (laanwj)</li>
    <li>#8908 <code class="language-text highlighter-rouge">4a974b2</code> Update bitcoin-qt.desktop (s-matthew-english)</li>
    <li>#9190 <code class="language-text highlighter-rouge">dc46b10</code> Plug many memory leaks (laanwj)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#9290 <code class="language-text highlighter-rouge">35174a0</code> Make RelayWalletTransaction attempt to AcceptToMemoryPool (gmaxwell)</li>
    <li>#9295 <code class="language-text highlighter-rouge">43bcfca</code> Bugfix: Fundrawtransaction: don’t terminate when keypool is empty (jonasschnelli)</li>
    <li>#9302 <code class="language-text highlighter-rouge">f5d606e</code> Return txid even if ATMP fails for new transaction (sipa)</li>
    <li>#9262 <code class="language-text highlighter-rouge">fe39f26</code> Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#9159 <code class="language-text highlighter-rouge">eca9b46</code> Wait for specific block announcement in p2p-compactblocks (ryanofsky)</li>
    <li>#9186 <code class="language-text highlighter-rouge">dccdc3a</code> Fix use-after-free in scheduler tests (laanwj)</li>
    <li>#9168 <code class="language-text highlighter-rouge">3107280</code> Add assert_raises_message to check specific error message (mrbandrews)</li>
    <li>#9191 <code class="language-text highlighter-rouge">29435db</code> 0.13.2 Backports (MarcoFalke)</li>
    <li>#9077 <code class="language-text highlighter-rouge">1d4c884</code> Increase wallet-dump RPC timeout (ryanofsky)</li>
    <li>#9098 <code class="language-text highlighter-rouge">ecd7db5</code> Handle zombies and cluttered tmpdirs (MarcoFalke)</li>
    <li>#8927 <code class="language-text highlighter-rouge">387ec9d</code> Add script tests for FindAndDelete in pre-segwit and segwit scripts (jl2012)</li>
    <li>#9200 <code class="language-text highlighter-rouge">eebc699</code> bench: Fix subtle counting issue when rescaling iteration count (laanwj)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#8838 <code class="language-text highlighter-rouge">094848b</code> Calculate size and weight of block correctly in CreateNewBlock() (jnewbery)</li>
    <li>#8920 <code class="language-text highlighter-rouge">40169dc</code> Set minimum required Boost to 1.47.0 (fanquake)</li>
    <li>#9251 <code class="language-text highlighter-rouge">a710a43</code> Improvement of documentation of command line parameter ‘whitelist’ (wodry)</li>
    <li>#8932 <code class="language-text highlighter-rouge">106da69</code> Allow bitcoin-tx to create v2 transactions (btcdrak)</li>
    <li>#8929 <code class="language-text highlighter-rouge">12428b4</code> add software-properties-common (sigwo)</li>
    <li>#9120 <code class="language-text highlighter-rouge">08d1c90</code> bug: Missed one “return false” in recent refactoring in #9067 (UdjinM6)</li>
    <li>#9067 <code class="language-text highlighter-rouge">f85ee01</code> Fix exit codes (UdjinM6)</li>
    <li>#9340 <code class="language-text highlighter-rouge">fb987b3</code> [0.13] Update secp256k1 subtree (MarcoFalke)</li>
    <li>#9229 <code class="language-text highlighter-rouge">b172377</code> Remove calls to getaddrinfo_a (TheBlueMatt)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Alex Morcos</li>
    <li>BtcDrak</li>
    <li>Cory Fields</li>
    <li>fanquake</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>instagibbs</li>
    <li>Ivo van der Sangen</li>
    <li>jnewbery</li>
    <li>Johnson Lau</li>
    <li>Jonas Schnelli</li>
    <li>Luke Dashjr</li>
    <li>maiiz</li>
    <li>MarcoFalke</li>
    <li>Masahiko Hyuga</li>
    <li>Matt Corallo</li>
    <li>matthias</li>
    <li>mrbandrews</li>
    <li>Pavel Janík</li>
    <li>Pieter Wuille</li>
    <li>randy-waterhouse</li>
    <li>Russell Yanofsky</li>
    <li>S. Matthew English</li>
    <li>Steven</li>
    <li>Suhas Daftuar</li>
    <li>UdjinM6</li>
    <li>Wladimir J. van der Laan</li>
    <li>wodry</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.13.1 released</title>
            <link>https://bitcoin.org/en/release/v0.13.1</link>
            <guid>https://bitcoin.org/en/release/v0.13.1</guid>
          
            <pubDate>Thu, 27 Oct 2016 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.13.1 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.13.1/">https://bitcoin.org/bin/bitcoin-core-0.13.1/</a></p>

  <p>This is a new minor version release, including activation parameters for the
segwit softfork, various bugfixes and performance improvements, as well as
updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
an OS initially released in 2001. This means that not even critical security
updates will be released anymore. Without security updates, using a bitcoin
wallet on a XP machine is irresponsible at least.</p>

  <p>In addition to that, with 0.12.x there have been varied reports of Bitcoin Core
randomly crashing on Windows XP. It is <a href="https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891">not clear</a>
what the source of these crashes is, but it is likely that upstream
libraries such as Qt are no longer being tested on XP.</p>

  <p>We do not have time nor resources to provide support for an OS that is
end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are
suggested to upgrade to a newer version of Windows, or install an alternative OS
that is supported.</p>

  <p>No attempt is made to prevent installing or running the software on Windows XP,
you can still do so at your own risk, but do not expect it to work: do not
report issues about Windows XP to the issue tracker.</p>

  <p>From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, 
but severe issues with the libc++ version on 10.7.x keep it from running reliably. 
0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="segregated-witness-soft-fork">Segregated witness soft fork</h2>

  <p>Segregated witness (segwit) is a soft fork that, if activated, will
allow transaction-producing software to separate (segregate) transaction
signatures (witnesses) from the part of the data in a transaction that is
covered by the txid. This provides several immediate benefits:</p>

  <ul>
    <li>
      <p><strong>Elimination of unwanted transaction malleability:</strong> Segregating the witness
allows both existing and upgraded software to calculate the transaction
identifier (txid) of transactions without referencing the witness, which can
sometimes be changed by third-parties (such as miners) or by co-signers in a
multisig spend. This solves all known cases of unwanted transaction
malleability, which is a problem that makes programming Bitcoin wallet
software more difficult and which seriously complicates the design of smart
contracts for Bitcoin.</p>
    </li>
    <li>
      <p><strong>Capacity increase:</strong> Segwit transactions contain new fields that are not
part of the data currently used to calculate the size of a block, which
allows a block containing segwit transactions to hold more data than allowed
by the current maximum block size. Estimates based on the transactions
currently found in blocks indicate that if all wallets switch to using
segwit, the network will be able to support about 70% more transactions. The
network will also be able to support more of the advanced-style payments
(such as multisig) than it can support now because of the different weighting
given to different parts of a transaction after segwit activates (see the
following section for details).</p>
    </li>
    <li>
      <p><strong>Weighting data based on how it affects node performance:</strong> Some parts of
each Bitcoin block need to be stored by nodes in order to validate future
blocks; other parts of a block can be immediately forgotten (pruned) or used
only for helping other nodes sync their copy of the block chain.  One large
part of the immediately prunable data are transaction signatures (witnesses),
and segwit makes it possible to give a different “weight” to segregated
witnesses to correspond with the lower demands they place on node resources.
Specifically, each byte of a segregated witness is given a weight of 1, each
other byte in a block is given a weight of 4, and the maximum allowed weight
of a block is 4 million.  Weighting the data this way better aligns the most
profitable strategy for creating blocks with the long-term costs of block
validation.</p>
    </li>
    <li>
      <p><strong>Signature covers value:</strong> A simple improvement in the way signatures are
generated in segwit simplifies the design of secure signature generators
(such as hardware wallets), reduces the amount of data the signature
generator needs to download, and allows the signature generator to operate
more quickly.  This is made possible by having the generator sign the amount
of bitcoins they think they are spending, and by having full nodes refuse to
accept those signatures unless the amount of bitcoins being spent is exactly
the same as was signed.  For non-segwit transactions, wallets instead had to
download the complete previous transactions being spent for every payment
they made, which could be a slow operation on hardware wallets and in other
situations where bandwidth or computation speed was constrained.</p>
    </li>
    <li>
      <p><strong>Linear scaling of sighash operations:</strong> In 2015 a block was produced that
required about 25 seconds to validate on modern hardware because of the way
transaction signature hashes are performed.  Other similar blocks, or blocks
that could take even longer to validate, can still be produced today.  The
problem that caused this can’t be fixed in a soft fork without unwanted
side-effects, but transactions that opt-in to using segwit will now use a
different signature method that doesn’t suffer from this problem and doesn’t
have any unwanted side-effects.</p>
    </li>
    <li>
      <p><strong>Increased security for multisig:</strong> Bitcoin addresses (both P2PKH addresses
that start with a ‘1’ and P2SH addresses that start with a ‘3’) use a hash
function known as RIPEMD-160.  For P2PKH addresses, this provides about 160
bits of security—which is beyond what cryptographers believe can be broken
today.  But because P2SH is more flexible, only about 80 bits of security is
provided per address. Although 80 bits is very strong security, it is within
the realm of possibility that it can be broken by a powerful adversary.
Segwit allows advanced transactions to use the SHA256 hash function instead,
which provides about 128 bits of security  (that is 281 trillion times as
much security as 80 bits and is equivalent to the maximum bits of security
believed to be provided by Bitcoin’s choice of parameters for its Elliptic
Curve Digital Security Algorithm [ECDSA].)</p>
    </li>
    <li>
      <p><strong>More efficient almost-full-node security</strong> Satoshi Nakamoto’s original
Bitcoin paper describes a method for allowing newly-started full nodes to
skip downloading and validating some data from historic blocks that are
protected by large amounts of proof of work.  Unfortunately, Nakamoto’s
method can’t guarantee that a newly-started node using this method will
produce an accurate copy of Bitcoin’s current ledger (called the UTXO set),
making the node vulnerable to falling out of consensus with other nodes.
Although the problems with Nakamoto’s method can’t be fixed in a soft fork,
Segwit accomplishes something similar to his original proposal: it makes it
possible for a node to optionally skip downloading some blockchain data
(specifically, the segregated witnesses) while still ensuring that the node
can build an accurate copy of the UTXO set for the block chain with the most
proof of work.  Segwit enables this capability at the consensus layer, but
note that Bitcoin Core does not provide an option to use this capability as
of this 0.13.1 release.</p>
    </li>
    <li>
      <p><strong>Script versioning:</strong> Segwit makes it easy for future soft forks to allow
Bitcoin users to individually opt-in to almost any change in the Bitcoin
Script language when those users receive new transactions.  Features
currently being researched by Bitcoin Core contributors that may use this
capability include support for Schnorr signatures, which can improve the
privacy and efficiency of multisig transactions (or transactions with
multiple inputs), and Merklized Abstract Syntax Trees (MAST), which can
improve the privacy and efficiency of scripts with two or more conditions.
Other Bitcoin community members are studying several other improvements
that can be made using script versioning.</p>
    </li>
  </ul>

  <p>Activation for the segwit soft fork is being managed using BIP9
versionbits.  Segwit’s version bit is bit 1, and nodes will begin
tracking which blocks signal support for segwit at the beginning of the
first retarget period after segwit’s start date of 15 November 2016.  If
95% of blocks within a 2,016-block retarget period (about two weeks)
signal support for segwit, the soft fork will be locked in.  After
another 2,016 blocks, segwit will activate.</p>

  <p>For more information about segwit, please see the <a href="https://bitcoincore.org/en/2016/01/26/segwit-benefits/">segwit FAQ</a>, the
<a href="https://bitcoincore.org/en/segwit_wallet_dev/">segwit wallet developers guide</a> or BIPs <a href="https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki">141</a>, <a href="https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki">143</a>,
<a href="https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki">144</a>, and <a href="https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki">145</a>.  If you’re a miner or mining pool
operator, please see the <a href="https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/">versionbits FAQ</a> for information about
signaling support for a soft fork.</p>

  <h2 id="null-dummy-soft-fork">Null dummy soft fork</h2>

  <p>Combined with the segwit soft fork is an additional change that turns a
long-existing network relay policy into a consensus rule. The
<code class="language-text highlighter-rouge">OP_CHECKMULTISIG</code> and <code class="language-text highlighter-rouge">OP_CHECKMULTISIGVERIFY</code> opcodes consume an extra
stack element (“dummy element”) after signature validation. The dummy
element is not inspected in any manner, and could be replaced by any
value without invalidating the script.</p>

  <p>Because any value can be used for this dummy element, it’s possible for
a third-party to insert data into other people’s transactions, changing
the transaction’s txid (called transaction malleability) and possibly
causing other problems.</p>

  <p>Since Bitcoin Core 0.10.0, nodes have defaulted to only relaying and
mining transactions whose dummy element was a null value (0x00, also
called OP_0).  The null dummy soft fork turns this relay rule into a
consensus rule both for non-segwit transactions and segwit transactions,
so that this method of mutating transactions is permanently eliminated
from the network.</p>

  <p>Signaling for the null dummy soft fork is done by signaling support
for segwit, and the null dummy soft fork will activate at the same time
as segwit.</p>

  <p>For more information, please see <a href="https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki">BIP147</a>.</p>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li><code class="language-text highlighter-rouge">importprunedfunds</code> only accepts two required arguments. Some versions accept
an optional third arg, which was always ignored. Make sure to never pass more
than two arguments.</li>
  </ul>

  <h2 id="linux-arm-builds">Linux ARM builds</h2>

  <p>With the 0.13.0 release, pre-built Linux ARM binaries were added to the set of
uploaded executables. Additional detail on the ARM architecture targeted by each
is provided below.</p>

  <p>The following extra files can be found in the download directory or torrent:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz</code>: Linux binaries targeting
the 32-bit ARMv7-A architecture.</li>
    <li><code class="language-text highlighter-rouge">bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz</code>: Linux binaries targeting
the 64-bit ARMv8-A architecture.</li>
  </ul>

  <p>ARM builds are still experimental. If you have problems on a certain device or
Linux distribution combination please report them on the bug tracker, it may be
possible to resolve them. Note that the device you use must be (backward)
compatible with the architecture targeted by the binary that you use.
For example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit
execution state) device, can run the 32-bit ARMv7-A targeted binary. However,
no model of Raspberry Pi 1 device can run either binary because they are all
ARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.</p>

  <p>Note that Android is not considered ARM Linux in this context. The executables
are not expected to work out of the box on Android.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.13.1 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="consensus">Consensus</h3>
  <ul>
    <li>#8636 <code class="language-text highlighter-rouge">9dfa0c8</code> Implement NULLDUMMY softfork (BIP147) (jl2012)</li>
    <li>#8848 <code class="language-text highlighter-rouge">7a34a46</code> Add NULLDUMMY verify flag in bitcoinconsensus.h (jl2012)</li>
    <li>#8937 <code class="language-text highlighter-rouge">8b66659</code> Define start and end time for segwit deployment (sipa)</li>
  </ul>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#8581 <code class="language-text highlighter-rouge">526d2b0</code> Drop misleading option in importprunedfunds (MarcoFalke)</li>
    <li>#8699 <code class="language-text highlighter-rouge">a5ec248</code> Remove createwitnessaddress RPC command (jl2012)</li>
    <li>#8780 <code class="language-text highlighter-rouge">794b007</code> Deprecate getinfo (MarcoFalke)</li>
    <li>#8832 <code class="language-text highlighter-rouge">83ad563</code> Throw JSONRPCError when utxo set can not be read (MarcoFalke)</li>
    <li>#8884 <code class="language-text highlighter-rouge">b987348</code> getblockchaininfo help: pruneheight is the lowest, not highest, block (luke-jr)</li>
    <li>#8858 <code class="language-text highlighter-rouge">3f508ed</code> rpc: Generate auth cookie in hex instead of base64 (laanwj)</li>
    <li>#8951 <code class="language-text highlighter-rouge">7c2bf4b</code> RPC/Mining: getblocktemplate: Update and fix formatting of help (luke-jr)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#8611 <code class="language-text highlighter-rouge">a9429ca</code> Reduce default number of blocks to check at startup (sipa)</li>
    <li>#8634 <code class="language-text highlighter-rouge">3e80ab7</code> Add policy: null signature for failed CHECK(MULTI)SIG (jl2012)</li>
    <li>#8525 <code class="language-text highlighter-rouge">1672225</code> Do not store witness txn in rejection cache (sipa)</li>
    <li>#8499 <code class="language-text highlighter-rouge">9777fe1</code> Add several policy limits and disable uncompressed keys for segwit scripts (jl2012)</li>
    <li>#8526 <code class="language-text highlighter-rouge">0027672</code> Make non-minimal OP_IF/NOTIF argument non-standard for P2WSH (jl2012)</li>
    <li>#8524 <code class="language-text highlighter-rouge">b8c79a0</code> Precompute sighashes (sipa)</li>
    <li>#8651 <code class="language-text highlighter-rouge">b8c79a0</code> Predeclare PrecomputedTransactionData as struct (sipa)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#8740 <code class="language-text highlighter-rouge">42ea51a</code> No longer send local address in addrMe (laanwj)</li>
    <li>#8427 <code class="language-text highlighter-rouge">69d1cd2</code> Ignore <code class="language-text highlighter-rouge">notfound</code> P2P messages (laanwj)</li>
    <li>#8573 <code class="language-text highlighter-rouge">4f84082</code> Set jonasschnellis dns-seeder filter flag (jonasschnelli)</li>
    <li>#8712 <code class="language-text highlighter-rouge">23feab1</code> Remove maxuploadtargets recommended minimum (jonasschnelli)</li>
    <li>#8862 <code class="language-text highlighter-rouge">7ae6242</code> Fix a few cases where messages were sent after requested disconnect (theuni)</li>
    <li>#8393 <code class="language-text highlighter-rouge">fe1975a</code> Support for compact blocks together with segwit (sipa)</li>
    <li>#8282 <code class="language-text highlighter-rouge">2611ad7</code> Feeler connections to increase online addrs in the tried table (EthanHeilman)</li>
    <li>#8612 <code class="language-text highlighter-rouge">2215c22</code> Check for compatibility with download in FindNextBlocksToDownload (sipa)</li>
    <li>#8606 <code class="language-text highlighter-rouge">bbf379b</code> Fix some locks (sipa)</li>
    <li>#8594 <code class="language-text highlighter-rouge">ab295bb</code> Do not add random inbound peers to addrman (gmaxwell)</li>
    <li>#8940 <code class="language-text highlighter-rouge">5b4192b</code> Add x9 service bit support to dnsseed.bluematt.me, seed.bitcoinstats.com (TheBlueMatt, cdecker)</li>
    <li>#8944 <code class="language-text highlighter-rouge">685e4c7</code> Remove bogus assert on number of oubound connections. (TheBlueMatt)</li>
    <li>#8949 <code class="language-text highlighter-rouge">0dbc48a</code> Be more agressive in getting connections to peers with relevant services (gmaxwell)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#8293 <code class="language-text highlighter-rouge">fa5b249</code> Allow building libbitcoinconsensus without any univalue (luke-jr)</li>
    <li>#8492 <code class="language-text highlighter-rouge">8b0bdd3</code> Allow building bench_bitcoin by itself (luke-jr)</li>
    <li>#8563 <code class="language-text highlighter-rouge">147003c</code> Add configure check for -latomic (ajtowns)</li>
    <li>#8626 <code class="language-text highlighter-rouge">ea51b0f</code> Berkeley DB v6 compatibility fix (netsafe)</li>
    <li>#8520 <code class="language-text highlighter-rouge">75f2065</code> Remove check for <code class="language-text highlighter-rouge">openssl/ec.h</code> (laanwj)</li>
  </ul>

  <h3 id="gui">GUI</h3>
  <ul>
    <li>#8481 <code class="language-text highlighter-rouge">d9f0d4e</code> Fix minimize and close bugs (adlawren)</li>
    <li>#8487 <code class="language-text highlighter-rouge">a37cec5</code> Persist the datadir after option reset (achow101)</li>
    <li>#8697 <code class="language-text highlighter-rouge">41fd852</code> Fix op order to append first alert (rodasmith)</li>
    <li>#8678 <code class="language-text highlighter-rouge">8e03382</code> Fix UI bug that could result in paying unexpected fee (jonasschnelli)</li>
    <li>#8911 <code class="language-text highlighter-rouge">7634d8e</code> Translate all files, even if wallet disabled (laanwj)</li>
    <li>#8540 <code class="language-text highlighter-rouge">1db3352</code> Fix random segfault when closing “Choose data directory” dialog (laanwj)</li>
    <li>#7579 <code class="language-text highlighter-rouge">f1c0d78</code> Show network/chain errors in the GUI (jonasschnelli)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#8443 <code class="language-text highlighter-rouge">464dedd</code> Trivial cleanup of HD wallet changes (jonasschnelli)</li>
    <li>#8539 <code class="language-text highlighter-rouge">cb07f19</code> CDB: fix debug output (crowning-)</li>
    <li>#8664 <code class="language-text highlighter-rouge">091cdeb</code> Fix segwit-related wallet bug (sdaftuar)</li>
    <li>#8693 <code class="language-text highlighter-rouge">c6a6291</code> Add witness address to address book (instagibbs)</li>
    <li>#8765 <code class="language-text highlighter-rouge">6288659</code> Remove “unused” ThreadFlushWalletDB from removeprunedfunds (jonasschnelli)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>
  <ul>
    <li>#8713 <code class="language-text highlighter-rouge">ae8c7df</code> create_cache: Delete temp dir when done (MarcoFalke)</li>
    <li>#8716 <code class="language-text highlighter-rouge">e34374e</code> Check legacy wallet as well (MarcoFalke)</li>
    <li>#8750 <code class="language-text highlighter-rouge">d6ebe13</code> Refactor RPCTestHandler to prevent TimeoutExpired (MarcoFalke)</li>
    <li>#8652 <code class="language-text highlighter-rouge">63462c2</code> remove root test directory for RPC tests (yurizhykin)</li>
    <li>#8724 <code class="language-text highlighter-rouge">da94272</code> walletbackup: Sync blocks inside the loop (MarcoFalke)</li>
    <li>#8400 <code class="language-text highlighter-rouge">bea02dc</code> enable rpcbind_test (yurizhykin)</li>
    <li>#8417 <code class="language-text highlighter-rouge">f70be14</code> Add walletdump RPC test (including HD- &amp; encryption-tests) (jonasschnelli)</li>
    <li>#8419 <code class="language-text highlighter-rouge">a7aa3cc</code> Enable size accounting in mining unit tests (sdaftuar)</li>
    <li>#8442 <code class="language-text highlighter-rouge">8bb1efd</code> Rework hd wallet dump test (MarcoFalke)</li>
    <li>#8528 <code class="language-text highlighter-rouge">3606b6b</code> Update p2p-segwit.py to reflect correct behavior (instagibbs)</li>
    <li>#8531 <code class="language-text highlighter-rouge">a27cdd8</code> abandonconflict: Use assert_equal (MarcoFalke)</li>
    <li>#8667 <code class="language-text highlighter-rouge">6b07362</code> Fix SIGHASH_SINGLE bug in test_framework SignatureHash (jl2012)</li>
    <li>#8673 <code class="language-text highlighter-rouge">03b0196</code> Fix obvious assignment/equality error in test (JeremyRubin)</li>
    <li>#8739 <code class="language-text highlighter-rouge">cef633c</code> Fix broken sendcmpct test in p2p-compactblocks.py (sdaftuar)</li>
    <li>#8418 <code class="language-text highlighter-rouge">ff893aa</code> Add tests for compact blocks (sdaftuar)</li>
    <li>#8803 <code class="language-text highlighter-rouge">375437c</code> Ping regularly in p2p-segwit.py to keep connection alive (jl2012)</li>
    <li>#8827 <code class="language-text highlighter-rouge">9bbe66e</code> Split up slow RPC calls to avoid pruning test timeouts (sdaftuar)</li>
    <li>#8829 <code class="language-text highlighter-rouge">2a8bca4</code> Add bitcoin-tx JSON tests (jnewbery)</li>
    <li>#8834 <code class="language-text highlighter-rouge">1dd1783</code> blockstore: Switch to dumb dbm (MarcoFalke)</li>
    <li>#8835 <code class="language-text highlighter-rouge">d87227d</code> nulldummy.py: Don’t run unused code (MarcoFalke)</li>
    <li>#8836 <code class="language-text highlighter-rouge">eb18cc1</code> bitcoin-util-test.py should fail if the output file is empty (jnewbery)</li>
    <li>#8839 <code class="language-text highlighter-rouge">31ab2f8</code> Avoid ConnectionResetErrors during RPC tests (laanwj)</li>
    <li>#8840 <code class="language-text highlighter-rouge">cbc3fe5</code> Explicitly set encoding to utf8 when opening text files (laanwj)</li>
    <li>#8841 <code class="language-text highlighter-rouge">3e4abb5</code> Fix nulldummy test (jl2012)</li>
    <li>#8854 <code class="language-text highlighter-rouge">624a007</code> Fix race condition in p2p-compactblocks test (sdaftuar)</li>
    <li>#8857 <code class="language-text highlighter-rouge">1f60d45</code> mininode: Only allow named args in wait_until (MarcoFalke)</li>
    <li>#8860 <code class="language-text highlighter-rouge">0bee740</code> util: Move wait_bitcoinds() into stop_nodes() (MarcoFalke)</li>
    <li>#8882 <code class="language-text highlighter-rouge">b73f065</code> Fix race conditions in p2p-compactblocks.py and sendheaders.py (sdaftuar)</li>
    <li>#8904 <code class="language-text highlighter-rouge">cc6f551</code> Fix compact block shortids for a test case (dagurval)</li>
  </ul>

  <h3 id="documentation">Documentation</h3>
  <ul>
    <li>#8754 <code class="language-text highlighter-rouge">0e2c6bd</code> Target protobuf 2.6 in OS X build notes. (fanquake)</li>
    <li>#8461 <code class="language-text highlighter-rouge">b17a3f9</code> Document return value of networkhashps for getmininginfo RPC endpoint (jlopp)</li>
    <li>#8512 <code class="language-text highlighter-rouge">156e305</code> Corrected JSON typo on setban of net.cpp (sevastos)</li>
    <li>#8683 <code class="language-text highlighter-rouge">8a7d7ff</code> Fix incorrect file name bitcoin.qrc  (bitcoinsSG)</li>
    <li>#8891 <code class="language-text highlighter-rouge">5e0dd9e</code> Update bips.md for Segregated Witness (fanquake)</li>
    <li>#8545 <code class="language-text highlighter-rouge">863ae74</code> Update git-subtree-check.sh README (MarcoFalke)</li>
    <li>#8607 <code class="language-text highlighter-rouge">486650a</code> Fix doxygen off-by-one comments, fix typos (MarcoFalke)</li>
    <li>#8560 <code class="language-text highlighter-rouge">c493f43</code> Fix two VarInt examples in serialize.h (cbarcenas)</li>
    <li>#8737 <code class="language-text highlighter-rouge">084cae9</code> UndoReadFromDisk works on undo files (rev), not on block files (paveljanik)</li>
    <li>#8625 <code class="language-text highlighter-rouge">0a35573</code> Clarify statement about parallel jobs in rpc-tests.py (isle2983)</li>
    <li>#8624 <code class="language-text highlighter-rouge">0e6d753</code> build: Mention curl (MarcoFalke)</li>
    <li>#8604 <code class="language-text highlighter-rouge">b09e13c</code> build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)</li>
    <li>#8939 <code class="language-text highlighter-rouge">06d15fb</code> Update implemented bips for 0.13.1 (sipa)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>
  <ul>
    <li>#8742 <code class="language-text highlighter-rouge">d31ac72</code> Specify Protobuf version 2 in paymentrequest.proto (fanquake)</li>
    <li>#8414,#8558,#8676,#8700,#8701,#8702 Add missing copyright headers (isle2983, kazcw)</li>
    <li>#8899 <code class="language-text highlighter-rouge">4ed2627</code> Fix wake from sleep issue with Boost 1.59.0 (fanquake)</li>
    <li>#8817 <code class="language-text highlighter-rouge">bcf3806</code> update bitcoin-tx to output witness data (jnewbery)</li>
    <li>#8513 <code class="language-text highlighter-rouge">4e5fc31</code> Fix a type error that would not compile on OSX. (JeremyRubin)</li>
    <li>#8392 <code class="language-text highlighter-rouge">30eac2d</code> Fix several node initialization issues (sipa)</li>
    <li>#8548 <code class="language-text highlighter-rouge">305d8ac</code> Use <code class="language-text highlighter-rouge">__func__</code> to get function name for output printing (MarcoFalke)</li>
    <li>#8291 <code class="language-text highlighter-rouge">a987431</code> [util] CopyrightHolders: Check for untranslated substitution (MarcoFalke)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>adlawren</li>
    <li>Alexey Vesnin</li>
    <li>Anders Øyvind Urke-Sætre</li>
    <li>Andrew Chow</li>
    <li>Anthony Towns</li>
    <li>BtcDrak</li>
    <li>Chris Stewart</li>
    <li>Christian Barcenas</li>
    <li>Christian Decker</li>
    <li>Cory Fields</li>
    <li>crowning-</li>
    <li>Dagur Valberg Johannsson</li>
    <li>David A. Harding</li>
    <li>Eric Lombrozo</li>
    <li>Ethan Heilman</li>
    <li>fanquake</li>
    <li>Gaurav Rana</li>
    <li>Gregory Maxwell</li>
    <li>instagibbs</li>
    <li>isle2983</li>
    <li>Jameson Lopp</li>
    <li>Jeremy Rubin</li>
    <li>jnewbery</li>
    <li>Johnson Lau</li>
    <li>Jonas Schnelli</li>
    <li>jonnynewbs</li>
    <li>Justin Camarena</li>
    <li>Kaz Wesley</li>
    <li>leijurv</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Marty Jones</li>
    <li>Matt Corallo</li>
    <li>Micha</li>
    <li>Michael Ford</li>
    <li>mruddy</li>
    <li>Pavel Janík</li>
    <li>Pieter Wuille</li>
    <li>rodasmith</li>
    <li>Sev</li>
    <li>Suhas Daftuar</li>
    <li>whythat</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.13.0 released</title>
            <link>https://bitcoin.org/en/release/v0.13.0</link>
            <guid>https://bitcoin.org/en/release/v0.13.0</guid>
          
            <pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.13.0 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.13.0/">https://bitcoin.org/bin/bitcoin-core-0.13.0/</a></p>

  <p>This is a new major version release, including new features, various bugfixes
and performance improvements, as well as updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <p>To receive security and update notifications, please subscribe to:</p>

  <p><a href="https://bitcoincore.org/en/list/announcements/join/">https://bitcoincore.org/en/list/announcements/join/</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="compatibility">Compatibility</h1>

  <p>Microsoft ended support for Windows XP on <a href="https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support">April 8th, 2014</a>,
an OS initially released in 2001. This means that not even critical security
updates will be released anymore. Without security updates, using a bitcoin
wallet on a XP machine is irresponsible at least.</p>

  <p>In addition to that, with 0.12.x there have been varied reports of Bitcoin Core
randomly crashing on Windows XP. It is <a href="https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891">not clear</a>
what the source of these crashes is, but it is likely that upstream
libraries such as Qt are no longer being tested on XP.</p>

  <p>We do not have time nor resources to provide support for an OS that is
end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are
suggested to upgrade to a newer verion of Windows, or install an alternative OS
that is supported.</p>

  <p>No attempt is made to prevent installing or running the software on Windows XP,
you can still do so at your own risk, but do not expect it to work: do not
report issues about Windows XP to the issue tracker.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="database-cache-memory-increased">Database cache memory increased</h2>

  <p>As a result of growth of the UTXO set, performance with the prior default
database cache of 100 MiB has suffered.
For this reason the default was changed to 300 MiB in this release.</p>

  <p>For nodes on low-memory systems, the database cache can be changed back to
100 MiB (or to another value) by either:</p>

  <ul>
    <li>Adding <code class="language-text highlighter-rouge">dbcache=100</code> in bitcoin.conf</li>
    <li>Changing it in the GUI under <code class="language-text highlighter-rouge">Options → Size of database cache</code></li>
  </ul>

  <p>Note that the database cache setting has the most performance impact
during initial sync of a node, and when catching up after downtime.</p>

  <h2 id="bitcoin-cli-arguments-privacy">bitcoin-cli: arguments privacy</h2>

  <p>The RPC command line client gained a new argument, <code class="language-text highlighter-rouge">-stdin</code>
to read extra arguments from standard input, one per line until EOF/Ctrl-D.
For example:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ src/bitcoin-cli -stdin walletpassphrase
mysecretcode
120
..... press Ctrl-D here to end input
$
</code></pre></div>  </div>

  <p>It is recommended to use this for sensitive information such as wallet
passphrases, as command-line arguments can usually be read from the process
table by any user on the system.</p>

  <h2 id="c11-and-python-3">C++11 and Python 3</h2>

  <p>Various code modernizations have been done. The Bitcoin Core code base has
started using C++11. This means that a C++11-capable compiler is now needed for
building. Effectively this means GCC 4.7 or higher, or Clang 3.3 or higher.</p>

  <p>When cross-compiling for a target that doesn’t have C++11 libraries, configure with
<code class="language-text highlighter-rouge">./configure --enable-glibc-back-compat ... LDFLAGS=-static-libstdc++</code>.</p>

  <p>For running the functional tests in <code class="language-text highlighter-rouge">qa/rpc-tests</code>, Python3.4 or higher is now
required.</p>

  <h2 id="linux-arm-builds">Linux ARM builds</h2>

  <p>Due to popular request, Linux ARM builds have been added to the uploaded
executables.</p>

  <p>The following extra files can be found in the download directory or torrent:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz</code>: Linux binaries for the most
common 32-bit ARM architecture.</li>
    <li><code class="language-text highlighter-rouge">bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz</code>: Linux binaries for the most
common 64-bit ARM architecture.</li>
  </ul>

  <p>ARM builds are still experimental. If you have problems on a certain device or
Linux distribution combination please report them on the bug tracker, it may be
possible to resolve them.</p>

  <p>Note that Android is not considered ARM Linux in this context. The executables
are not expected to work out of the box on Android.</p>

  <h2 id="compact-block-support-bip-152">Compact Block support (BIP 152)</h2>

  <p>Support for block relay using the Compact Blocks protocol has been implemented
in PR 8068.</p>

  <p>The primary goal is reducing the bandwidth spikes at relay time, though in many
cases it also reduces propagation delay. It is automatically enabled between
compatible peers.
<a href="https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki">BIP 152</a></p>

  <p>As a side-effect, ordinary non-mining nodes will download and upload blocks
faster if those blocks were produced by miners using similar transaction
filtering policies. This means that a miner who produces a block with many
transactions discouraged by your node will be relayed slower than one with
only transactions already in your memory pool. The overall effect of such
relay differences on the network may result in blocks which include widely-
discouraged transactions losing a stale block race, and therefore miners may
wish to configure their node to take common relay policies into consideration.</p>

  <h2 id="hierarchical-deterministic-key-generation">Hierarchical Deterministic Key Generation</h2>
  <p>Newly created wallets will use hierarchical deterministic key generation
according to BIP32 (keypath m/0’/0’/k’).
Existing wallets will still use traditional key generation.</p>

  <p>Backups of HD wallets, regardless of when they have been created, can
therefore be used to re-generate all possible private keys, even the
ones which haven’t already been generated during the time of the backup.
<strong>Attention:</strong> Encrypting the wallet will create a new seed which requires
a new backup!</p>

  <p>Wallet dumps (created using the <code class="language-text highlighter-rouge">dumpwallet</code> RPC) will contain the deterministic
seed. This is expected to allow future versions to import the seed and all
associated funds, but this is not yet implemented.</p>

  <p>HD key generation for new wallets can be disabled by <code class="language-text highlighter-rouge">-usehd=0</code>. Keep in
mind that this flag only has affect on newly created wallets.
You can’t disable HD key generation once you have created a HD wallet.</p>

  <p>There is no distinction between internal (change) and external keys.</p>

  <p>HD wallets are incompatible with older versions of Bitcoin Core.</p>

  <p><a href="https://github.com/bitcoin/bitcoin/pull/8035/files">Pull request</a>, <a href="https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki">BIP 32</a></p>

  <h2 id="segregated-witness">Segregated Witness</h2>

  <p>The code preparations for Segregated Witness (“segwit”), as described in <a href="https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki">BIP
141</a>, <a href="https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki">BIP
143</a>, <a href="https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki">BIP
144</a>, and <a href="https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki">BIP
145</a> are
finished and included in this release.  However, BIP 141 does not yet specify
activation parameters on mainnet, and so this release does not support segwit
use on mainnet.  Testnet use is supported, and after BIP 141 is updated with
proposed parameters, a future release of Bitcoin Core is expected that
implements those parameters for mainnet.</p>

  <p>Furthermore, because segwit activation is not yet specified for mainnet,
version 0.13.0 will behave similarly as other pre-segwit releases even after a
future activation of BIP 141 on the network.  Upgrading from 0.13.0 will be
required in order to utilize segwit-related features on mainnet (such as signal
BIP 141 activation, mine segwit blocks, fully validate segwit blocks, relay
segwit blocks to other segwit nodes, and use segwit transactions in the
wallet, etc).</p>

  <h2 id="mining-transaction-selection-child-pays-for-parent">Mining transaction selection (“Child Pays For Parent”)</h2>

  <p>The mining transaction selection algorithm has been replaced with an algorithm
that selects transactions based on their feerate inclusive of unconfirmed
ancestor transactions.  This means that a low-fee transaction can become more
likely to be selected if a high-fee transaction that spends its outputs is
relayed.</p>

  <p>With this change, the <code class="language-text highlighter-rouge">-blockminsize</code> command line option has been removed.</p>

  <p>The command line option <code class="language-text highlighter-rouge">-blockmaxsize</code> remains an option to specify the
maximum number of serialized bytes in a generated block.  In addition, the new
command line option <code class="language-text highlighter-rouge">-blockmaxweight</code> has been added, which specifies the
maximum “block weight” of a generated block, as defined by [BIP 141 (Segregated
Witness)] (https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki).</p>

  <p>In preparation for Segregated Witness, the mining algorithm has been modified
to optimize transaction selection for a given block weight, rather than a given
number of serialized bytes in a block.  In this release, transaction selection
is unaffected by this distinction (as BIP 141 activation is not supported on
mainnet in this release, see above), but in future releases and after BIP 141
activation, these calculations would be expected to differ.</p>

  <p>For optimal runtime performance, miners using this release should specify
<code class="language-text highlighter-rouge">-blockmaxweight</code> on the command line, and not specify <code class="language-text highlighter-rouge">-blockmaxsize</code>.
Additionally (or only) specifying <code class="language-text highlighter-rouge">-blockmaxsize</code>, or relying on default
settings for both, may result in performance degradation, as the logic to
support <code class="language-text highlighter-rouge">-blockmaxsize</code> performs additional computation to ensure that
constraint is met.  (Note that for mainnet, in this release, the equivalent
parameter for <code class="language-text highlighter-rouge">-blockmaxweight</code> would be four times the desired
<code class="language-text highlighter-rouge">-blockmaxsize</code>.  See [BIP 141]
(https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki) for additional
details.)</p>

  <p>In the future, the <code class="language-text highlighter-rouge">-blockmaxsize</code> option may be removed, as block creation is
no longer optimized for this metric.  Feedback is requested on whether to
deprecate or keep this command line option in future releases.</p>

  <h2 id="reindexing-changes">Reindexing changes</h2>

  <p>In earlier versions, reindexing did validation while reading through the block
files on disk. These two have now been split up, so that all blocks are known
before validation starts. This was necessary to make certain optimizations that
are available during normal synchronizations also available during reindexing.</p>

  <p>The two phases are distinct in the Bitcoin-Qt GUI. During the first one,
“Reindexing blocks on disk” is shown. During the second (slower) one,
“Processing blocks on disk” is shown.</p>

  <p>It is possible to only redo validation now, without rebuilding the block index,
using the command line option <code class="language-text highlighter-rouge">-reindex-chainstate</code> (in addition to
<code class="language-text highlighter-rouge">-reindex</code> which does both). This new option is useful when the blocks on disk
are assumed to be fine, but the chainstate is still corrupted. It is also
useful for benchmarks.</p>

  <h2 id="removal-of-internal-miner">Removal of internal miner</h2>

  <p>As CPU mining has been useless for a long time, the internal miner has been
removed in this release, and replaced with a simpler implementation for the
test framework.</p>

  <p>The overall result of this is that <code class="language-text highlighter-rouge">setgenerate</code> RPC call has been removed, as
well as the <code class="language-text highlighter-rouge">-gen</code> and <code class="language-text highlighter-rouge">-genproclimit</code> command-line options.</p>

  <p>For testing, the <code class="language-text highlighter-rouge">generate</code> call can still be used to mine a block, and a new
RPC call <code class="language-text highlighter-rouge">generatetoaddress</code> has been added to mine to a specific address. This
works with wallet disabled.</p>

  <h2 id="new-bytespersigop-implementation">New bytespersigop implementation</h2>

  <p>The former implementation of the bytespersigop filter accidentally broke bare
multisig (which is meant to be controlled by the <code class="language-text highlighter-rouge">permitbaremultisig</code> option),
since the consensus protocol always counts these older transaction forms as 20
sigops for backwards compatibility. Simply fixing this bug by counting more
accurately would have reintroduced a vulnerability. It has therefore been
replaced with a new implementation that rather than filter such transactions,
instead treats them (for fee purposes only) as if they were in fact the size
of a transaction actually using all 20 sigops.</p>

  <h2 id="low-level-p2p-changes">Low-level P2P changes</h2>

  <ul>
    <li>
      <p>The optional new p2p message “feefilter” is implemented and the protocol
version is bumped to 70013. Upon receiving a feefilter message from a peer,
a node will not send invs for any transactions which do not meet the filter
feerate. <a href="https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki">BIP 133</a></p>
    </li>
    <li>
      <p>The P2P alert system has been removed in PR #7692 and the <code class="language-text highlighter-rouge">alert</code> P2P message
is no longer supported.</p>
    </li>
    <li>
      <p>The transaction relay mechanism used to relay one quarter of all transactions
instantly, while queueing up the rest and sending them out in batch. As
this resulted in chains of dependent transactions being reordered, it
systematically hurt transaction relay. The relay code was redesigned in PRs
#7840 and #8082, and now always batches transactions announcements while also
sorting them according to dependency order. This significantly reduces orphan
transactions. To compensate for the removal of instant relay, the frequency of
batch sending was doubled for outgoing peers.</p>
    </li>
    <li>
      <p>Since PR #7840 the BIP35 <code class="language-text highlighter-rouge">mempool</code> command is also subject to batch processing.
Also the <code class="language-text highlighter-rouge">mempool</code> message is no longer handled for non-whitelisted peers when
<code class="language-text highlighter-rouge">NODE_BLOOM</code> is disabled through <code class="language-text highlighter-rouge">-peerbloomfilters=0</code>.</p>
    </li>
    <li>
      <p>The maximum size of orphan transactions that are kept in memory until their
ancestors arrive has been raised in PR #8179 from 5000 to 99999 bytes. They
are now also removed from memory when they are included in a block, conflict
with a block, and time out after 20 minutes.</p>
    </li>
    <li>
      <p>We respond at most once to a getaddr request during the lifetime of a
connection since PR #7856.</p>
    </li>
    <li>
      <p>Connections to peers who have recently been the first one to give us a valid
new block or transaction are protected from disconnections since PR #8084.</p>
    </li>
  </ul>

  <h2 id="low-level-rpc-changes">Low-level RPC changes</h2>

  <ul>
    <li>
      <p>RPC calls have been added to output detailed statistics for individual mempool
entries, as well as to calculate the in-mempool ancestors or descendants of a
transaction: see <code class="language-text highlighter-rouge">getmempoolentry</code>, <code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>.</p>
    </li>
    <li>
      <p><code class="language-text highlighter-rouge">gettxoutsetinfo</code> UTXO hash (<code class="language-text highlighter-rouge">hash_serialized</code>) has changed. There was a divergence between
32-bit and 64-bit platforms, and the txids were missing in the hashed data. This has been
fixed, but this means that the output will be different than from previous versions.</p>
    </li>
    <li>
      <p>Full UTF-8 support in the RPC API. Non-ASCII characters in, for example,
wallet labels have always been malformed because they weren’t taken into account
properly in JSON RPC processing. This is no longer the case. This also affects
the GUI debug console.</p>
    </li>
    <li>
      <p>Asm script outputs replacements for OP_NOP2 and OP_NOP3</p>

      <ul>
        <li>
          <p>OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by <a href="https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki">BIP 
65</a></p>
        </li>
        <li>
          <p>OP_NOP3 has been renamed to OP_CHECKSEQUENCEVERIFY by <a href="https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki">BIP 
112</a></p>
        </li>
        <li>
          <p>The following outputs are affected by this change:</p>

          <ul>
            <li>RPC <code class="language-text highlighter-rouge">getrawtransaction</code> (in verbose mode)</li>
            <li>RPC <code class="language-text highlighter-rouge">decoderawtransaction</code></li>
            <li>RPC <code class="language-text highlighter-rouge">decodescript</code></li>
            <li>REST <code class="language-text highlighter-rouge">/rest/tx/</code> (JSON format)</li>
            <li>REST <code class="language-text highlighter-rouge">/rest/block/</code> (JSON format when including extended tx details)</li>
            <li><code class="language-text highlighter-rouge">bitcoin-tx -json</code></li>
          </ul>
        </li>
      </ul>
    </li>
    <li>
      <p>The sorting of the output of the <code class="language-text highlighter-rouge">getrawmempool</code> output has changed.</p>
    </li>
    <li>
      <p>New RPC commands: <code class="language-text highlighter-rouge">generatetoaddress</code>, <code class="language-text highlighter-rouge">importprunedfunds</code>, <code class="language-text highlighter-rouge">removeprunedfunds</code>, <code class="language-text highlighter-rouge">signmessagewithprivkey</code>,
<code class="language-text highlighter-rouge">getmempoolancestors</code>, <code class="language-text highlighter-rouge">getmempooldescendants</code>, <code class="language-text highlighter-rouge">getmempoolentry</code>,
<code class="language-text highlighter-rouge">createwitnessaddress</code>, <code class="language-text highlighter-rouge">addwitnessaddress</code>.</p>
    </li>
    <li>
      <p>Removed RPC commands: <code class="language-text highlighter-rouge">setgenerate</code>, <code class="language-text highlighter-rouge">getgenerate</code>.</p>
    </li>
    <li>
      <p>New options were added to <code class="language-text highlighter-rouge">fundrawtransaction</code>: <code class="language-text highlighter-rouge">includeWatching</code>, <code class="language-text highlighter-rouge">changeAddress</code>, <code class="language-text highlighter-rouge">changePosition</code> and <code class="language-text highlighter-rouge">feeRate</code>.</p>
    </li>
  </ul>

  <h2 id="low-level-zmq-changes">Low-level ZMQ changes</h2>

  <ul>
    <li>Each ZMQ notification now contains an up-counting sequence number that allows
listeners to detect lost notifications.
The sequence number is always the last element in a multi-part ZMQ notification and
therefore backward compatible. Each message type has its own counter.
PR #<a href="https://github.com/bitcoin/bitcoin/pull/7762">7762</a>.</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.13.0 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>

  <ul>
    <li>#7156 <code class="language-text highlighter-rouge">9ee02cf</code> Remove cs_main lock from <code class="language-text highlighter-rouge">createrawtransaction</code> (laanwj)</li>
    <li>#7326 <code class="language-text highlighter-rouge">2cd004b</code> Fix typo, wrong information in gettxout help text (paveljanik)</li>
    <li>#7222 <code class="language-text highlighter-rouge">82429d0</code> Indicate which transactions are signaling opt-in RBF (sdaftuar)</li>
    <li>#7480 <code class="language-text highlighter-rouge">b49a623</code> Changed getnetworkhps value to double to avoid overflow (instagibbs)</li>
    <li>#7550 <code class="language-text highlighter-rouge">8b958ab</code> Input-from-stdin mode for bitcoin-cli (laanwj)</li>
    <li>#7670 <code class="language-text highlighter-rouge">c9a1265</code> Use cached block hash in blockToJSON() (rat4)</li>
    <li>#7726 <code class="language-text highlighter-rouge">9af69fa</code> Correct importaddress help reference to importpubkey (CypherGrue)</li>
    <li>#7766 <code class="language-text highlighter-rouge">16555b6</code> Register calls where they are defined (laanwj)</li>
    <li>#7797 <code class="language-text highlighter-rouge">e662a76</code> Fix generatetoaddress failing to parse address (mruddy)</li>
    <li>#7774 <code class="language-text highlighter-rouge">916b15a</code> Add versionHex in getblock and getblockheader JSON results (mruddy)</li>
    <li>#7863 <code class="language-text highlighter-rouge">72c54e3</code> Getblockchaininfo: make bip9_softforks an object, not an array (rustyrussell)</li>
    <li>#7842 <code class="language-text highlighter-rouge">d97101e</code> Do not print minping time in getpeerinfo when no ping received yet (paveljanik)</li>
    <li>#7518 <code class="language-text highlighter-rouge">be14ca5</code> Add multiple options to fundrawtransaction (promag)</li>
    <li>#7756 <code class="language-text highlighter-rouge">9e47fce</code> Add cursor to iterate over utxo set, use this in <code class="language-text highlighter-rouge">gettxoutsetinfo</code> (laanwj)</li>
    <li>#7848 <code class="language-text highlighter-rouge">88616d2</code> Divergence between 32- and 64-bit when hashing &gt;4GB affects <code class="language-text highlighter-rouge">gettxoutsetinfo</code> (laanwj)</li>
    <li>#7827 <code class="language-text highlighter-rouge">4205ad7</code> Speed up <code class="language-text highlighter-rouge">getchaintips</code> (mrbandrews)</li>
    <li>#7762 <code class="language-text highlighter-rouge">a1eb344</code> Append a message sequence number to every ZMQ notification (jonasschnelli)</li>
    <li>#7688 <code class="language-text highlighter-rouge">46880ed</code> List solvability in listunspent output and improve help (sipa)</li>
    <li>#7926 <code class="language-text highlighter-rouge">5725807</code> Push back <code class="language-text highlighter-rouge">getaddednodeinfo</code> dead value (instagibbs)</li>
    <li>#7953 <code class="language-text highlighter-rouge">0630353</code> Create <code class="language-text highlighter-rouge">signmessagewithprivkey</code> rpc (achow101)</li>
    <li>#8049 <code class="language-text highlighter-rouge">c028c7b</code> Expose information on whether transaction relay is enabled in <code class="language-text highlighter-rouge">getnetworkinfo</code> (laanwj)</li>
    <li>#7967 <code class="language-text highlighter-rouge">8c1e49b</code> Add feerate option to <code class="language-text highlighter-rouge">fundrawtransaction</code> (jonasschnelli)</li>
    <li>#8118 <code class="language-text highlighter-rouge">9b6a48c</code> Reduce unnecessary hashing in <code class="language-text highlighter-rouge">signrawtransaction</code> (jonasnick)</li>
    <li>#7957 <code class="language-text highlighter-rouge">79004d4</code> Add support for transaction sequence number (jonasschnelli)</li>
    <li>#8153 <code class="language-text highlighter-rouge">75ec320</code> <code class="language-text highlighter-rouge">fundrawtransaction</code> feeRate: Use BTC/kB (MarcoFalke)</li>
    <li>#7292 <code class="language-text highlighter-rouge">7ce9ac5</code> Expose ancestor/descendant information over RPC (sdaftuar)</li>
    <li>#8171 <code class="language-text highlighter-rouge">62fcf27</code> Fix createrawtx sequence number unsigned int parsing (jonasschnelli)</li>
    <li>#7892 <code class="language-text highlighter-rouge">9c3d0fa</code> Add full UTF-8 support to RPC (laanwj)</li>
    <li>#8317 <code class="language-text highlighter-rouge">304eff3</code> Don’t use floating point in rpcwallet (MarcoFalke)</li>
    <li>#8258 <code class="language-text highlighter-rouge">5a06ebb</code> Hide softfork in <code class="language-text highlighter-rouge">getblockchaininfo</code> if timeout is 0 (jl2012)</li>
    <li>#8244 <code class="language-text highlighter-rouge">1922e5a</code> Remove unnecessary LOCK(cs_main) in getrawmempool (dcousens)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>

  <ul>
    <li>#7056 <code class="language-text highlighter-rouge">6a07208</code> Save last db read (morcos)</li>
    <li>#6842 <code class="language-text highlighter-rouge">0192806</code> Limitfreerelay edge case bugfix (ptschip)</li>
    <li>#7084 <code class="language-text highlighter-rouge">11d74f6</code> Replace maxFeeRate of 10000*minRelayTxFee with maxTxFee in mempool (MarcoFalke)</li>
    <li>#7539 <code class="language-text highlighter-rouge">9f33dba</code> Add tags to mempool’s mapTx indices (sdaftuar)</li>
    <li>#7592 <code class="language-text highlighter-rouge">26a2a72</code> Re-remove ERROR logging for mempool rejects (laanwj)</li>
    <li>#7187 <code class="language-text highlighter-rouge">14d6324</code> Keep reorgs fast for SequenceLocks checks (morcos)</li>
    <li>#7594 <code class="language-text highlighter-rouge">01f4267</code> Mempool: Add tracking of ancestor packages (sdaftuar)</li>
    <li>#7904 <code class="language-text highlighter-rouge">fc9e334</code> Txdb: Fix assert crash in new UTXO set cursor (laanwj)</li>
    <li>#7927 <code class="language-text highlighter-rouge">f9c2ac7</code> Minor changes to dbwrapper to simplify support for other databases (laanwj)</li>
    <li>#7933 <code class="language-text highlighter-rouge">e26b620</code> Fix OOM when deserializing UTXO entries with invalid length (sipa)</li>
    <li>#8020 <code class="language-text highlighter-rouge">5e374f7</code> Use SipHash-2-4 for various non-cryptographic hashes (sipa)</li>
    <li>#8076 <code class="language-text highlighter-rouge">d720980</code> VerifyDB: don’t check blocks that have been pruned (sdaftuar)</li>
    <li>#8080 <code class="language-text highlighter-rouge">862fd24</code> Do not use mempool for GETDATA for tx accepted after the last mempool req (gmaxwell)</li>
    <li>#7997 <code class="language-text highlighter-rouge">a82f033</code> Replace mapNextTx with slimmer setSpends (kazcw)</li>
    <li>#8220 <code class="language-text highlighter-rouge">1f86d64</code> Stop trimming when mapTx is empty (sipa)</li>
    <li>#8273 <code class="language-text highlighter-rouge">396f9d6</code> Bump <code class="language-text highlighter-rouge">-dbcache</code> default to 300MiB (laanwj)</li>
    <li>#7225 <code class="language-text highlighter-rouge">eb33179</code> Eliminate unnecessary call to CheckBlock (sdaftuar)</li>
    <li>#7907 <code class="language-text highlighter-rouge">006cdf6</code> Optimize and Cleanup CScript::FindAndDelete (pstratem)</li>
    <li>#7917 <code class="language-text highlighter-rouge">239d419</code> Optimize reindex (sipa)</li>
    <li>#7763 <code class="language-text highlighter-rouge">3081fb9</code> Put hex-encoded version in UpdateTip (sipa)</li>
    <li>#8149 <code class="language-text highlighter-rouge">d612837</code> Testnet-only segregated witness (sipa)</li>
    <li>#8305 <code class="language-text highlighter-rouge">3730393</code> Improve handling of unconnecting headers (sdaftuar)</li>
    <li>#8363 <code class="language-text highlighter-rouge">fca1a41</code> Rename “block cost” to “block weight” (sdaftuar)</li>
    <li>#8381 <code class="language-text highlighter-rouge">f84ee3d</code> Make witness v0 outputs non-standard (jl2012)</li>
    <li>#8364 <code class="language-text highlighter-rouge">3f65ba2</code> Treat high-sigop transactions as larger rather than rejecting them (sipa)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>

  <ul>
    <li>#6589 <code class="language-text highlighter-rouge">dc0305d</code> Log bytes recv/sent per command (jonasschnelli)</li>
    <li>#7164 <code class="language-text highlighter-rouge">3b43cad</code> Do not download transactions during initial blockchain sync (ptschip)</li>
    <li>#7458 <code class="language-text highlighter-rouge">898fedf</code> peers.dat, banlist.dat recreated when missing (kirkalx)</li>
    <li>#7637 <code class="language-text highlighter-rouge">3da5d1b</code> Fix memleak in TorController (laanwj, jonasschnelli)</li>
    <li>#7553 <code class="language-text highlighter-rouge">9f14e5a</code> Remove vfReachable and modify IsReachable to only use vfLimited (pstratem)</li>
    <li>#7708 <code class="language-text highlighter-rouge">9426632</code> De-neuter NODE_BLOOM (pstratem)</li>
    <li>#7692 <code class="language-text highlighter-rouge">29b2be6</code> Remove P2P alert system (btcdrak)</li>
    <li>#7542 <code class="language-text highlighter-rouge">c946a15</code> Implement “feefilter” P2P message (morcos)</li>
    <li>#7573 <code class="language-text highlighter-rouge">352fd57</code> Add <code class="language-text highlighter-rouge">-maxtimeadjustment</code> command line option (mruddy)</li>
    <li>#7570 <code class="language-text highlighter-rouge">232592a</code> Add IPv6 Link-Local Address Support (mruddy)</li>
    <li>#7874 <code class="language-text highlighter-rouge">e6a4d48</code> Improve AlreadyHave (morcos)</li>
    <li>#7856 <code class="language-text highlighter-rouge">64e71b3</code> Only send one GetAddr response per connection (gmaxwell)</li>
    <li>#7868 <code class="language-text highlighter-rouge">7daa3ad</code> Split DNS resolving functionality out of net structures (theuni)</li>
    <li>#7919 <code class="language-text highlighter-rouge">7617682</code> Fix headers announcements edge case (sdaftuar)</li>
    <li>#7514 <code class="language-text highlighter-rouge">d9594bf</code> Fix IsInitialBlockDownload for testnet (jmacwhyte)</li>
    <li>#7959 <code class="language-text highlighter-rouge">03cf6e8</code> fix race that could fail to persist a ban (kazcw)</li>
    <li>#7840 <code class="language-text highlighter-rouge">3b9a0bf</code> Several performance and privacy improvements to inv/mempool handling (sipa)</li>
    <li>#8011 <code class="language-text highlighter-rouge">65aecda</code> Don’t run ThreadMessageHandler at lowered priority (kazcw)</li>
    <li>#7696 <code class="language-text highlighter-rouge">5c3f8dd</code> Fix de-serialization bug where AddrMan is left corrupted (EthanHeilman)</li>
    <li>#7932 <code class="language-text highlighter-rouge">ed749bd</code> CAddrMan::Deserialize handle corrupt serializations better (pstratem)</li>
    <li>#7906 <code class="language-text highlighter-rouge">83121cc</code> Prerequisites for p2p encapsulation changes (theuni)</li>
    <li>#8033 <code class="language-text highlighter-rouge">18436d8</code> Fix Socks5() connect failures to be less noisy and less unnecessarily scary (wtogami)</li>
    <li>#8082 <code class="language-text highlighter-rouge">01d8359</code> Defer inserting into maprelay until just before relaying (gmaxwell)</li>
    <li>#7960 <code class="language-text highlighter-rouge">6a22373</code> Only use AddInventoryKnown for transactions (sdaftuar)</li>
    <li>#8078 <code class="language-text highlighter-rouge">2156fa2</code> Disable the mempool P2P command when bloom filters disabled (petertodd)</li>
    <li>#8065 <code class="language-text highlighter-rouge">67c91f8</code> Addrman offline attempts (gmaxwell)</li>
    <li>#7703 <code class="language-text highlighter-rouge">761cddb</code> Tor: Change auth order to only use password auth if -torpassword (laanwj)</li>
    <li>#8083 <code class="language-text highlighter-rouge">cd0c513</code> Add support for dnsseeds with option to filter by servicebits (jonasschnelli)</li>
    <li>#8173 <code class="language-text highlighter-rouge">4286f43</code> Use SipHash for node eviction (sipa)</li>
    <li>#8154 <code class="language-text highlighter-rouge">1445835</code> Drop vAddrToSend after sending big addr message (kazcw)</li>
    <li>#7749 <code class="language-text highlighter-rouge">be9711e</code> Enforce expected outbound services (sipa)</li>
    <li>#8208 <code class="language-text highlighter-rouge">0a64777</code> Do not set extra flags for unfiltered DNS seed results (sipa)</li>
    <li>#8084 <code class="language-text highlighter-rouge">e4bb4a8</code> Add recently accepted blocks and txn to AttemptToEvictConnection (gmaxwell)</li>
    <li>#8113 <code class="language-text highlighter-rouge">3f89a53</code> Rework addnode behaviour (sipa)</li>
    <li>#8179 <code class="language-text highlighter-rouge">94ab58b</code> Evict orphans which are included or precluded by accepted blocks (gmaxwell)</li>
    <li>#8068 <code class="language-text highlighter-rouge">e9d76a1</code> Compact Blocks (TheBlueMatt)</li>
    <li>#8204 <code class="language-text highlighter-rouge">0833894</code> Update petertodd’s testnet seed (petertodd)</li>
    <li>#8247 <code class="language-text highlighter-rouge">5cd35d3</code> Mark my dnsseed as supporting filtering (sipa)</li>
    <li>#8275 <code class="language-text highlighter-rouge">042c323</code> Remove bad chain alert partition check (btcdrak)</li>
    <li>#8271 <code class="language-text highlighter-rouge">1bc9c80</code> Do not send witnesses in cmpctblock (sipa)</li>
    <li>#8312 <code class="language-text highlighter-rouge">ca40ef6</code> Fix mempool DoS vulnerability from malleated transactions (sdaftuar)</li>
    <li>#7180 <code class="language-text highlighter-rouge">16ccb74</code> Account for <code class="language-text highlighter-rouge">sendheaders</code> <code class="language-text highlighter-rouge">verack</code> messages (laanwj)</li>
    <li>#8102 <code class="language-text highlighter-rouge">425278d</code> Bugfix: use global ::fRelayTxes instead of CNode in version send (sipa)</li>
    <li>#8408 <code class="language-text highlighter-rouge">b7e2011</code> Prevent fingerprinting, disk-DoS with compact blocks (sdaftuar)</li>
  </ul>

  <h3 id="build-system">Build system</h3>

  <ul>
    <li>#7302 <code class="language-text highlighter-rouge">41f1a3e</code> C++11 build/runtime fixes (theuni)</li>
    <li>#7322 <code class="language-text highlighter-rouge">fd9356b</code> c++11: add scoped enum fallbacks to CPPFLAGS rather than defining them locally (theuni)</li>
    <li>#7441 <code class="language-text highlighter-rouge">a6771fc</code> Use Debian 8.3 in gitian build guide (fanquake)</li>
    <li>#7349 <code class="language-text highlighter-rouge">152a821</code> Build against system UniValue when available (luke-jr)</li>
    <li>#7520 <code class="language-text highlighter-rouge">621940e</code> LibreSSL doesn’t define OPENSSL_VERSION, use LIBRESSL_VERSION_TEXT instead (paveljanik)</li>
    <li>#7528 <code class="language-text highlighter-rouge">9b9bfce</code> autogen.sh: warn about needing autoconf if autoreconf is not found (knocte)</li>
    <li>#7504 <code class="language-text highlighter-rouge">19324cf</code> Crystal clean make clean (paveljanik)</li>
    <li>#7619 <code class="language-text highlighter-rouge">18b3f1b</code> Add missing sudo entry in gitian VM setup (btcdrak)</li>
    <li>#7616 <code class="language-text highlighter-rouge">639ec58</code>  [depends] Delete unused patches  (MarcoFalke)</li>
    <li>#7658 <code class="language-text highlighter-rouge">c15eb28</code> Add curl to Gitian setup instructions (btcdrak)</li>
    <li>#7710 <code class="language-text highlighter-rouge">909b72b</code> [Depends] Bump miniupnpc and config.guess+sub (fanquake)</li>
    <li>#7723 <code class="language-text highlighter-rouge">5131005</code> build: python 3 compatibility (laanwj)</li>
    <li>#7477 <code class="language-text highlighter-rouge">28ad4d9</code> Fix quoting of copyright holders in configure.ac (domob1812)</li>
    <li>#7711 <code class="language-text highlighter-rouge">a67bc5e</code> [build-aux] Update Boost &amp; check macros to latest serials (fanquake)</li>
    <li>#7788 <code class="language-text highlighter-rouge">4dc1b3a</code> Use relative paths instead of absolute paths in protoc calls (paveljanik)</li>
    <li>#7809 <code class="language-text highlighter-rouge">bbd210d</code> depends: some base fixes/changes (theuni)</li>
    <li>#7603 <code class="language-text highlighter-rouge">73fc922</code> Build System: Use PACKAGE_TARNAME in NSIS script (JeremyRand)</li>
    <li>#7905 <code class="language-text highlighter-rouge">187186b</code> test: move accounting_tests and rpc_wallet_tests to wallet/test (laanwj)</li>
    <li>#7911 <code class="language-text highlighter-rouge">351abf9</code> leveldb: integrate leveldb into our buildsystem (theuni)</li>
    <li>#7944 <code class="language-text highlighter-rouge">a407807</code> Re-instate TARGET_OS=linux in configure.ac. Removed by 351abf9e035 (randy-waterhouse)</li>
    <li>#7920 <code class="language-text highlighter-rouge">c3e3cfb</code> Switch Travis to Trusty (theuni)</li>
    <li>#7954 <code class="language-text highlighter-rouge">08b37c5</code> build: quiet annoying warnings without adding new ones (theuni)</li>
    <li>#7165 <code class="language-text highlighter-rouge">06162f1</code> build: Enable C++11 in build, require C++11 compiler (laanwj)</li>
    <li>#7982 <code class="language-text highlighter-rouge">559fbae</code> build: No need to check for leveldb atomics (theuni)</li>
    <li>#8002 <code class="language-text highlighter-rouge">f9b4582</code> [depends] Add -stdlib=libc++ to darwin CXX flags (fanquake)</li>
    <li>#7993 <code class="language-text highlighter-rouge">6a034ed</code> [depends] Bump Freetype, ccache, ZeroMQ, miniupnpc, expat (fanquake)</li>
    <li>#8167 <code class="language-text highlighter-rouge">19ea173</code> Ship debug tarballs/zips with debug symbols (theuni)</li>
    <li>#8175 <code class="language-text highlighter-rouge">f0299d8</code> Add –disable-bench to config flags for windows (laanwj)</li>
    <li>#7283 <code class="language-text highlighter-rouge">fd9881a</code> [gitian] Default reference_datetime to commit author date (MarcoFalke)</li>
    <li>#8181 <code class="language-text highlighter-rouge">9201ce8</code> Get rid of <code class="language-text highlighter-rouge">CLIENT_DATE</code> (laanwj)</li>
    <li>#8133 <code class="language-text highlighter-rouge">fde0ac4</code> Finish up out-of-tree changes (theuni)</li>
    <li>#8188 <code class="language-text highlighter-rouge">65a9d7d</code> Add armhf/aarch64 gitian builds (theuni)</li>
    <li>#8194 <code class="language-text highlighter-rouge">cca1c8c</code> [gitian] set correct PATH for wrappers (MarcoFalke)</li>
    <li>#8198 <code class="language-text highlighter-rouge">5201614</code> Sync ax_pthread with upstream draft4 (fanquake)</li>
    <li>#8210 <code class="language-text highlighter-rouge">12a541e</code> [Qt] Bump to Qt5.6.1 (jonasschnelli)</li>
    <li>#8285 <code class="language-text highlighter-rouge">da50997</code> windows: Add testnet link to installer (laanwj)</li>
    <li>#8304 <code class="language-text highlighter-rouge">0cca2fe</code> [travis] Update SDK_URL (MarcoFalke)</li>
    <li>#8310 <code class="language-text highlighter-rouge">6ae20df</code> Require boost for bench (theuni)</li>
    <li>#8315 <code class="language-text highlighter-rouge">2e51590</code> Don’t require sudo for Linux (theuni)</li>
    <li>#8314 <code class="language-text highlighter-rouge">67caef6</code> Fix pkg-config issues for 0.13 (theuni)</li>
    <li>#8373 <code class="language-text highlighter-rouge">1fe7f40</code> Fix OSX non-deterministic dmg (theuni)</li>
    <li>#8358 <code class="language-text highlighter-rouge">cfd1280</code> Gbuild: Set memory explicitly (default is too low) (MarcoFalke)</li>
  </ul>

  <h3 id="gui">GUI</h3>

  <ul>
    <li>#7154 <code class="language-text highlighter-rouge">00b4b8d</code> Add InMempool() info to transaction details (jonasschnelli)</li>
    <li>#7068 <code class="language-text highlighter-rouge">5f3c670</code> [RPC-Tests] add simple way to run rpc test over QT clients (jonasschnelli)</li>
    <li>#7218 <code class="language-text highlighter-rouge">a1c185b</code> Fix misleading translation (MarcoFalke)</li>
    <li>#7214 <code class="language-text highlighter-rouge">be9a9a3</code> qt5: Use the fixed font the system recommends (MarcoFalke)</li>
    <li>#7256 <code class="language-text highlighter-rouge">08ab906</code> Add note to coin control dialog QT5 workaround (fanquake)</li>
    <li>#7255 <code class="language-text highlighter-rouge">e289807</code> Replace some instances of formatWithUnit with formatHtmlWithUnit (fanquake)</li>
    <li>#7317 <code class="language-text highlighter-rouge">3b57e9c</code> Fix RPCTimerInterface ordering issue (jonasschnelli)</li>
    <li>#7327 <code class="language-text highlighter-rouge">c079d79</code> Transaction View: LastMonth calculation fixed (crowning-)</li>
    <li>#7334 <code class="language-text highlighter-rouge">e1060c5</code> coincontrol workaround is still needed in qt5.4 (fixed in qt5.5) (MarcoFalke)</li>
    <li>#7383 <code class="language-text highlighter-rouge">ae2db67</code> Rename “amount” to “requested amount” in receive coins table (jonasschnelli)</li>
    <li>#7396 <code class="language-text highlighter-rouge">cdcbc59</code> Add option to increase/decrease font size in the console window (jonasschnelli)</li>
    <li>#7437 <code class="language-text highlighter-rouge">9645218</code> Disable tab navigation for peers tables (Kefkius)</li>
    <li>#7604 <code class="language-text highlighter-rouge">354b03d</code> build: Remove spurious dollar sign. Fixes #7189 (dooglus)</li>
    <li>#7605 <code class="language-text highlighter-rouge">7f001bd</code> Remove openssl info from init/log and from Qt debug window (jonasschnelli)</li>
    <li>#7628 <code class="language-text highlighter-rouge">87d6562</code> Add ‘copy full transaction details’ option (ericshawlinux)</li>
    <li>#7613 <code class="language-text highlighter-rouge">3798e5d</code> Add autocomplete to bitcoin-qt’s console window (GamerSg)</li>
    <li>#7668 <code class="language-text highlighter-rouge">b24266c</code> Fix history deletion bug after font size change (achow101)</li>
    <li>#7680 <code class="language-text highlighter-rouge">41d2dfa</code> Remove reflection from <code class="language-text highlighter-rouge">about</code> icon (laanwj)</li>
    <li>#7686 <code class="language-text highlighter-rouge">f034bce</code> Remove 0-fee from send dialog (MarcoFalke)</li>
    <li>#7506 <code class="language-text highlighter-rouge">b88e0b0</code> Use CCoinControl selection in CWallet::FundTransaction (promag)</li>
    <li>#7732 <code class="language-text highlighter-rouge">0b98dd7</code> Debug window: replace “Build date” with “Datadir” (jonasschnelli)</li>
    <li>#7761 <code class="language-text highlighter-rouge">60db51d</code> remove trailing output-index from transaction-id (jonasschnelli)</li>
    <li>#7772 <code class="language-text highlighter-rouge">6383268</code> Clear the input line after activating autocomplete (paveljanik)</li>
    <li>#7925 <code class="language-text highlighter-rouge">f604bf6</code> Fix out-of-tree GUI builds (laanwj)</li>
    <li>#7939 <code class="language-text highlighter-rouge">574ddc6</code> Make it possible to show details for multiple transactions (laanwj)</li>
    <li>#8012 <code class="language-text highlighter-rouge">b33824b</code> Delay user confirmation of send (Tyler-Hardin)</li>
    <li>#8006 <code class="language-text highlighter-rouge">7c8558d</code> Add option to disable the system tray icon (Tyler-Hardin)</li>
    <li>#8046 <code class="language-text highlighter-rouge">169d379</code> Fix Cmd-Q / Menu Quit shutdown on OSX (jonasschnelli)</li>
    <li>#8042 <code class="language-text highlighter-rouge">6929711</code> Don’t allow to open the debug window during splashscreen &amp; verification state (jonasschnelli)</li>
    <li>#8014 <code class="language-text highlighter-rouge">77b49ac</code> Sort transactions by date (Tyler-Hardin)</li>
    <li>#8073 <code class="language-text highlighter-rouge">eb2f6f7</code> askpassphrasedialog: Clear pass fields on accept (rat4)</li>
    <li>#8129 <code class="language-text highlighter-rouge">ee1533e</code> Fix RPC console auto completer (UdjinM6)</li>
    <li>#7636 <code class="language-text highlighter-rouge">fb0ac48</code> Add bitcoin address label to request payment QR code (makevoid)</li>
    <li>#8231 <code class="language-text highlighter-rouge">760a6c7</code> Fix a bug where the SplashScreen will not be hidden during startup (jonasschnelli)</li>
    <li>#8256 <code class="language-text highlighter-rouge">af2421c</code> BUG: bitcoin-qt crash (fsb4000)</li>
    <li>#8257 <code class="language-text highlighter-rouge">ff03c50</code> Do not ask a UI question from bitcoind (sipa)</li>
    <li>#8288 <code class="language-text highlighter-rouge">91abb77</code> Network-specific example address (laanwj)</li>
    <li>#7707 <code class="language-text highlighter-rouge">a914968</code> UI support for abandoned transactions (jonasschnelli)</li>
    <li>#8207 <code class="language-text highlighter-rouge">f7a403b</code> Add a link to the Bitcoin-Core repository and website to the About Dialog (MarcoFalke)</li>
    <li>#8281 <code class="language-text highlighter-rouge">6a87eb0</code> Remove client name from debug window (laanwj)</li>
    <li>#8407 <code class="language-text highlighter-rouge">45eba4b</code> Add dbcache migration path (jonasschnelli)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>

  <ul>
    <li>#7262 <code class="language-text highlighter-rouge">fc08994</code> Reduce inefficiency of GetAccountAddress() (dooglus)</li>
    <li>#7537 <code class="language-text highlighter-rouge">78e81b0</code> Warn on unexpected EOF while salvaging wallet (laanwj)</li>
    <li>#7521 <code class="language-text highlighter-rouge">3368895</code> Don’t resend wallet txs that aren’t in our own mempool (morcos)</li>
    <li>#7576 <code class="language-text highlighter-rouge">86a1ec5</code> Move wallet help string creation to CWallet (jonasschnelli)</li>
    <li>#7577 <code class="language-text highlighter-rouge">5b3b5a7</code> Move “load wallet phase” to CWallet (jonasschnelli)</li>
    <li>#7608 <code class="language-text highlighter-rouge">0735c0c</code> Move hardcoded file name out of log messages (MarcoFalke)</li>
    <li>#7649 <code class="language-text highlighter-rouge">4900641</code> Prevent multiple calls to CWallet::AvailableCoins (promag)</li>
    <li>#7646 <code class="language-text highlighter-rouge">e5c3511</code> Fix lockunspent help message (promag)</li>
    <li>#7558 <code class="language-text highlighter-rouge">b35a591</code> Add import/removeprunedfunds rpc call (instagibbs)</li>
    <li>#6215 <code class="language-text highlighter-rouge">48c5adf</code> add bip32 pub key serialization (jonasschnelli)</li>
    <li>#7913 <code class="language-text highlighter-rouge">bafd075</code> Fix for incorrect locking in GetPubKey() (keystore.cpp) (yurizhykin)</li>
    <li>#8036 <code class="language-text highlighter-rouge">41138f9</code> init: Move berkeleydb version reporting to wallet (laanwj)</li>
    <li>#8028 <code class="language-text highlighter-rouge">373b50d</code> Fix insanity of CWalletDB::WriteTx and CWalletTx::WriteToDisk (pstratem)</li>
    <li>#8061 <code class="language-text highlighter-rouge">f6b7df3</code> Improve Wallet encapsulation (pstratem)</li>
    <li>#7891 <code class="language-text highlighter-rouge">950be19</code> Always require OS randomness when generating secret keys (sipa)</li>
    <li>#7689 <code class="language-text highlighter-rouge">b89ef13</code> Replace OpenSSL AES with ctaes-based version (sipa)</li>
    <li>#7825 <code class="language-text highlighter-rouge">f972b04</code> Prevent multiple calls to ExtractDestination (pedrobranco)</li>
    <li>#8137 <code class="language-text highlighter-rouge">243ac0c</code> Improve CWallet API with new AccountMove function (pstratem)</li>
    <li>#8142 <code class="language-text highlighter-rouge">52c3f34</code> Improve CWallet API  with new GetAccountPubkey function (pstratem)</li>
    <li>#8035 <code class="language-text highlighter-rouge">b67a472</code> Add simplest BIP32/deterministic key generation implementation (jonasschnelli)</li>
    <li>#7687 <code class="language-text highlighter-rouge">a6ddb19</code> Stop treating importaddress’ed scripts as change (sipa)</li>
    <li>#8298 <code class="language-text highlighter-rouge">aef3811</code> wallet: Revert input selection post-pruning (laanwj)</li>
    <li>#8324 <code class="language-text highlighter-rouge">bc94b87</code> Keep HD seed during salvagewallet (jonasschnelli)</li>
    <li>#8323 <code class="language-text highlighter-rouge">238300b</code> Add HD keypath to CKeyMetadata, report metadata in validateaddress (jonasschnelli)</li>
    <li>#8367 <code class="language-text highlighter-rouge">3b38a6a</code> Ensure &lt;0.13 clients can’t open HD wallets (jonasschnelli)</li>
    <li>#8378 <code class="language-text highlighter-rouge">ebea651</code> Move SetMinVersion for FEATURE_HD to SetHDMasterKey (pstratem)</li>
    <li>#8390 <code class="language-text highlighter-rouge">73adfe3</code> Correct hdmasterkeyid/masterkeyid name confusion (jonasschnelli)</li>
    <li>#8206 <code class="language-text highlighter-rouge">18b8ee1</code> Add HD xpriv to dumpwallet (jonasschnelli)</li>
    <li>#8389 <code class="language-text highlighter-rouge">c3c82c4</code> Create a new HD seed after encrypting the wallet (jonasschnelli)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>

  <ul>
    <li>#7320 <code class="language-text highlighter-rouge">d3dfc6d</code> Test walletpassphrase timeout (MarcoFalke)</li>
    <li>#7208 <code class="language-text highlighter-rouge">47c5ed1</code> Make max tip age an option instead of chainparam (laanwj)</li>
    <li>#7372 <code class="language-text highlighter-rouge">21376af</code> Trivial: [qa] wallet: Print maintenance (MarcoFalke)</li>
    <li>#7280 <code class="language-text highlighter-rouge">668906f</code> [travis] Fail when documentation is outdated (MarcoFalke)</li>
    <li>#7177 <code class="language-text highlighter-rouge">93b0576</code> [qa] Change default block priority size to 0 (MarcoFalke)</li>
    <li>#7236 <code class="language-text highlighter-rouge">02676c5</code> Use createrawtx locktime parm in txn_clone (dgenr8)</li>
    <li>#7212 <code class="language-text highlighter-rouge">326ffed</code> Adds unittests for CAddrMan and CAddrinfo, removes source of non-determinism (EthanHeilman)</li>
    <li>#7490 <code class="language-text highlighter-rouge">d007511</code> tests: Remove May15 test (laanwj)</li>
    <li>#7531 <code class="language-text highlighter-rouge">18cb2d5</code> Add bip68-sequence.py to extended rpc tests (btcdrak)</li>
    <li>#7536 <code class="language-text highlighter-rouge">ce5fc02</code> test: test leading spaces for ParseHex (laanwj)</li>
    <li>#7620 <code class="language-text highlighter-rouge">1b68de3</code> [travis] Only run check-doc.py once (MarcoFalke)</li>
    <li>#7455 <code class="language-text highlighter-rouge">7f96671</code> [travis] Exit early when check-doc.py fails (MarcoFalke)</li>
    <li>#7667 <code class="language-text highlighter-rouge">56d2c4e</code> Move GetTempPath() to testutil (musalbas)</li>
    <li>#7517 <code class="language-text highlighter-rouge">f1ca891</code> test: script_error checking in script_invalid tests (laanwj)</li>
    <li>#7684 <code class="language-text highlighter-rouge">3d0dfdb</code> Extend tests (MarcoFalke)</li>
    <li>#7697 <code class="language-text highlighter-rouge">622fe6c</code> Tests: make prioritise_transaction.py more robust (sdaftuar)</li>
    <li>#7709 <code class="language-text highlighter-rouge">efde86b</code> Tests: fix missing import in mempool_packages (sdaftuar)</li>
    <li>#7702 <code class="language-text highlighter-rouge">29e1131</code> Add tests verifychain, lockunspent, getbalance, listsinceblock (MarcoFalke)</li>
    <li>#7720 <code class="language-text highlighter-rouge">3b4324b</code> rpc-test: Normalize assert() (MarcoFalke)</li>
    <li>#7757 <code class="language-text highlighter-rouge">26794d4</code> wallet: Wait for reindex to catch up (MarcoFalke)</li>
    <li>#7764 <code class="language-text highlighter-rouge">a65b36c</code> Don’t run pruning.py twice (MarcoFalke)</li>
    <li>#7773 <code class="language-text highlighter-rouge">7c80e72</code> Fix comments in tests (btcdrak)</li>
    <li>#7489 <code class="language-text highlighter-rouge">e9723cb</code> tests: Make proxy_test work on travis servers without IPv6 (laanwj)</li>
    <li>#7801 <code class="language-text highlighter-rouge">70ac71b</code> Remove misleading “errorString syntax” (MarcoFalke)</li>
    <li>#7803 <code class="language-text highlighter-rouge">401c65c</code> maxblocksinflight: Actually enable test (MarcoFalke)</li>
    <li>#7802 <code class="language-text highlighter-rouge">3bc71e1</code> httpbasics: Actually test second connection (MarcoFalke)</li>
    <li>#7849 <code class="language-text highlighter-rouge">ab8586e</code> tests: add varints_bitpatterns test (laanwj)</li>
    <li>#7846 <code class="language-text highlighter-rouge">491171f</code> Clean up lockorder data of destroyed mutexes (sipa)</li>
    <li>#7853 <code class="language-text highlighter-rouge">6ef5e00</code> py2: Unfiddle strings into bytes explicitly (MarcoFalke)</li>
    <li>#7878 <code class="language-text highlighter-rouge">53adc83</code> [test] bctest.py: Revert faa41ee (MarcoFalke)</li>
    <li>#7798 <code class="language-text highlighter-rouge">cabba24</code> [travis] Print the commit which was evaluated (MarcoFalke)</li>
    <li>#7833 <code class="language-text highlighter-rouge">b1bf511</code> tests: Check Content-Type header returned from RPC server (laanwj)</li>
    <li>#7851 <code class="language-text highlighter-rouge">fa9d86f</code> pull-tester: Don’t mute zmq ImportError (MarcoFalke)</li>
    <li>#7822 <code class="language-text highlighter-rouge">0e6fd5e</code> Add listunspent() test for spendable/unspendable UTXO (jpdffonseca)</li>
    <li>#7912 <code class="language-text highlighter-rouge">59ad568</code> Tests: Fix deserialization of reject messages (sdaftuar)</li>
    <li>#7941 <code class="language-text highlighter-rouge">0ea3941</code> Fixing comment in script_test.json test case (Christewart)</li>
    <li>#7807 <code class="language-text highlighter-rouge">0ad1041</code> Fixed miner test values, gave constants for less error-prone values (instagibbs)</li>
    <li>#7980 <code class="language-text highlighter-rouge">88b77c7</code> Smartfees: Properly use ordered dict (MarcoFalke)</li>
    <li>#7814 <code class="language-text highlighter-rouge">77b637f</code> Switch to py3 (MarcoFalke)</li>
    <li>#8030 <code class="language-text highlighter-rouge">409a8a1</code> Revert fatal-ness of missing python-zmq (laanwj)</li>
    <li>#8018 <code class="language-text highlighter-rouge">3e90fe6</code> Autofind rpc tests –srcdir (jonasschnelli)</li>
    <li>#8016 <code class="language-text highlighter-rouge">5767e80</code> Fix multithread CScheduler and reenable test (paveljanik)</li>
    <li>#7972 <code class="language-text highlighter-rouge">423ca30</code> pull-tester: Run rpc test in parallel  (MarcoFalke)</li>
    <li>#8039 <code class="language-text highlighter-rouge">69b3a6d</code> Bench: Add crypto hash benchmarks (laanwj)</li>
    <li>#8041 <code class="language-text highlighter-rouge">5b736dd</code> Fix bip9-softforks blockstore issue (MarcoFalke)</li>
    <li>#7994 <code class="language-text highlighter-rouge">1f01443</code> Add op csv tests to script_tests.json (Christewart)</li>
    <li>#8038 <code class="language-text highlighter-rouge">e2bf830</code> Various minor fixes (MarcoFalke)</li>
    <li>#8072 <code class="language-text highlighter-rouge">1b87e5b</code> Travis: ‘make check’ in parallel and verbose (theuni)</li>
    <li>#8056 <code class="language-text highlighter-rouge">8844ef1</code> Remove hardcoded “4 nodes” from test_framework (MarcoFalke)</li>
    <li>#8047 <code class="language-text highlighter-rouge">37f9a1f</code> Test_framework: Set wait-timeout for bitcoind procs (MarcoFalke)</li>
    <li>#8095 <code class="language-text highlighter-rouge">6700cc9</code> Test framework: only cleanup on successful test runs (sdaftuar)</li>
    <li>#8098 <code class="language-text highlighter-rouge">06bd4f6</code> Test_framework: Append portseed to tmpdir (MarcoFalke)</li>
    <li>#8104 <code class="language-text highlighter-rouge">6ff2c8d</code> Add timeout to sync_blocks() and sync_mempools() (sdaftuar)</li>
    <li>#8111 <code class="language-text highlighter-rouge">61b8684</code> Benchmark SipHash (sipa)</li>
    <li>#8107 <code class="language-text highlighter-rouge">52b803e</code> Bench: Added base58 encoding/decoding benchmarks (yurizhykin)</li>
    <li>#8115 <code class="language-text highlighter-rouge">0026e0e</code> Avoid integer division in the benchmark inner-most loop (gmaxwell)</li>
    <li>#8090 <code class="language-text highlighter-rouge">a2df115</code> Adding P2SH(p2pkh) script test case (Christewart)</li>
    <li>#7992 <code class="language-text highlighter-rouge">ec45cc5</code> Extend #7956 with one more test (TheBlueMatt)</li>
    <li>#8139 <code class="language-text highlighter-rouge">ae5575b</code> Fix interrupted HTTP RPC connection workaround for Python 3.5+ (sipa)</li>
    <li>#8164 <code class="language-text highlighter-rouge">0f24eaf</code> [Bitcoin-Tx] fix missing test fixtures, fix 32bit atoi issue (jonasschnelli)</li>
    <li>#8166 <code class="language-text highlighter-rouge">0b5279f</code> Src/test: Do not shadow local variables (paveljanik)</li>
    <li>#8141 <code class="language-text highlighter-rouge">44c1b1c</code> Continuing port of java comparison tool (mrbandrews)</li>
    <li>#8201 <code class="language-text highlighter-rouge">36b7400</code> fundrawtransaction: Fix race, assert amounts (MarcoFalke)</li>
    <li>#8214 <code class="language-text highlighter-rouge">ed2cd59</code> Mininode: fail on send_message instead of silent return (MarcoFalke)</li>
    <li>#8215 <code class="language-text highlighter-rouge">a072d1a</code> Don’t use floating point in wallet tests (MarcoFalke)</li>
    <li>#8066 <code class="language-text highlighter-rouge">65c2058</code> Test_framework: Use different rpc_auth_pair for each node (MarcoFalke)</li>
    <li>#8216 <code class="language-text highlighter-rouge">0d41d70</code> Assert ‘changePosition out of bounds’  (MarcoFalke)</li>
    <li>#8222 <code class="language-text highlighter-rouge">961893f</code> Enable mempool consistency checks in unit tests (sipa)</li>
    <li>#7751 <code class="language-text highlighter-rouge">84370d5</code> test_framework: python3.4 authproxy compat (laanwj)</li>
    <li>#7744 <code class="language-text highlighter-rouge">d8e862a</code> test_framework: detect failure of bitcoind startup (laanwj)</li>
    <li>#8280 <code class="language-text highlighter-rouge">115735d</code> Increase sync_blocks() timeouts in pruning.py (MarcoFalke)</li>
    <li>#8340 <code class="language-text highlighter-rouge">af9b7a9</code> Solve trivial merge conflict in p2p-segwit.py (MarcoFalke)</li>
    <li>#8067 <code class="language-text highlighter-rouge">3e4cf8f</code> Travis: use slim generic image, and some fixups (theuni)</li>
    <li>#7951 <code class="language-text highlighter-rouge">5c7df70</code> Test_framework: Properly print exception (MarcoFalke)</li>
    <li>#8070 <code class="language-text highlighter-rouge">7771aa5</code> Remove non-determinism which is breaking net_tests #8069 (EthanHeilman)</li>
    <li>#8309 <code class="language-text highlighter-rouge">bb2646a</code> Add wallet-hd test (MarcoFalke)</li>
    <li>#8444 <code class="language-text highlighter-rouge">cd0910b</code> Fix p2p-feefilter.py for changed tx relay behavior (sdaftuar)</li>
  </ul>

  <h3 id="mining">Mining</h3>

  <ul>
    <li>#7507 <code class="language-text highlighter-rouge">11c7699</code> Remove internal miner (Leviathn)</li>
    <li>#7663 <code class="language-text highlighter-rouge">c87f51e</code> Make the generate RPC call function for non-regtest (sipa)</li>
    <li>#7671 <code class="language-text highlighter-rouge">e2ebd25</code> Add generatetoaddress RPC to mine to an address (achow101)</li>
    <li>#7935 <code class="language-text highlighter-rouge">66ed450</code> Versionbits: GBT support (luke-jr)</li>
    <li>#7600 <code class="language-text highlighter-rouge">66db2d6</code> Select transactions using feerate-with-ancestors (sdaftuar)</li>
    <li>#8295 <code class="language-text highlighter-rouge">f5660d3</code> Mining-related fixups for 0.13.0 (sdaftuar)</li>
    <li>#7796 <code class="language-text highlighter-rouge">536b75e</code> Add support for negative fee rates, fixes <code class="language-text highlighter-rouge">prioritizetransaction</code> (MarcoFalke)</li>
    <li>#8362 <code class="language-text highlighter-rouge">86edc20</code> Scale legacy sigop count in CreateNewBlock (sdaftuar)</li>
    <li>#8489 <code class="language-text highlighter-rouge">8b0eee6</code> Bugfix: Use pre-BIP141 sigops until segwit activates (GBT) (luke-jr)</li>
  </ul>

  <h3 id="documentation-and-miscellaneous">Documentation and miscellaneous</h3>

  <ul>
    <li>#7423 <code class="language-text highlighter-rouge">69e2a40</code> Add example for building with constrained resources (jarret)</li>
    <li>#8254 <code class="language-text highlighter-rouge">c2c69ed</code> Add OSX ZMQ requirement to QA readme (fanquake)</li>
    <li>#8203 <code class="language-text highlighter-rouge">377d131</code> Clarify documentation for running a tor node (nathaniel-mahieu)</li>
    <li>#7428 <code class="language-text highlighter-rouge">4b12266</code> Add example for listing ./configure flags (nathaniel-mahieu)</li>
    <li>#7847 <code class="language-text highlighter-rouge">3eae681</code> Add arch linux build example (mruddy)</li>
    <li>#7968 <code class="language-text highlighter-rouge">ff69aaf</code> Fedora build requirements (wtogami)</li>
    <li>#8013 <code class="language-text highlighter-rouge">fbedc09</code> Fedora build requirements, add gcc-c++ and fix typo (wtogami)</li>
    <li>#8009 <code class="language-text highlighter-rouge">fbd8478</code> Fixed invalid example paths in gitian-building.md (JeremyRand)</li>
    <li>#8240 <code class="language-text highlighter-rouge">63fbdbc</code> Mention Windows XP end of support in release notes (laanwj)</li>
    <li>#8303 <code class="language-text highlighter-rouge">5077d2c</code> Update bips.md for CSV softfork (fanquake)</li>
    <li>#7789 <code class="language-text highlighter-rouge">e0b3e19</code> Add note about using the Qt official binary installer (paveljanik)</li>
    <li>#7791 <code class="language-text highlighter-rouge">e30a5b0</code> Change Precise to Trusty in gitian-building.md (JeremyRand)</li>
    <li>#7838 <code class="language-text highlighter-rouge">8bb5d3d</code> Update gitian build guide to debian 8.4.0 (fanquake)</li>
    <li>#7855 <code class="language-text highlighter-rouge">b778e59</code> Replace precise with trusty (MarcoFalke)</li>
    <li>#7975 <code class="language-text highlighter-rouge">fc23fee</code> Update bitcoin-core GitHub links (MarcoFalke)</li>
    <li>#8034 <code class="language-text highlighter-rouge">e3a8207</code> Add basic git squash workflow (fanquake)</li>
    <li>#7813 <code class="language-text highlighter-rouge">214ec0b</code> Update port in tor.md (MarcoFalke)</li>
    <li>#8193 <code class="language-text highlighter-rouge">37c9830</code> Use Debian 8.5 in the gitian-build guide (fanquake)</li>
    <li>#8261 <code class="language-text highlighter-rouge">3685e0c</code> Clarify help for <code class="language-text highlighter-rouge">getblockchaininfo</code> (paveljanik)</li>
    <li>#7185 <code class="language-text highlighter-rouge">ea0f5a2</code> Note that reviewers should mention the id of the commits they reviewed (pstratem)</li>
    <li>#7290 <code class="language-text highlighter-rouge">c851d8d</code> [init] Add missing help for args (MarcoFalke)</li>
    <li>#7281 <code class="language-text highlighter-rouge">f9fd4c2</code> Improve CheckInputs() comment about sig verification (petertodd)</li>
    <li>#7417 <code class="language-text highlighter-rouge">1e06bab</code> Minor improvements to the release process (PRabahy)</li>
    <li>#7444 <code class="language-text highlighter-rouge">4cdbd42</code> Improve block validity/ConnectBlock() comments (petertodd)</li>
    <li>#7527 <code class="language-text highlighter-rouge">db2e1c0</code> Fix and cleanup listreceivedbyX documentation (instagibbs)</li>
    <li>#7541 <code class="language-text highlighter-rouge">b6e00af</code> Clarify description of blockindex (pinheadmz)</li>
    <li>#7590 <code class="language-text highlighter-rouge">f06af57</code> Improving wording related to Boost library requirements [updated] (jonathancross)</li>
    <li>#7635 <code class="language-text highlighter-rouge">0fa88ef</code> Add dependency info to test docs (elliotolds)</li>
    <li>#7609 <code class="language-text highlighter-rouge">3ba07bd</code> RPM spec file project (AliceWonderMiscreations)</li>
    <li>#7850 <code class="language-text highlighter-rouge">229a17c</code> Removed call to <code class="language-text highlighter-rouge">TryCreateDirectory</code> from <code class="language-text highlighter-rouge">GetDefaultDataDir</code> in <code class="language-text highlighter-rouge">src/util.cpp</code> (alexreg)</li>
    <li>#7888 <code class="language-text highlighter-rouge">ec870e1</code> Prevector: fix 2 bugs in currently unreached code paths (kazcw)</li>
    <li>#7922 <code class="language-text highlighter-rouge">90653bc</code> CBase58Data::SetString: cleanse the full vector (kazcw)</li>
    <li>#7881 <code class="language-text highlighter-rouge">c4e8390</code> Update release process (laanwj)</li>
    <li>#7952 <code class="language-text highlighter-rouge">a9c8b74</code> Log invalid block hash to make debugging easier (paveljanik)</li>
    <li>#7974 <code class="language-text highlighter-rouge">8206835</code> More comments on the design of AttemptToEvictConnection (gmaxwell)</li>
    <li>#7795 <code class="language-text highlighter-rouge">47a7cfb</code> UpdateTip: log only one line at most per block (laanwj)</li>
    <li>#8110 <code class="language-text highlighter-rouge">e7e25ea</code> Add benchmarking notes (fanquake)</li>
    <li>#8121 <code class="language-text highlighter-rouge">58f0c92</code> Update implemented BIPs list (fanquake)</li>
    <li>#8029 <code class="language-text highlighter-rouge">58725ba</code> Simplify OS X build notes (fanquake)</li>
    <li>#8143 <code class="language-text highlighter-rouge">d46b8b5</code> comment nit: miners don’t vote (instagibbs)</li>
    <li>#8136 <code class="language-text highlighter-rouge">22e0b35</code> Log/report in 10% steps during VerifyDB (jonasschnelli)</li>
    <li>#8168 <code class="language-text highlighter-rouge">d366185</code> util: Add ParseUInt32 and ParseUInt64 (laanwj)</li>
    <li>#8178 <code class="language-text highlighter-rouge">f7b1bfc</code> Add git and github tips and tricks to developer notes (sipa)</li>
    <li>#8177 <code class="language-text highlighter-rouge">67db011</code> developer notes: updates for C++11 (kazcw)</li>
    <li>#8229 <code class="language-text highlighter-rouge">8ccdac1</code> [Doc] Update OS X build notes for 10.11 SDK (fanquake)</li>
    <li>#8233 <code class="language-text highlighter-rouge">9f1807a</code> Mention Linux ARM executables in release process and notes (laanwj)</li>
    <li>#7540 <code class="language-text highlighter-rouge">ff46dd4</code> Rename OP_NOP3 to OP_CHECKSEQUENCEVERIFY (btcdrak)</li>
    <li>#8289 <code class="language-text highlighter-rouge">26316ff</code> bash-completion: Adapt for 0.12 and 0.13 (roques)</li>
    <li>#7453 <code class="language-text highlighter-rouge">3dc3149</code> Missing patches from 0.12 (MarcoFalke)</li>
    <li>#7113 <code class="language-text highlighter-rouge">54a550b</code> Switch to a more efficient rolling Bloom filter (sipa)</li>
    <li>#7257 <code class="language-text highlighter-rouge">de9e5ea</code> Combine common error strings for different options so translations can be shared and reused (luke-jr)</li>
    <li>#7304 <code class="language-text highlighter-rouge">b8f485c</code> [contrib] Add clang-format-diff.py (MarcoFalke)</li>
    <li>#7378 <code class="language-text highlighter-rouge">e6f97ef</code> devtools: replace github-merge with python version (laanwj)</li>
    <li>#7395 <code class="language-text highlighter-rouge">0893705</code> devtools: show pull and commit information in github-merge (laanwj)</li>
    <li>#7402 <code class="language-text highlighter-rouge">6a5932b</code> devtools: github-merge get toplevel dir without extra whitespace (achow101)</li>
    <li>#7425 <code class="language-text highlighter-rouge">20a408c</code> devtools: Fix utf-8 support in messages for github-merge (laanwj)</li>
    <li>#7632 <code class="language-text highlighter-rouge">409f843</code> Delete outdated test-patches reference (Lewuathe)</li>
    <li>#7662 <code class="language-text highlighter-rouge">386f438</code> remove unused NOBLKS_VERSION_{START,END} constants (rat4)</li>
    <li>#7737 <code class="language-text highlighter-rouge">aa0d2b2</code> devtools: make github-merge.py use py3 (laanwj)</li>
    <li>#7781 <code class="language-text highlighter-rouge">55db5f0</code> devtools: Auto-set branch to merge to in github-merge (laanwj)</li>
    <li>#7934 <code class="language-text highlighter-rouge">f17032f</code> Improve rolling bloom filter performance and benchmark (sipa)</li>
    <li>#8004 <code class="language-text highlighter-rouge">2efe38b</code> signal handling: fReopenDebugLog and fRequestShutdown should be type sig_atomic_t (catilac)</li>
    <li>#7713 <code class="language-text highlighter-rouge">f6598df</code> Fixes for verify-commits script (petertodd)</li>
    <li>#8412 <code class="language-text highlighter-rouge">8360d5b</code> libconsensus: Expose a flag for BIP112 (jtimon)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>21E14</li>
    <li>accraze</li>
    <li>Adam Brown</li>
    <li>Alexander Regueiro</li>
    <li>Alex Morcos</li>
    <li>Alfie John</li>
    <li>Alice Wonder</li>
    <li>AlSzacrel</li>
    <li>Andrew Chow</li>
    <li>Andrés G. Aragoneses</li>
    <li>Bob McElrath</li>
    <li>BtcDrak</li>
    <li>calebogden</li>
    <li>Cédric Félizard</li>
    <li>Chirag Davé</li>
    <li>Chris Moore</li>
    <li>Chris Stewart</li>
    <li>Christian von Roques</li>
    <li>Chris Wheeler</li>
    <li>Cory Fields</li>
    <li>crowning-</li>
    <li>Daniel Cousens</li>
    <li>Daniel Kraft</li>
    <li>Denis Lukianov</li>
    <li>Elias Rohrer</li>
    <li>Elliot Olds</li>
    <li>Eric Shaw</li>
    <li>error10</li>
    <li>Ethan Heilman</li>
    <li>face</li>
    <li>fanquake</li>
    <li>Francesco ‘makevoid’ Canessa</li>
    <li>fsb4000</li>
    <li>Gavin Andresen</li>
    <li>gladoscc</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders</li>
    <li>instagibbs</li>
    <li>James O’Beirne</li>
    <li>Jannes Faber</li>
    <li>Jarret Dyrbye</li>
    <li>Jeremy Rand</li>
    <li>jloughry</li>
    <li>jmacwhyte</li>
    <li>Joao Fonseca</li>
    <li>Johnson Lau</li>
    <li>Jonas Nick</li>
    <li>Jonas Schnelli</li>
    <li>Jonathan Cross</li>
    <li>João Barbosa</li>
    <li>Jorge Timón</li>
    <li>Kaz Wesley</li>
    <li>Kefkius</li>
    <li>kirkalx</li>
    <li>Krzysztof Jurewicz</li>
    <li>Leviathn</li>
    <li>lewuathe</li>
    <li>Luke Dashjr</li>
    <li>Luv Khemani</li>
    <li>Marcel Krüger</li>
    <li>Marco Falke</li>
    <li>Mark Friedenbach</li>
    <li>Matt</li>
    <li>Matt Bogosian</li>
    <li>Matt Corallo</li>
    <li>Matthew English</li>
    <li>Matthew Zipkin</li>
    <li>mb300sd</li>
    <li>Mitchell Cash</li>
    <li>mrbandrews</li>
    <li>mruddy</li>
    <li>Murch</li>
    <li>Mustafa</li>
    <li>Nathaniel Mahieu</li>
    <li>Nicolas Dorier</li>
    <li>Patrick Strateman</li>
    <li>Paul Rabahy</li>
    <li>paveljanik</li>
    <li>Pavel Janík</li>
    <li>Pavel Vasin</li>
    <li>Pedro Branco</li>
    <li>Peter Todd</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>Prayag Verma</li>
    <li>ptschip</li>
    <li>Puru</li>
    <li>randy-waterhouse</li>
    <li>R E Broadley</li>
    <li>Rusty Russell</li>
    <li>Suhas Daftuar</li>
    <li>Suriyaa Kudo</li>
    <li>TheLazieR Yip</li>
    <li>Thomas Kerin</li>
    <li>Tom Harding</li>
    <li>Tyler Hardin</li>
    <li>UdjinM6</li>
    <li>Warren Togami</li>
    <li>Will Binns</li>
    <li>Wladimir J. van der Laan</li>
    <li>Yuri Zhykin</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.12.1 released</title>
            <link>https://bitcoin.org/en/release/v0.12.1</link>
            <guid>https://bitcoin.org/en/release/v0.12.1</guid>
          
            <pubDate>Fri, 15 Apr 2016 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.12.1 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.12.1/">https://bitcoin.org/bin/bitcoin-core-0.12.1/</a></p>

  <p>This is a new minor version release, including the BIP9, BIP68 and BIP112
softfork, various bugfixes and updated translations.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <h3 id="downgrade-to-a-version--0120">Downgrade to a version &lt; 0.12.0</h3>

  <p>Because release 0.12.0 and later will obfuscate the chainstate on every
fresh sync or reindex, the chainstate is not backwards-compatible with
pre-0.12 versions of Bitcoin Core or other software.</p>

  <p>If you want to downgrade after you have done a reindex with 0.12.0 or later,
you will need to reindex when you first start Bitcoin Core version 0.11 or
earlier.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="first-version-bits-bip9-softfork-deployment">First version bits BIP9 softfork deployment</h2>

  <p>This release includes a soft fork deployment to enforce <a href="https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki">BIP68</a>,
<a href="https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki">BIP112</a> and <a href="https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki">BIP113</a> using the <a href="https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki">BIP9</a> deployment mechanism.</p>

  <p>The deployment sets the block version number to 0x20000001 between
midnight 1st May 2016 and midnight 1st May 2017 to signal readiness for 
deployment. The version number consists of 0x20000000 to indicate version
bits together with setting bit 0 to indicate support for this combined
deployment, shown as “csv” in the <code class="language-text highlighter-rouge">getblockchaininfo</code> RPC call.</p>

  <p>For more information about the soft forking change, please see
<a href="https://github.com/bitcoin/bitcoin/pull/7648">https://github.com/bitcoin/bitcoin/pull/7648</a></p>

  <p>This specific backport pull-request can be viewed at
<a href="https://github.com/bitcoin/bitcoin/pull/7543">https://github.com/bitcoin/bitcoin/pull/7543</a></p>

  <h2 id="bip68-soft-fork-to-enforce-sequence-locks-for-relative-locktime">BIP68 soft fork to enforce sequence locks for relative locktime</h2>

  <p><a href="https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki">BIP68</a> introduces relative lock-time consensus-enforced semantics of
the sequence number field to enable a signed transaction input to remain
invalid for a defined period of time after confirmation of its corresponding
outpoint.</p>

  <p>For more information about the implementation, see
<a href="https://github.com/bitcoin/bitcoin/pull/7184">https://github.com/bitcoin/bitcoin/pull/7184</a></p>

  <h2 id="bip112-soft-fork-to-enforce-opchecksequenceverify">BIP112 soft fork to enforce OP_CHECKSEQUENCEVERIFY</h2>

  <p><a href="https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki">BIP112</a> redefines the existing OP_NOP3 as OP_CHECKSEQUENCEVERIFY (CSV)
for a new opcode in the Bitcoin scripting system that in combination with
<a href="https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki">BIP68</a> allows execution pathways of a script to be restricted based
on the age of the output being spent.</p>

  <p>For more information about the implementation, see
<a href="https://github.com/bitcoin/bitcoin/pull/7524">https://github.com/bitcoin/bitcoin/pull/7524</a></p>

  <h2 id="bip113-locktime-enforcement-soft-fork">BIP113 locktime enforcement soft fork</h2>

  <p>Bitcoin Core 0.11.2 previously introduced mempool-only locktime
enforcement using GetMedianTimePast(). This release seeks to
consensus enforce the rule.</p>

  <p>Bitcoin transactions currently may specify a locktime indicating when
they may be added to a valid block.  Current consensus rules require
that blocks have a block header time greater than the locktime specified
in any transaction in that block.</p>

  <p>Miners get to choose what time they use for their header time, with the
consensus rule being that no node will accept a block whose time is more
than two hours in the future.  This creates a incentive for miners to
set their header times to future values in order to include locktimed
transactions which weren’t supposed to be included for up to two more
hours.</p>

  <p>The consensus rules also specify that valid blocks may have a header
time greater than that of the median of the 11 previous blocks.  This
GetMedianTimePast() time has a key feature we generally associate with
time: it can’t go backwards.</p>

  <p><a href="https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki">BIP113</a> specifies a soft fork enforced in this release that
weakens this perverse incentive for individual miners to use a future
time by requiring that valid blocks have a computed GetMedianTimePast()
greater than the locktime specified in any transaction in that block.</p>

  <p>Mempool inclusion rules currently require transactions to be valid for
immediate inclusion in a block in order to be accepted into the mempool.
This release begins applying the BIP113 rule to received transactions,
so transaction whose time is greater than the GetMedianTimePast() will
no longer be accepted into the mempool.</p>

  <p><strong>Implication for miners:</strong> you will begin rejecting transactions that
would not be valid under BIP113, which will prevent you from producing
invalid blocks when BIP113 is enforced on the network. Any
transactions which are valid under the current rules but not yet valid
under the BIP113 rules will either be mined by other miners or delayed
until they are valid under BIP113. Note, however, that time-based
locktime transactions are more or less unseen on the network currently.</p>

  <p><strong>Implication for users:</strong> GetMedianTimePast() always trails behind the
current time, so a transaction locktime set to the present time will be
rejected by nodes running this release until the median time moves
forward. To compensate, subtract one hour (3,600 seconds) from your
locktimes to allow those transactions to be included in mempools at
approximately the expected time.</p>

  <p>For more information about the implementation, see
<a href="https://github.com/bitcoin/bitcoin/pull/6566">https://github.com/bitcoin/bitcoin/pull/6566</a></p>

  <h2 id="miscellaneous">Miscellaneous</h2>

  <p>The p2p alert system is off by default. To turn on, use <code class="language-text highlighter-rouge">-alert</code> with
startup configuration.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.12.1 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="rpc-and-other-apis">RPC and other APIs</h3>
  <ul>
    <li>#7739 <code class="language-text highlighter-rouge">7ffc2bd</code> Add abandoned status to listtransactions (jonasschnelli)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>
  <ul>
    <li>#7543 <code class="language-text highlighter-rouge">834aaef</code> Backport BIP9, BIP68 and BIP112 with softfork (btcdrak)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>
  <ul>
    <li>#7804 <code class="language-text highlighter-rouge">90f1d24</code> Track block download times per individual block (sipa)</li>
    <li>#7832 <code class="language-text highlighter-rouge">4c3a00d</code> Reduce block timeout to 10 minutes (laanwj)</li>
  </ul>

  <h3 id="validation">Validation</h3>
  <ul>
    <li>#7821 <code class="language-text highlighter-rouge">4226aac</code> init: allow shutdown during ‘Activating best chain…’ (laanwj)</li>
    <li>#7835 <code class="language-text highlighter-rouge">46898e7</code> Version 2 transactions remain non-standard until CSV activates (sdaftuar)</li>
  </ul>

  <h3 id="build-system">Build system</h3>
  <ul>
    <li>#7487 <code class="language-text highlighter-rouge">00d57b4</code> Workaround Travis-side CI issues (luke-jr)</li>
    <li>#7606 <code class="language-text highlighter-rouge">a10da9a</code> No need to set -L and –location for curl (MarcoFalke)</li>
    <li>#7614 <code class="language-text highlighter-rouge">ca8f160</code> Add curl to packages (now needed for depends) (luke-jr)</li>
    <li>#7776 <code class="language-text highlighter-rouge">a784675</code> Remove unnecessary executables from gitian release (laanwj)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>
  <ul>
    <li>#7715 <code class="language-text highlighter-rouge">19866c1</code> Fix calculation of balances and available coins. (morcos)</li>
  </ul>

  <h3 id="miscellaneous-1">Miscellaneous</h3>
  <ul>
    <li>#7617 <code class="language-text highlighter-rouge">f04f4fd</code> Fix markdown syntax and line terminate LogPrint (MarcoFalke)</li>
    <li>#7747 <code class="language-text highlighter-rouge">4d035bc</code> added depends cross compile info (accraze)</li>
    <li>#7741 <code class="language-text highlighter-rouge">a0cea89</code> Mark p2p alert system as deprecated (btcdrak)</li>
    <li>#7780 <code class="language-text highlighter-rouge">c5f94f6</code> Disable bad-chain alert (btcdrak)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>accraze</li>
    <li>Alex Morcos</li>
    <li>BtcDrak</li>
    <li>Jonas Schnelli</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Mark Friedenbach</li>
    <li>NicolasDorier</li>
    <li>Pieter Wuille</li>
    <li>Suhas Daftuar</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.12.0 released</title>
            <link>https://bitcoin.org/en/release/v0.12.0</link>
            <guid>https://bitcoin.org/en/release/v0.12.0</guid>
          
            <pubDate>Tue, 23 Feb 2016 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.12.0 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.12.0/">https://bitcoin.org/bin/bitcoin-core-0.12.0/</a></p>

  <p>This is a new major version release, bringing new features and other improvements.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <h3 id="downgrade-to-a-version--0100">Downgrade to a version &lt; 0.10.0</h3>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility.</p>

  <h3 id="downgrade-to-a-version--0120">Downgrade to a version &lt; 0.12.0</h3>

  <p>Because release 0.12.0 and later will obfuscate the chainstate on every
fresh sync or reindex, the chainstate is not backwards-compatible with
pre-0.12 versions of Bitcoin Core or other software.</p>

  <p>If you want to downgrade after you have done a reindex with 0.12.0 or later,
you will need to reindex when you first start Bitcoin Core version 0.11 or
earlier.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="signature-validation-using-libsecp256k1">Signature validation using libsecp256k1</h2>

  <p>ECDSA signatures inside Bitcoin transactions now use validation using
<a href="https://github.com/bitcoin/secp256k1">libsecp256k1</a> instead of OpenSSL.</p>

  <p>Depending on the platform, this means a significant speedup for raw signature
validation speed. The advantage is largest on x86_64, where validation is over
five times faster. In practice, this translates to a raw reindexing and new
block validation times that are less than half of what it was before.</p>

  <p>Libsecp256k1 has undergone very extensive testing and validation.</p>

  <p>A side effect of this change is that libconsensus no longer depends on OpenSSL.</p>

  <h2 id="reduce-upload-traffic">Reduce upload traffic</h2>

  <p>A major part of the outbound traffic is caused by serving historic blocks to
other nodes in initial block download state.</p>

  <p>It is now possible to reduce the total upload traffic via the <code class="language-text highlighter-rouge">-maxuploadtarget</code>
parameter. This is <em>not</em> a hard limit but a threshold to minimize the outbound
traffic. When the limit is about to be reached, the uploaded data is cut by not
serving historic blocks (blocks older than one week).
Moreover, any SPV peer is disconnected when they request a filtered block.</p>

  <p>This option can be specified in MiB per day and is turned off by default
(<code class="language-text highlighter-rouge">-maxuploadtarget=0</code>).
The recommended minimum is 144 * MAX_BLOCK_SIZE (currently 144MB) per day.</p>

  <p>Whitelisted peers will never be disconnected, although their traffic counts for
calculating the target.</p>

  <p>A more detailed documentation about keeping traffic low can be found in
<a href="https://github.com/bitcoin/bitcoin/tree/v0.12.0/doc/reduce-traffic.md">/doc/reduce-traffic.md</a>.</p>

  <h2 id="direct-headers-announcement-bip-130">Direct headers announcement (BIP 130)</h2>

  <p>Between compatible peers, [BIP 130]
(https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki)
direct headers announcement is used. This means that blocks are advertised by
announcing their headers directly, instead of just announcing the hash. In a
reorganization, all new headers are sent, instead of just the new tip. This
can often prevent an extra roundtrip before the actual block is downloaded.</p>

  <p>With this change, pruning nodes are now able to relay new blocks to compatible
peers.</p>

  <h2 id="memory-pool-limiting">Memory pool limiting</h2>

  <p>Previous versions of Bitcoin Core had their mempool limited by checking
a transaction’s fees against the node’s minimum relay fee. There was no
upper bound on the size of the mempool and attackers could send a large
number of transactions paying just slighly more than the default minimum
relay fee to crash nodes with relatively low RAM. A temporary workaround
for previous versions of Bitcoin Core was to raise the default minimum
relay fee.</p>

  <p>Bitcoin Core 0.12 will have a strict maximum size on the mempool. The
default value is 300 MB and can be configured with the <code class="language-text highlighter-rouge">-maxmempool</code>
parameter. Whenever a transaction would cause the mempool to exceed
its maximum size, the transaction that (along with in-mempool descendants) has
the lowest total feerate (as a package) will be evicted and the node’s effective
minimum relay feerate will be increased to match this feerate plus the initial
minimum relay feerate. The initial minimum relay feerate is set to
1000 satoshis per kB.</p>

  <p>Bitcoin Core 0.12 also introduces new default policy limits on the length and
size of unconfirmed transaction chains that are allowed in the mempool
(generally limiting the length of unconfirmed chains to 25 transactions, with a
total size of 101 KB).  These limits can be overriden using command line
arguments; see the extended help (<code class="language-text highlighter-rouge">--help -help-debug</code>) for more information.</p>

  <h2 id="opt-in-replace-by-fee-transactions">Opt-in Replace-by-fee transactions</h2>

  <p>It is now possible to replace transactions in the transaction memory pool of
Bitcoin Core 0.12 nodes. Bitcoin Core will only allow replacement of
transactions which have any of their inputs’ <code class="language-text highlighter-rouge">nSequence</code> number set to less
than <code class="language-text highlighter-rouge">0xffffffff - 1</code>.  Moreover, a replacement transaction may only be
accepted when it pays sufficient fee, as described in [BIP 125]
(https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki).</p>

  <p>Transaction replacement can be disabled with a new command line option,
<code class="language-text highlighter-rouge">-mempoolreplacement=0</code>.  Transactions signaling replacement under BIP125 will
still be allowed into the mempool in this configuration, but replacements will
be rejected.  This option is intended for miners who want to continue the
transaction selection behavior of previous releases.</p>

  <p>The <code class="language-text highlighter-rouge">-mempoolreplacement</code> option is <em>not recommended</em> for wallet users seeking
to avoid receipt of unconfirmed opt-in transactions, because this option does
not prevent transactions which are replaceable under BIP 125 from being accepted
(only subsequent replacements, which other nodes on the network that implement
BIP 125 are likely to relay and mine).  Wallet users wishing to detect whether
a transaction is subject to replacement under BIP 125 should instead use the
updated RPC calls <code class="language-text highlighter-rouge">gettransaction</code> and <code class="language-text highlighter-rouge">listtransactions</code>, which now have an
additional field in the output indicating if a transaction is replaceable under
BIP125 (“bip125-replaceable”).</p>

  <p>Note that the wallet in Bitcoin Core 0.12 does not yet have support for
creating transactions that would be replaceable under BIP 125.</p>

  <h2 id="rpc-random-cookie-rpc-authentication">RPC: Random-cookie RPC authentication</h2>

  <p>When no <code class="language-text highlighter-rouge">-rpcpassword</code> is specified, the daemon now uses a special ‘cookie’
file for authentication. This file is generated with random content when the
daemon starts, and deleted when it exits. Its contents are used as
authentication token. Read access to this file controls who can access through
RPC. By default it is stored in the data directory but its location can be
overridden with the option <code class="language-text highlighter-rouge">-rpccookiefile</code>.</p>

  <p>This is similar to Tor’s CookieAuthentication: see
https://www.torproject.org/docs/tor-manual.html.en</p>

  <p>This allows running bitcoind without having to do any manual configuration.</p>

  <h2 id="relay-any-sequence-of-pushdatas-in-opreturn-outputs-now-allowed">Relay: Any sequence of pushdatas in OP_RETURN outputs now allowed</h2>

  <p>Previously OP_RETURN outputs with a payload were only relayed and mined if they
had a single pushdata. This restriction has been lifted to allow any
combination of data pushes and numeric constant opcodes (OP_1 to OP_16) after
the OP_RETURN. The limit on OP_RETURN output size is now applied to the entire
serialized scriptPubKey, 83 bytes by default. (the previous 80 byte default plus
three bytes overhead)</p>

  <h2 id="relay-and-mining-priority-transactions">Relay and Mining: Priority transactions</h2>

  <p>Bitcoin Core has a heuristic ‘priority’ based on coin value and age. This
calculation is used for relaying of transactions which do not pay the
minimum relay fee, and can be used as an alternative way of sorting
transactions for mined blocks. Bitcoin Core will relay transactions with
insufficient fees depending on the setting of <code class="language-text highlighter-rouge">-limitfreerelay=&lt;r&gt;</code> (default:
<code class="language-text highlighter-rouge">r=15</code> kB per minute) and <code class="language-text highlighter-rouge">-blockprioritysize=&lt;s&gt;</code>.</p>

  <p>In Bitcoin Core 0.12, when mempool limit has been reached a higher minimum
relay fee takes effect to limit memory usage. Transactions which do not meet
this higher effective minimum relay fee will not be relayed or mined even if
they rank highly according to the priority heuristic.</p>

  <p>The mining of transactions based on their priority is also now disabled by
default. To re-enable it, simply set <code class="language-text highlighter-rouge">-blockprioritysize=&lt;n&gt;</code> where is the size
in bytes of your blocks to reserve for these transactions. The old default was
50k, so to retain approximately the same policy, you would set
<code class="language-text highlighter-rouge">-blockprioritysize=50000</code>.</p>

  <p>Additionally, as a result of computational simplifications, the priority value
used for transactions received with unconfirmed inputs is lower than in prior
versions due to avoiding recomputing the amounts as input transactions confirm.</p>

  <p>External miner policy set via the <code class="language-text highlighter-rouge">prioritisetransaction</code> RPC to rank
transactions already in the mempool continues to work as it has previously.
Note, however, that if mining priority transactions is left disabled, the
priority delta will be ignored and only the fee metric will be effective.</p>

  <p>This internal automatic prioritization handling is being considered for removal
entirely in Bitcoin Core 0.13, and it is at this time undecided whether the
more accurate priority calculation for chained unconfirmed transactions will be
restored. Community direction on this topic is particularly requested to help
set project priorities.</p>

  <h2 id="automatically-use-tor-hidden-services">Automatically use Tor hidden services</h2>

  <p>Starting with Tor version 0.2.7.1 it is possible, through Tor’s control socket
API, to create and destroy ‘ephemeral’ hidden services programmatically.
Bitcoin Core has been updated to make use of this.</p>

  <p>This means that if Tor is running (and proper authorization is available),
Bitcoin Core automatically creates a hidden service to listen on, without
manual configuration. Bitcoin Core will also use Tor automatically to connect
to other .onion nodes if the control socket can be successfully opened. This
will positively affect the number of available .onion nodes and their usage.</p>

  <p>This new feature is enabled by default if Bitcoin Core is listening, and
a connection to Tor can be made. It can be configured with the <code class="language-text highlighter-rouge">-listenonion</code>,
<code class="language-text highlighter-rouge">-torcontrol</code> and <code class="language-text highlighter-rouge">-torpassword</code> settings. To show verbose debugging
information, pass <code class="language-text highlighter-rouge">-debug=tor</code>.</p>

  <h2 id="notifications-through-zmq">Notifications through ZMQ</h2>

  <p>Bitcoind can now (optionally) asynchronously notify clients through a
ZMQ-based PUB socket of the arrival of new transactions and blocks.
This feature requires installation of the ZMQ C API library 4.x and
configuring its use through the command line or configuration file.
Please see <a href="https://github.com/bitcoin/bitcoin/tree/v0.12.0/doc/zmq.md">docs/zmq.md</a> for details of operation.</p>

  <h2 id="wallet-transaction-fees">Wallet: Transaction fees</h2>

  <p>Various improvements have been made to how the wallet calculates
transaction fees.</p>

  <p>Users can decide to pay a predefined fee rate by setting <code class="language-text highlighter-rouge">-paytxfee=&lt;n&gt;</code>
(or <code class="language-text highlighter-rouge">settxfee &lt;n&gt;</code> rpc during runtime). A value of <code class="language-text highlighter-rouge">n=0</code> signals Bitcoin
Core to use floating fees. By default, Bitcoin Core will use floating
fees.</p>

  <p>Based on past transaction data, floating fees approximate the fees
required to get into the <code class="language-text highlighter-rouge">m</code>th block from now. This is configurable
with <code class="language-text highlighter-rouge">-txconfirmtarget=&lt;m&gt;</code> (default: <code class="language-text highlighter-rouge">2</code>).</p>

  <p>Sometimes, it is not possible to give good estimates, or an estimate
at all. Therefore, a fallback value can be set with <code class="language-text highlighter-rouge">-fallbackfee=&lt;f&gt;</code>
(default: <code class="language-text highlighter-rouge">0.0002</code> BTC/kB).</p>

  <p>At all times, Bitcoin Core will cap fees at <code class="language-text highlighter-rouge">-maxtxfee=&lt;x&gt;</code> (default:
0.10) BTC.
Furthermore, Bitcoin Core will never create transactions paying less than
the current minimum relay fee.
Finally, a user can set the minimum fee rate for all transactions with
<code class="language-text highlighter-rouge">-mintxfee=&lt;i&gt;</code>, which defaults to 1000 satoshis per kB.</p>

  <h2 id="wallet-negative-confirmations-and-conflict-detection">Wallet: Negative confirmations and conflict detection</h2>

  <p>The wallet will now report a negative number for confirmations that indicates
how deep in the block chain the conflict is found. For example, if a transaction
A has 5 confirmations and spends the same input as a wallet transaction B, B
will be reported as having -5 confirmations. If another wallet transaction C
spends an output from B, it will also be reported as having -5 confirmations.
To detect conflicts with historical transactions in the chain a one-time
<code class="language-text highlighter-rouge">-rescan</code> may be needed.</p>

  <p>Unlike earlier versions, unconfirmed but non-conflicting transactions will never
get a negative confirmation count. They are not treated as spendable unless
they’re coming from ourself (change) and accepted into our local mempool,
however. The new “trusted” field in the <code class="language-text highlighter-rouge">listtransactions</code> RPC output
indicates whether outputs of an unconfirmed transaction are considered
spendable.</p>

  <h2 id="wallet-merkle-branches-removed">Wallet: Merkle branches removed</h2>

  <p>Previously, every wallet transaction stored a Merkle branch to prove its
presence in blocks. This wasn’t being used for more than an expensive
sanity check. Since 0.12, these are no longer stored. When loading a
0.12 wallet into an older version, it will automatically rescan to avoid
failed checks.</p>

  <h2 id="wallet-pruning">Wallet: Pruning</h2>

  <p>With 0.12 it is possible to use wallet functionality in pruned mode.
This can reduce the disk usage from currently around 60 GB to
around 2 GB.</p>

  <p>However, rescans as well as the RPCs <code class="language-text highlighter-rouge">importwallet</code>, <code class="language-text highlighter-rouge">importaddress</code>,
<code class="language-text highlighter-rouge">importprivkey</code> are disabled.</p>

  <p>To enable block pruning set <code class="language-text highlighter-rouge">prune=&lt;N&gt;</code> on the command line or in
<code class="language-text highlighter-rouge">bitcoin.conf</code>, where <code class="language-text highlighter-rouge">N</code> is the number of MiB to allot for
raw block &amp; undo data.</p>

  <p>A value of 0 disables pruning. The minimal value above 0 is 550. Your
wallet is as secure with high values as it is with low ones. Higher
values merely ensure that your node will not shut down upon blockchain
reorganizations of more than 2 days - which are unlikely to happen in
practice. In future releases, a higher value may also help the network
as a whole: stored blocks could be served to other nodes.</p>

  <p>For further information about pruning, you may also consult the <a href="https://github.com/bitcoin/bitcoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning">release
notes of v0.11.0</a>.</p>

  <h2 id="nodebloom-service-bit"><code class="language-text highlighter-rouge">NODE_BLOOM</code> service bit</h2>

  <p>Support for the <code class="language-text highlighter-rouge">NODE_BLOOM</code> service bit, as described in <a href="https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki">BIP
111</a>, has been
added to the P2P protocol code.</p>

  <p>BIP 111 defines a service bit to allow peers to advertise that they support
bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol
version to allow peers to identify old nodes which allow bloom filtering of the
connection despite lacking the new service bit.</p>

  <p>In this version, it is only enforced for peers that send protocol versions
<code class="language-text highlighter-rouge">&gt;=70011</code>. For the next major version it is planned that this restriction will be
removed. It is recommended to update SPV clients to check for the <code class="language-text highlighter-rouge">NODE_BLOOM</code>
service bit for nodes that report versions newer than 70011.</p>

  <h2 id="option-parsing-behavior">Option parsing behavior</h2>

  <p>Command line options are now parsed strictly in the order in which they are
specified. It used to be the case that <code class="language-text highlighter-rouge">-X -noX</code> ends up, unintuitively, with X
set, as <code class="language-text highlighter-rouge">-X</code> had precedence over <code class="language-text highlighter-rouge">-noX</code>. This is no longer the case. Like for
other software, the last specified value for an option will hold.</p>

  <h2 id="rpc-low-level-api-changes">RPC: Low-level API changes</h2>

  <ul>
    <li>
      <p>Monetary amounts can be provided as strings. This means that for example the
argument to sendtoaddress can be “0.0001” instead of 0.0001. This can be an
advantage if a JSON library insists on using a lossy floating point type for
numbers, which would be dangerous for monetary amounts.</p>
    </li>
    <li>
      <p>The <code class="language-text highlighter-rouge">asm</code> property of each scriptSig now contains the decoded signature hash
type for each signature that provides a valid defined hash type.</p>
    </li>
    <li>
      <p>OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by <a href="https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki">BIP 65</a></p>
    </li>
  </ul>

  <p>The following items contain assembly representations of scriptSig signatures
and are affected by this change:</p>

  <ul>
    <li>RPC <code class="language-text highlighter-rouge">getrawtransaction</code></li>
    <li>RPC <code class="language-text highlighter-rouge">decoderawtransaction</code></li>
    <li>RPC <code class="language-text highlighter-rouge">decodescript</code></li>
    <li>REST <code class="language-text highlighter-rouge">/rest/tx/</code> (JSON format)</li>
    <li>REST <code class="language-text highlighter-rouge">/rest/block/</code> (JSON format when including extended tx details)</li>
    <li><code class="language-text highlighter-rouge">bitcoin-tx -json</code></li>
  </ul>

  <p>For example, the <code class="language-text highlighter-rouge">scriptSig.asm</code> property of a transaction input that
previously showed an assembly representation of:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c509001 400000 OP_NOP2
</code></pre></div>  </div>

  <p>now shows as:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090[ALL] 400000 OP_CHECKLOCKTIMEVERIFY
</code></pre></div>  </div>

  <p>Note that the output of the RPC <code class="language-text highlighter-rouge">decodescript</code> did not change because it is
configured specifically to process scriptPubKey and not scriptSig scripts.</p>

  <h2 id="rpc-ssl-support-dropped">RPC: SSL support dropped</h2>

  <p>SSL support for RPC, previously enabled by the option <code class="language-text highlighter-rouge">rpcssl</code> has been dropped
from both the client and the server. This was done in preparation for removing
the dependency on OpenSSL for the daemon completely.</p>

  <p>Trying to use <code class="language-text highlighter-rouge">rpcssl</code> will result in an error:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Error: SSL mode for RPC (-rpcssl) is no longer supported.
</code></pre></div>  </div>

  <p>If you are one of the few people that relies on this feature, a flexible
migration path is to use <code class="language-text highlighter-rouge">stunnel</code>. This is an utility that can tunnel
arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install stunnel4
</code></pre></div>  </div>

  <p>Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''
</code></pre></div>  </div>

  <p>It can also be set up system-wide in inetd style.</p>

  <p>Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution
would allow the use of different authentication, loadbalancing, on-the-fly compression and
caching. A sample config for apache2 could look like:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Listen 443

NameVirtualHost *:443
&lt;VirtualHost *:443&gt;

SSLEngine On
SSLCertificateFile /etc/apache2/ssl/server.crt
SSLCertificateKeyFile /etc/apache2/ssl/server.key

&lt;Location /bitcoinrpc&gt;
    ProxyPass http://127.0.0.1:8332/
    ProxyPassReverse http://127.0.0.1:8332/
    # optional enable digest auth
    # AuthType Digest
    # ...

    # optional bypass bitcoind rpc basic auth
    # RequestHeader set Authorization "Basic &lt;hash&gt;"
    # get the &lt;hash&gt; from the shell with: base64 &lt;&lt;&lt; bitcoinrpc:&lt;password&gt;
&lt;/Location&gt;

# Or, balance the load:
# ProxyPass / balancer://balancer_cluster_name

&lt;/VirtualHost&gt;
</code></pre></div>  </div>

  <h2 id="mining-code-changes">Mining Code Changes</h2>

  <p>The mining code in 0.12 has been optimized to be significantly faster and use less
memory. As part of these changes, consensus critical calculations are cached on a
transaction’s acceptance into the mempool and the mining code now relies on the
consistency of the mempool to assemble blocks. However all blocks are still tested
for validity after assembly.</p>

  <h2 id="other-p2p-changes">Other P2P Changes</h2>

  <p>The list of banned peers is now stored on disk rather than in memory.
Restarting bitcoind will no longer clear out the list of banned peers; instead
a new RPC call (<code class="language-text highlighter-rouge">clearbanned</code>) can be used to manually clear the list.  The new
<code class="language-text highlighter-rouge">setban</code> RPC call can also be used to manually ban or unban a peer.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.12.0 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="rpc-and-rest">RPC and REST</h3>

  <ul>
    <li>#6121 <code class="language-text highlighter-rouge">466f0ea</code> Convert entire source tree from json_spirit to UniValue (Jonas Schnelli)</li>
    <li>#6234 <code class="language-text highlighter-rouge">d38cd47</code> fix rpcmining/getblocktemplate univalue transition logic error (Jonas Schnelli)</li>
    <li>#6239 <code class="language-text highlighter-rouge">643114f</code> Don’t go through double in AmountFromValue and ValueFromAmount (Wladimir J. van der Laan)</li>
    <li>#6266 <code class="language-text highlighter-rouge">ebab5d3</code> Fix univalue handling of \u0000 characters. (Daniel Kraft)</li>
    <li>#6276 <code class="language-text highlighter-rouge">f3d4dbb</code> Fix getbalance * 0 (Tom Harding)</li>
    <li>#6257 <code class="language-text highlighter-rouge">5ebe7db</code> Add <code class="language-text highlighter-rouge">paytxfee</code> and <code class="language-text highlighter-rouge">errors</code> JSON fields where appropriate (Stephen)</li>
    <li>#6271 <code class="language-text highlighter-rouge">754aae5</code> New RPC command disconnectnode (Alex van der Peet)</li>
    <li>#6158 <code class="language-text highlighter-rouge">0abfa8a</code> Add setban/listbanned RPC commands (Jonas Schnelli)</li>
    <li>#6307 <code class="language-text highlighter-rouge">7ecdcd9</code> rpcban fixes (Jonas Schnelli)</li>
    <li>#6290 <code class="language-text highlighter-rouge">5753988</code> rpc: make <code class="language-text highlighter-rouge">gettxoutsettinfo</code> run lock-free (Wladimir J. van der Laan)</li>
    <li>#6262 <code class="language-text highlighter-rouge">247b914</code> Return all available information via RPC call “validateaddress” (dexX7)</li>
    <li>#6339 <code class="language-text highlighter-rouge">c3f0490</code> UniValue: don’t escape solidus, keep espacing of reverse solidus (Jonas Schnelli)</li>
    <li>#6353 <code class="language-text highlighter-rouge">6bcb0a2</code> Show softfork status in getblockchaininfo (Wladimir J. van der Laan)</li>
    <li>#6247 <code class="language-text highlighter-rouge">726e286</code> Add getblockheader RPC call (Peter Todd)</li>
    <li>#6362 <code class="language-text highlighter-rouge">d6db115</code> Fix null id in RPC response during startup (Forrest Voight)</li>
    <li>#5486 <code class="language-text highlighter-rouge">943b322</code> [REST] JSON support for /rest/headers (Jonas Schnelli)</li>
    <li>#6379 <code class="language-text highlighter-rouge">c52e8b3</code> rpc: Accept scientific notation for monetary amounts in JSON (Wladimir J. van der Laan)</li>
    <li>#6388 <code class="language-text highlighter-rouge">fd5dfda</code> rpc: Implement random-cookie based authentication (Wladimir J. van der Laan)</li>
    <li>#6457 <code class="language-text highlighter-rouge">3c923e8</code> Include pruned state in chaininfo.json (Simon Males)</li>
    <li>#6456 <code class="language-text highlighter-rouge">bfd807f</code> rpc: Avoid unnecessary parsing roundtrip in number formatting, fix locale issue (Wladimir J. van der Laan)</li>
    <li>#6380 <code class="language-text highlighter-rouge">240b30e</code> rpc: Accept strings in AmountFromValue (Wladimir J. van der Laan)</li>
    <li>#6346 <code class="language-text highlighter-rouge">6bb2805</code> Add OP_RETURN support in createrawtransaction RPC call, add tests. (paveljanik)</li>
    <li>#6013 <code class="language-text highlighter-rouge">6feeec1</code> [REST] Add memory pool API (paveljanik)</li>
    <li>#6576 <code class="language-text highlighter-rouge">da9beb2</code> Stop parsing JSON after first finished construct. (Daniel Kraft)</li>
    <li>#5677 <code class="language-text highlighter-rouge">9aa9099</code> libevent-based http server (Wladimir J. van der Laan)</li>
    <li>#6633 <code class="language-text highlighter-rouge">bbc2b39</code> Report minimum ping time in getpeerinfo (Matt Corallo)</li>
    <li>#6648 <code class="language-text highlighter-rouge">cd381d7</code> Simplify logic of REST request suffix parsing. (Daniel Kraft)</li>
    <li>#6695 <code class="language-text highlighter-rouge">5e21388</code> libevent http fixes (Wladimir J. van der Laan)</li>
    <li>#5264 <code class="language-text highlighter-rouge">48efbdb</code> show scriptSig signature hash types in transaction decodes. fixes #3166 (mruddy)</li>
    <li>#6719 <code class="language-text highlighter-rouge">1a9f19a</code> Make HTTP server shutdown more graceful (Wladimir J. van der Laan)</li>
    <li>#6859 <code class="language-text highlighter-rouge">0fbfc51</code> http: Restrict maximum size of http + headers (Wladimir J. van der Laan)</li>
    <li>#5936 <code class="language-text highlighter-rouge">bf7c195</code> [RPC] Add optional locktime to createrawtransaction (Tom Harding)</li>
    <li>#6877 <code class="language-text highlighter-rouge">26f5b34</code> rpc: Add maxmempool and effective min fee to getmempoolinfo (Wladimir J. van der Laan)</li>
    <li>#6970 <code class="language-text highlighter-rouge">92701b3</code> Fix crash in validateaddress with -disablewallet (Wladimir J. van der Laan)</li>
    <li>#5574 <code class="language-text highlighter-rouge">755b4ba</code> Expose GUI labels in RPC as comments (Luke-Jr)</li>
    <li>#6990 <code class="language-text highlighter-rouge">dbd2c13</code> http: speed up shutdown (Wladimir J. van der Laan)</li>
    <li>#7013 <code class="language-text highlighter-rouge">36baa9f</code> Remove LOCK(cs_main) from decodescript (Peter Todd)</li>
    <li>#6999 <code class="language-text highlighter-rouge">972bf9c</code> add (max)uploadtarget infos to getnettotals RPC help (Jonas Schnelli)</li>
    <li>#7011 <code class="language-text highlighter-rouge">31de241</code> Add mediantime to getblockchaininfo (Peter Todd)</li>
    <li>#7065 <code class="language-text highlighter-rouge">f91e29f</code> http: add Boost 1.49 compatibility (Wladimir J. van der Laan)</li>
    <li>#7087 <code class="language-text highlighter-rouge">be281d8</code> [Net]Add -enforcenodebloom option (Patrick Strateman)</li>
    <li>#7044 <code class="language-text highlighter-rouge">438ee59</code> RPC: Added additional config option for multiple RPC users. (Gregory Sanders)</li>
    <li>#7072 <code class="language-text highlighter-rouge">c143c49</code> [RPC] Add transaction size to JSON output (Nikita Zhavoronkov)</li>
    <li>#7022 <code class="language-text highlighter-rouge">9afbd96</code> Change default block priority size to 0 (Alex Morcos)</li>
    <li>#7141 <code class="language-text highlighter-rouge">c0c08c7</code> rpc: Don’t translate warning messages (Wladimir J. van der Laan)</li>
    <li>#7312 <code class="language-text highlighter-rouge">fd4bd50</code> Add RPC call abandontransaction (Alex Morcos)</li>
    <li>#7222 <code class="language-text highlighter-rouge">e25b158</code> RPC: indicate which transactions are replaceable (Suhas Daftuar)</li>
    <li>#7472 <code class="language-text highlighter-rouge">b2f2b85</code> rpc: Add WWW-Authenticate header to 401 response (Wladimir J. van der Laan)</li>
    <li>#7469 <code class="language-text highlighter-rouge">9cb31e6</code> net.h fix spelling: misbeha{b,v}ing (Matt)</li>
  </ul>

  <h3 id="configuration-and-command-line-options">Configuration and command-line options</h3>

  <ul>
    <li>#6164 <code class="language-text highlighter-rouge">8d05ec7</code> Allow user to use -debug=1 to enable all debugging (lpescher)</li>
    <li>#5288 <code class="language-text highlighter-rouge">4452205</code> Added <code class="language-text highlighter-rouge">-whiteconnections=&lt;n&gt;</code> option (Josh Lehan)</li>
    <li>#6284 <code class="language-text highlighter-rouge">10ac38e</code> Fix argument parsing oddity with -noX (Wladimir J. van der Laan)</li>
    <li>#6489 <code class="language-text highlighter-rouge">c9c017a</code> Give a better error message if system clock is bad (Casey Rodarmor)</li>
    <li>#6462 <code class="language-text highlighter-rouge">c384800</code> implement uacomment config parameter which can add comments to user agent as per BIP-0014 (Pavol Rusnak)</li>
    <li>#6647 <code class="language-text highlighter-rouge">a3babc8</code> Sanitize uacomment (MarcoFalke)</li>
    <li>#6742 <code class="language-text highlighter-rouge">3b2d37c</code> Changed logging to make -logtimestamps to work also for -printtoconsole (arnuschky)</li>
    <li>#6846 <code class="language-text highlighter-rouge">2cd020d</code> alias -h for -help (Daniel Cousens)</li>
    <li>#6622 <code class="language-text highlighter-rouge">7939164</code> Introduce -maxuploadtarget (Jonas Schnelli)</li>
    <li>#6881 <code class="language-text highlighter-rouge">2b62551</code> Debug: Add option for microsecond precision in debug.log (Suhas Daftuar)</li>
    <li>#6776 <code class="language-text highlighter-rouge">e06c14f</code> Support -checkmempool=N, which runs checks once every N transactions (Pieter Wuille)</li>
    <li>#6896 <code class="language-text highlighter-rouge">d482c0a</code> Make -checkmempool=1 not fail through int32 overflow (Pieter Wuille)</li>
    <li>#6993 <code class="language-text highlighter-rouge">b632145</code> Add -blocksonly option (Patrick Strateman)</li>
    <li>#7323 <code class="language-text highlighter-rouge">a344880</code> 0.12: Backport -bytespersigop option (Luke-Jr)</li>
    <li>#7386 <code class="language-text highlighter-rouge">da83ecd</code> Add option <code class="language-text highlighter-rouge">-permitrbf</code> to set transaction replacement policy (Wladimir J. van der Laan)</li>
    <li>#7290 <code class="language-text highlighter-rouge">b16b5bc</code> Add missing options help (MarcoFalke)</li>
    <li>#7440 <code class="language-text highlighter-rouge">c76bfff</code> Rename permitrbf to mempoolreplacement and provide minimal string-list forward compatibility (Luke-Jr)</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>

  <ul>
    <li>#6203 <code class="language-text highlighter-rouge">f00b623</code> Remove P2SH coinbase flag, no longer interesting (Luke-Jr)</li>
    <li>#6222 <code class="language-text highlighter-rouge">9c93ee5</code> Explicitly set tx.nVersion for the genesis block and mining tests (Mark Friedenbach)</li>
    <li>#5985 <code class="language-text highlighter-rouge">3a1d3e8</code> Fix removing of orphan transactions (Alex Morcos)</li>
    <li>#6221 <code class="language-text highlighter-rouge">dd8fe82</code> Prune: Support noncontiguous block files (Adam Weiss)</li>
    <li>#6124 <code class="language-text highlighter-rouge">41076aa</code> Mempool only CHECKLOCKTIMEVERIFY (BIP65) verification, unparameterized version (Peter Todd)</li>
    <li>#6329 <code class="language-text highlighter-rouge">d0a10c1</code> acceptnonstdtxn option to skip (most) “non-standard transaction” checks, for testnet/regtest only (Luke-Jr)</li>
    <li>#6410 <code class="language-text highlighter-rouge">7cdefb9</code> Implement accurate memory accounting for mempool (Pieter Wuille)</li>
    <li>#6444 <code class="language-text highlighter-rouge">24ce77d</code> Exempt unspendable transaction outputs from dust checks (dexX7)</li>
    <li>#5913 <code class="language-text highlighter-rouge">a0625b8</code> Add absurdly high fee message to validation state (Shaul Kfir)</li>
    <li>#6177 <code class="language-text highlighter-rouge">2f746c6</code> Prevent block.nTime from decreasing (Mark Friedenbach)</li>
    <li>#6377 <code class="language-text highlighter-rouge">e545371</code> Handle no chain tip available in InvalidChainFound() (Ross Nicoll)</li>
    <li>#6551 <code class="language-text highlighter-rouge">39ddaeb</code> Handle leveldb::DestroyDB() errors on wipe failure (Adam Weiss)</li>
    <li>#6654 <code class="language-text highlighter-rouge">b0ce450</code> Mempool package tracking (Suhas Daftuar)</li>
    <li>#6715 <code class="language-text highlighter-rouge">82d2aef</code> Fix mempool packages (Suhas Daftuar)</li>
    <li>#6680 <code class="language-text highlighter-rouge">4f44530</code> use CBlockIndex instead of uint256 for UpdatedBlockTip signal (Jonas Schnelli)</li>
    <li>#6650 <code class="language-text highlighter-rouge">4fac576</code> Obfuscate chainstate (James O’Beirne)</li>
    <li>#6777 <code class="language-text highlighter-rouge">9caaf6e</code> Unobfuscate chainstate data in CCoinsViewDB::GetStats (James O’Beirne)</li>
    <li>#6722 <code class="language-text highlighter-rouge">3b20e23</code> Limit mempool by throwing away the cheapest txn and setting min relay fee to it (Matt Corallo)</li>
    <li>#6889 <code class="language-text highlighter-rouge">38369dd</code> fix locking issue with new mempool limiting (Jonas Schnelli)</li>
    <li>#6464 <code class="language-text highlighter-rouge">8f3b3cd</code> Always clean up manual transaction prioritization (Casey Rodarmor)</li>
    <li>#6865 <code class="language-text highlighter-rouge">d0badb9</code> Fix chainstate serialized_size computation (Pieter Wuille)</li>
    <li>#6566 <code class="language-text highlighter-rouge">ff057f4</code> BIP-113: Mempool-only median time-past as endpoint for lock-time calculations (Mark Friedenbach)</li>
    <li>#6934 <code class="language-text highlighter-rouge">3038eb6</code> Restores mempool only BIP113 enforcement (Gregory Maxwell)</li>
    <li>#6965 <code class="language-text highlighter-rouge">de7d459</code> Benchmark sanity checks and fork checks in ConnectBlock (Matt Corallo)</li>
    <li>#6918 <code class="language-text highlighter-rouge">eb6172a</code> Make sigcache faster, more efficient, larger (Pieter Wuille)</li>
    <li>#6771 <code class="language-text highlighter-rouge">38ed190</code> Policy: Lower default limits for tx chains (Alex Morcos)</li>
    <li>#6932 <code class="language-text highlighter-rouge">73fa5e6</code> ModifyNewCoins saves database lookups (Alex Morcos)</li>
    <li>#5967 <code class="language-text highlighter-rouge">05d5918</code> Alter assumptions in CCoinsViewCache::BatchWrite (Alex Morcos)</li>
    <li>#6871 <code class="language-text highlighter-rouge">0e93586</code> nSequence-based Full-RBF opt-in (Peter Todd)</li>
    <li>#7008 <code class="language-text highlighter-rouge">eb77416</code> Lower bound priority (Alex Morcos)</li>
    <li>#6915 <code class="language-text highlighter-rouge">2ef5ffa</code> [Mempool] Improve removal of invalid transactions after reorgs (Suhas Daftuar)</li>
    <li>#6898 <code class="language-text highlighter-rouge">4077ad2</code> Rewrite CreateNewBlock (Alex Morcos)</li>
    <li>#6872 <code class="language-text highlighter-rouge">bdda4d5</code> Remove UTXO cache entries when the tx they were added for is removed/does not enter mempool (Matt Corallo)</li>
    <li>#7062 <code class="language-text highlighter-rouge">12c469b</code> [Mempool] Fix mempool limiting and replace-by-fee for PrioritiseTransaction (Suhas Daftuar)</li>
    <li>#7276 <code class="language-text highlighter-rouge">76de36f</code> Report non-mandatory script failures correctly (Pieter Wuille)</li>
    <li>#7217 <code class="language-text highlighter-rouge">e08b7cb</code> Mark blocks with too many sigops as failed (Suhas Daftuar)</li>
    <li>#7387 <code class="language-text highlighter-rouge">f4b2ce8</code> Get rid of inaccurate ScriptSigArgsExpected (Pieter Wuille)</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>

  <ul>
    <li>#6172 <code class="language-text highlighter-rouge">88a7ead</code> Ignore getheaders requests when not synced (Suhas Daftuar)</li>
    <li>#5875 <code class="language-text highlighter-rouge">9d60602</code> Be stricter in processing unrequested blocks (Suhas Daftuar)</li>
    <li>#6256 <code class="language-text highlighter-rouge">8ccc07c</code> Use best header chain timestamps to detect partitioning (Gavin Andresen)</li>
    <li>#6283 <code class="language-text highlighter-rouge">a903ad7</code> make CAddrMan::size() return the correct type of size_t (Diapolo)</li>
    <li>#6272 <code class="language-text highlighter-rouge">40400d5</code> Improve proxy initialization (continues #4871) (Wladimir J. van der Laan, Diapolo)</li>
    <li>#6310 <code class="language-text highlighter-rouge">66e5465</code> banlist.dat: store banlist on disk (Jonas Schnelli)</li>
    <li>#6412 <code class="language-text highlighter-rouge">1a2de32</code> Test whether created sockets are select()able (Pieter Wuille)</li>
    <li>#6498 <code class="language-text highlighter-rouge">219b916</code> Keep track of recently rejected transactions with a rolling bloom filter (cont’d) (Peter Todd)</li>
    <li>#6556 <code class="language-text highlighter-rouge">70ec975</code> Fix masking of irrelevant bits in address groups. (Alex Morcos)</li>
    <li>#6530 <code class="language-text highlighter-rouge">ea19c2b</code> Improve addrman Select() performance when buckets are nearly empty (Pieter Wuille)</li>
    <li>#6583 <code class="language-text highlighter-rouge">af9305a</code> add support for miniupnpc api version 14 (Pavel Vasin)</li>
    <li>#6374 <code class="language-text highlighter-rouge">69dc5b5</code> Connection slot exhaustion DoS mitigation (Patrick Strateman)</li>
    <li>#6636 <code class="language-text highlighter-rouge">536207f</code> net: correctly initialize nMinPingUsecTime (Wladimir J. van der Laan)</li>
    <li>#6579 <code class="language-text highlighter-rouge">0c27795</code> Add NODE_BLOOM service bit and bump protocol version (Matt Corallo)</li>
    <li>#6148 <code class="language-text highlighter-rouge">999c8be</code> Relay blocks when pruning (Suhas Daftuar)</li>
    <li>#6588 <code class="language-text highlighter-rouge">cf9bb11</code> In (strCommand == “tx”), return if AlreadyHave() (Tom Harding)</li>
    <li>#6974 <code class="language-text highlighter-rouge">2f71b07</code> Always allow getheaders from whitelisted peers (Wladimir J. van der Laan)</li>
    <li>#6639 <code class="language-text highlighter-rouge">bd629d7</code> net: Automatically create hidden service, listen on Tor (Wladimir J. van der Laan)</li>
    <li>#6984 <code class="language-text highlighter-rouge">9ffc687</code> don’t enforce maxuploadtarget’s disconnect for whitelisted peers (Jonas Schnelli)</li>
    <li>#7046 <code class="language-text highlighter-rouge">c322652</code> Net: Improve blocks only mode. (Patrick Strateman)</li>
    <li>#7090 <code class="language-text highlighter-rouge">d6454f6</code> Connect to Tor hidden services by default (when listening on Tor) (Peter Todd)</li>
    <li>#7106 <code class="language-text highlighter-rouge">c894fbb</code> Fix and improve relay from whitelisted peers (Pieter Wuille)</li>
    <li>#7129 <code class="language-text highlighter-rouge">5d5ef3a</code> Direct headers announcement (rebase of #6494) (Pieter Wuille)</li>
    <li>#7079 <code class="language-text highlighter-rouge">1b5118b</code> Prevent peer flooding inv request queue (redux) (redux) (Gregory Maxwell)</li>
    <li>#7166 <code class="language-text highlighter-rouge">6ba25d2</code> Disconnect on mempool requests from peers when over the upload limit. (Gregory Maxwell)</li>
    <li>#7133 <code class="language-text highlighter-rouge">f31955d</code> Replace setInventoryKnown with a rolling bloom filter (rebase of #7100) (Pieter Wuille)</li>
    <li>#7174 <code class="language-text highlighter-rouge">82aff88</code> Don’t do mempool lookups for “mempool” command without a filter (Matt Corallo)</li>
    <li>#7179 <code class="language-text highlighter-rouge">44fef99</code> net: Fix sent reject messages for blocks and transactions (Wladimir J. van der Laan)</li>
    <li>#7181 <code class="language-text highlighter-rouge">8fc174a</code> net: Add and document network messages in protocol.h (Wladimir J. van der Laan)</li>
    <li>#7125 <code class="language-text highlighter-rouge">10b88be</code> Replace global trickle node with random delays (Pieter Wuille)</li>
    <li>#7415 <code class="language-text highlighter-rouge">cb83beb</code> net: Hardcoded seeds update January 2016 (Wladimir J. van der Laan)</li>
    <li>#7438 <code class="language-text highlighter-rouge">e2d9a58</code> Do not absolutely protect local peers; decide group ties based on time (Gregory Maxwell)</li>
    <li>#7439 <code class="language-text highlighter-rouge">86755bc</code> Add whitelistforcerelay to control forced relaying. [#7099 redux] (Gregory Maxwell)</li>
    <li>#7482 <code class="language-text highlighter-rouge">e16f5b4</code> Ensure headers count is correct (Suhas Daftuar)</li>
  </ul>

  <h3 id="validation">Validation</h3>

  <ul>
    <li>#5927 <code class="language-text highlighter-rouge">8d9f0a6</code> Reduce checkpoints’ effect on consensus. (Pieter Wuille)</li>
    <li>#6299 <code class="language-text highlighter-rouge">24f2489</code> Bugfix: Don’t check the genesis block header before accepting it (Jorge Timón)</li>
    <li>#6361 <code class="language-text highlighter-rouge">d7ada03</code> Use real number of cores for default -par, ignore virtual cores (Wladimir J. van der Laan)</li>
    <li>#6519 <code class="language-text highlighter-rouge">87f37e2</code> Make logging for validation optional (Wladimir J. van der Laan)</li>
    <li>#6351 <code class="language-text highlighter-rouge">2a1090d</code> CHECKLOCKTIMEVERIFY (BIP65) IsSuperMajority() soft-fork (Peter Todd)</li>
    <li>#6931 <code class="language-text highlighter-rouge">54e8bfe</code> Skip BIP 30 verification where not necessary (Alex Morcos)</li>
    <li>#6954 <code class="language-text highlighter-rouge">e54ebbf</code> Switch to libsecp256k1-based ECDSA validation (Pieter Wuille)</li>
    <li>#6508 <code class="language-text highlighter-rouge">61457c2</code> Switch to a constant-space Merkle root/branch algorithm. (Pieter Wuille)</li>
    <li>#6914 <code class="language-text highlighter-rouge">327291a</code> Add pre-allocated vector type and use it for CScript (Pieter Wuille)</li>
    <li>#7500 <code class="language-text highlighter-rouge">889e5b3</code> Correctly report high-S violations (Pieter Wuille)</li>
  </ul>

  <h3 id="build-system">Build system</h3>

  <ul>
    <li>#6210 <code class="language-text highlighter-rouge">0e4f2a0</code> build: disable optional use of gmp in internal secp256k1 build (Wladimir J. van der Laan)</li>
    <li>#6214 <code class="language-text highlighter-rouge">87406aa</code> [OSX] revert renaming of Bitcoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)</li>
    <li>#6218 <code class="language-text highlighter-rouge">9d67b10</code> build/gitian misc updates (Cory Fields)</li>
    <li>#6269 <code class="language-text highlighter-rouge">d4565b6</code> gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures (Cory Fields)</li>
    <li>#6418 <code class="language-text highlighter-rouge">d4a910c</code> Add autogen.sh to source tarball. (randy-waterhouse)</li>
    <li>#6373 <code class="language-text highlighter-rouge">1ae3196</code> depends: non-qt bumps for 0.12 (Cory Fields)</li>
    <li>#6434 <code class="language-text highlighter-rouge">059b352</code> Preserve user-passed CXXFLAGS with –enable-debug (Gavin Andresen)</li>
    <li>#6501 <code class="language-text highlighter-rouge">fee6554</code> Misc build fixes (Cory Fields)</li>
    <li>#6600 <code class="language-text highlighter-rouge">ef4945f</code> Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)</li>
    <li>#6619 <code class="language-text highlighter-rouge">4862708</code> depends: bump miniupnpc and ccache (Michael Ford)</li>
    <li>#6801 <code class="language-text highlighter-rouge">ae69a75</code> [depends] Latest config.guess and config.sub (Michael Ford)</li>
    <li>#6938 <code class="language-text highlighter-rouge">193f7b5</code> build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)</li>
    <li>#7092 <code class="language-text highlighter-rouge">348b281</code> build: Set osx permissions in the dmg to make Gatekeeper happy (Cory Fields)</li>
    <li>#6980 <code class="language-text highlighter-rouge">eccd671</code> [Depends] Bump Boost, miniupnpc, ccache &amp; zeromq (Michael Ford)</li>
    <li>#7424 <code class="language-text highlighter-rouge">aa26ee0</code> Add security/export checks to gitian and fix current failures (Cory Fields)</li>
  </ul>

  <h3 id="wallet">Wallet</h3>

  <ul>
    <li>#6183 <code class="language-text highlighter-rouge">87550ee</code> Fix off-by-one error w/ nLockTime in the wallet (Peter Todd)</li>
    <li>#6057 <code class="language-text highlighter-rouge">ac5476e</code> re-enable wallet in autoprune (Jonas Schnelli)</li>
    <li>#6356 <code class="language-text highlighter-rouge">9e6c33b</code> Delay initial pruning until after wallet init (Adam Weiss)</li>
    <li>#6088 <code class="language-text highlighter-rouge">91389e5</code> fundrawtransaction (Matt Corallo)</li>
    <li>#6415 <code class="language-text highlighter-rouge">ddd8d80</code> Implement watchonly support in fundrawtransaction (Matt Corallo)</li>
    <li>#6567 <code class="language-text highlighter-rouge">0f0f323</code> Fix crash when mining with empty keypool. (Daniel Kraft)</li>
    <li>#6688 <code class="language-text highlighter-rouge">4939eab</code> Fix locking in GetTransaction. (Alex Morcos)</li>
    <li>#6645 <code class="language-text highlighter-rouge">4dbd43e</code> Enable wallet key imports without rescan in pruned mode. (Gregory Maxwell)</li>
    <li>#6550 <code class="language-text highlighter-rouge">5b77244</code> Do not store Merkle branches in the wallet. (Pieter Wuille)</li>
    <li>#5924 <code class="language-text highlighter-rouge">12a7712</code> Clean up change computation in CreateTransaction. (Daniel Kraft)</li>
    <li>#6906 <code class="language-text highlighter-rouge">48b5b84</code> Reject invalid pubkeys when reading ckey items from the wallet. (Gregory Maxwell)</li>
    <li>#7010 <code class="language-text highlighter-rouge">e0a5ef8</code> Fix fundrawtransaction handling of includeWatching (Peter Todd)</li>
    <li>#6851 <code class="language-text highlighter-rouge">616d61b</code> Optimisation: Store transaction list order in memory rather than compute it every need (Luke-Jr)</li>
    <li>#6134 <code class="language-text highlighter-rouge">e92377f</code> Improve usage of fee estimation code (Alex Morcos)</li>
    <li>#7103 <code class="language-text highlighter-rouge">a775182</code> [wallet, rpc tests] Fix settxfee, paytxfee (MarcoFalke)</li>
    <li>#7105 <code class="language-text highlighter-rouge">30c2d8c</code> Keep track of explicit wallet conflicts instead of using mempool (Pieter Wuille)</li>
    <li>#7096 <code class="language-text highlighter-rouge">9490bd7</code> [Wallet] Improve minimum absolute fee GUI options (Jonas Schnelli)</li>
    <li>#6216 <code class="language-text highlighter-rouge">83f06ca</code> Take the training wheels off anti-fee-sniping (Peter Todd)</li>
    <li>#4906 <code class="language-text highlighter-rouge">96e8d12</code> Issue#1643: Coinselection prunes extraneous inputs from ApproximateBestSubset (Murch)</li>
    <li>#7200 <code class="language-text highlighter-rouge">06c6a58</code> Checks for null data transaction before issuing error to debug.log (Andy Craze)</li>
    <li>#7296 <code class="language-text highlighter-rouge">a36d79b</code> Add sane fallback for fee estimation (Alex Morcos)</li>
    <li>#7293 <code class="language-text highlighter-rouge">ff9b610</code> Add regression test for vValue sort order (MarcoFalke)</li>
    <li>#7306 <code class="language-text highlighter-rouge">4707797</code> Make sure conflicted wallet tx’s update balances (Alex Morcos)</li>
    <li>#7381 <code class="language-text highlighter-rouge">621bbd8</code> [walletdb] Fix syntax error in key parser (MarcoFalke)</li>
    <li>#7491 <code class="language-text highlighter-rouge">00ec73e</code> wallet: Ignore MarkConflict if block hash is not known (Wladimir J. van der Laan)</li>
    <li>#7502 <code class="language-text highlighter-rouge">1329963</code> Update the wallet best block marker before pruning (Pieter Wuille)</li>
  </ul>

  <h3 id="gui">GUI</h3>

  <ul>
    <li>#6217 <code class="language-text highlighter-rouge">c57e12a</code> disconnect peers from peers tab via context menu (Diapolo)</li>
    <li>#6209 <code class="language-text highlighter-rouge">ab0ec67</code> extend rpc console peers tab (Diapolo)</li>
    <li>#6484 <code class="language-text highlighter-rouge">1369d69</code> use CHashWriter also in SignVerifyMessageDialog (Pavel Vasin)</li>
    <li>#6487 <code class="language-text highlighter-rouge">9848d42</code> Introduce PlatformStyle (Wladimir J. van der Laan)</li>
    <li>#6505 <code class="language-text highlighter-rouge">100c9d3</code> cleanup icons (MarcoFalke)</li>
    <li>#4587 <code class="language-text highlighter-rouge">0c465f5</code> allow users to set -onion via GUI (Diapolo)</li>
    <li>#6529 <code class="language-text highlighter-rouge">c0f66ce</code> show client user agent in debug window (Diapolo)</li>
    <li>#6594 <code class="language-text highlighter-rouge">878ea69</code> Disallow duplicate windows. (Casey Rodarmor)</li>
    <li>#5665 <code class="language-text highlighter-rouge">6f55cdd</code> add verifySize() function to PaymentServer (Diapolo)</li>
    <li>#6317 <code class="language-text highlighter-rouge">ca5e2a1</code> minor optimisations in peertablemodel (Diapolo)</li>
    <li>#6315 <code class="language-text highlighter-rouge">e59d2a8</code> allow banning and unbanning over UI-&gt;peers table (Jonas Schnelli)</li>
    <li>#6653 <code class="language-text highlighter-rouge">e04b2fa</code> Pop debug window in foreground when opened twice (MarcoFalke)</li>
    <li>#6864 <code class="language-text highlighter-rouge">c702521</code> Use monospace font (MarcoFalke)</li>
    <li>#6887 <code class="language-text highlighter-rouge">3694b74</code> Update coin control and smartfee labels (MarcoFalke)</li>
    <li>#7000 <code class="language-text highlighter-rouge">814697c</code> add shortcurts for debug-/console-window (Jonas Schnelli)</li>
    <li>#6951 <code class="language-text highlighter-rouge">03403d8</code> Use maxTxFee instead of 10000000 (MarcoFalke)</li>
    <li>#7051 <code class="language-text highlighter-rouge">a190777</code> ui: Add “Copy raw transaction data” to transaction list context menu (Wladimir J. van der Laan)</li>
    <li>#6979 <code class="language-text highlighter-rouge">776848a</code> simple mempool info in debug window (Jonas Schnelli)</li>
    <li>#7006 <code class="language-text highlighter-rouge">26af1ac</code> add startup option to reset Qt settings (Jonas Schnelli)</li>
    <li>#6780 <code class="language-text highlighter-rouge">2a94cd6</code> Call init’s parameter interaction before we create the UI options model (Jonas Schnelli)</li>
    <li>#7112 <code class="language-text highlighter-rouge">96b8025</code> reduce cs_main locks during tip update, more fluently update UI (Jonas Schnelli)</li>
    <li>#7206 <code class="language-text highlighter-rouge">f43c2f9</code> Add “NODE_BLOOM” to guiutil so that peers don’t get UNKNOWN[4] (Matt Corallo)</li>
    <li>#7282 <code class="language-text highlighter-rouge">5cadf3e</code> fix coincontrol update issue when deleting a send coins entry (Jonas Schnelli)</li>
    <li>#7319 <code class="language-text highlighter-rouge">1320300</code> Intro: Display required space (MarcoFalke)</li>
    <li>#7318 <code class="language-text highlighter-rouge">9265e89</code> quickfix for RPC timer interface problem (Jonas Schnelli)</li>
    <li>#7327 <code class="language-text highlighter-rouge">b16b5bc</code> [Wallet] Transaction View: LastMonth calculation fixed (crowning-)</li>
    <li>#7364 <code class="language-text highlighter-rouge">7726c48</code> [qt] Windows: Make rpcconsole monospace font larger (MarcoFalke)</li>
    <li>#7384 <code class="language-text highlighter-rouge">294f432</code> [qt] Peertable: Increase SUBVERSION_COLUMN_WIDTH (MarcoFalke)</li>
  </ul>

  <h3 id="tests-and-qa">Tests and QA</h3>

  <ul>
    <li>#6305 <code class="language-text highlighter-rouge">9005c91</code> build: comparison tool swap (Cory Fields)</li>
    <li>#6318 <code class="language-text highlighter-rouge">e307e13</code> build: comparison tool NPE fix (Cory Fields)</li>
    <li>#6337 <code class="language-text highlighter-rouge">0564c5b</code> Testing infrastructure: mocktime fixes (Gavin Andresen)</li>
    <li>#6350 <code class="language-text highlighter-rouge">60abba1</code> add unit tests for the decodescript rpc (mruddy)</li>
    <li>#5881 <code class="language-text highlighter-rouge">3203a08</code> Fix and improve txn_doublespend.py test (Tom Harding)</li>
    <li>#6390 <code class="language-text highlighter-rouge">6a73d66</code> tests: Fix bitcoin-tx signing test case (Wladimir J. van der Laan)</li>
    <li>#6368 <code class="language-text highlighter-rouge">7fc25c2</code> CLTV: Add more tests to improve coverage (Esteban Ordano)</li>
    <li>#6414 <code class="language-text highlighter-rouge">5121c68</code> Fix intermittent test failure, reduce test time (Tom Harding)</li>
    <li>#6417 <code class="language-text highlighter-rouge">44fa82d</code> [QA] fix possible reorg issue in (fund)rawtransaction(s).py RPC test (Jonas Schnelli)</li>
    <li>#6398 <code class="language-text highlighter-rouge">3d9362d</code> rpc: Remove chain-specific RequireRPCPassword (Wladimir J. van der Laan)</li>
    <li>#6428 <code class="language-text highlighter-rouge">bb59e78</code> tests: Remove old sh-based test framework (Wladimir J. van der Laan)</li>
    <li>#5515 <code class="language-text highlighter-rouge">d946e9a</code> RFC: Assert on probable deadlocks if the second lock isnt try_lock (Matt Corallo)</li>
    <li>#6287 <code class="language-text highlighter-rouge">d2464df</code> Clang lock debug (Cory Fields)</li>
    <li>#6465 <code class="language-text highlighter-rouge">410fd74</code> Don’t share objects between TestInstances (Casey Rodarmor)</li>
    <li>#6534 <code class="language-text highlighter-rouge">6c1c7fd</code> Fix test locking issues and un-revert the probable-deadlines assertions commit (Cory Fields)</li>
    <li>#6509 <code class="language-text highlighter-rouge">bb4faee</code> Fix race condition on test node shutdown (Casey Rodarmor)</li>
    <li>#6523 <code class="language-text highlighter-rouge">561f8af</code> Add p2p-fullblocktest.py (Casey Rodarmor)</li>
    <li>#6590 <code class="language-text highlighter-rouge">981fd92</code> Fix stale socket rebinding and re-enable python tests for Windows (Cory Fields)</li>
    <li>#6730 <code class="language-text highlighter-rouge">cb4d6d0</code> build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)</li>
    <li>#6616 <code class="language-text highlighter-rouge">5ab5dca</code> Regression Tests: Migrated rpc-tests.sh to all Python rpc-tests.py (Peter Tschipper)</li>
    <li>#6720 <code class="language-text highlighter-rouge">d479311</code> Creates unittests for addrman, makes addrman more testable. (Ethan Heilman)</li>
    <li>#6853 <code class="language-text highlighter-rouge">c834f56</code> Added fPowNoRetargeting field to Consensus::Params (Eric Lombrozo)</li>
    <li>#6827 <code class="language-text highlighter-rouge">87e5539</code> [rpc-tests] Check return code (MarcoFalke)</li>
    <li>#6848 <code class="language-text highlighter-rouge">f2c869a</code> Add DERSIG transaction test cases (Ross Nicoll)</li>
    <li>#6813 <code class="language-text highlighter-rouge">5242bb3</code> Support gathering code coverage data for RPC tests with lcov (dexX7)</li>
    <li>#6888 <code class="language-text highlighter-rouge">c8322ff</code> Clear strMiscWarning before running PartitionAlert (Eric Lombrozo)</li>
    <li>#6894 <code class="language-text highlighter-rouge">2675276</code> [Tests] Fix BIP65 p2p test (Suhas Daftuar)</li>
    <li>#6863 <code class="language-text highlighter-rouge">725539e</code> [Test Suite] Fix test for null tx input (Daniel Kraft)</li>
    <li>#6926 <code class="language-text highlighter-rouge">a6d0d62</code> tests: Initialize networking on windows (Wladimir J. van der Laan)</li>
    <li>#6822 <code class="language-text highlighter-rouge">9fa54a1</code> [tests] Be more strict checking dust (MarcoFalke)</li>
    <li>#6804 <code class="language-text highlighter-rouge">5fcc14e</code> [tests] Add basic coverage reporting for RPC tests (James O’Beirne)</li>
    <li>#7045 <code class="language-text highlighter-rouge">72dccfc</code> Bugfix: Use unique autostart filenames on Linux for testnet/regtest (Luke-Jr)</li>
    <li>#7095 <code class="language-text highlighter-rouge">d8368a0</code> Replace scriptnum_test’s normative ScriptNum implementation (Wladimir J. van der Laan)</li>
    <li>#7063 <code class="language-text highlighter-rouge">6abf6eb</code> [Tests] Add prioritisetransaction RPC test (Suhas Daftuar)</li>
    <li>#7137 <code class="language-text highlighter-rouge">16f4a6e</code> Tests: Explicitly set chain limits in replace-by-fee test (Suhas Daftuar)</li>
    <li>#7216 <code class="language-text highlighter-rouge">9572e49</code> Removed offline testnet DNSSeed ‘alexykot.me’. (tnull)</li>
    <li>#7209 <code class="language-text highlighter-rouge">f3ad812</code> test: don’t override BITCOIND and BITCOINCLI if they’re set (Wladimir J. van der Laan)</li>
    <li>#7226 <code class="language-text highlighter-rouge">301f16a</code> Tests: Add more tests to p2p-fullblocktest (Suhas Daftuar)</li>
    <li>#7153 <code class="language-text highlighter-rouge">9ef7c54</code> [Tests] Add mempool_limit.py test (Jonas Schnelli)</li>
    <li>#7170 <code class="language-text highlighter-rouge">453c567</code> tests: Disable Tor interaction (Wladimir J. van der Laan)</li>
    <li>#7229 <code class="language-text highlighter-rouge">1ed938b</code> [qa] wallet: Check if maintenance changes the balance (MarcoFalke)</li>
    <li>#7308 <code class="language-text highlighter-rouge">d513405</code> [Tests] Eliminate intermittent failures in sendheaders.py (Suhas Daftuar)</li>
    <li>#7468 <code class="language-text highlighter-rouge">947c4ff</code> [rpc-tests] Change solve() to use rehash (Brad Andrews)</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>

  <ul>
    <li>#6213 <code class="language-text highlighter-rouge">e54ff2f</code> [init] add -blockversion help and extend -upnp help (Diapolo)</li>
    <li>#5975 <code class="language-text highlighter-rouge">1fea667</code> Consensus: Decouple ContextualCheckBlockHeader from checkpoints (Jorge Timón)</li>
    <li>#6061 <code class="language-text highlighter-rouge">eba2f06</code> Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs (Jorge Timón)</li>
    <li>#5994 <code class="language-text highlighter-rouge">786ed11</code> detach wallet from miner (Jonas Schnelli)</li>
    <li>#6387 <code class="language-text highlighter-rouge">11576a5</code> [bitcoin-cli] improve error output (Jonas Schnelli)</li>
    <li>#6401 <code class="language-text highlighter-rouge">6db53b4</code> Add BITCOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)</li>
    <li>#6430 <code class="language-text highlighter-rouge">b01981e</code> doc: add documentation for shared library libbitcoinconsensus (Braydon Fuller)</li>
    <li>#6372 <code class="language-text highlighter-rouge">dcc495e</code> Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration (Paul Georgiou)</li>
    <li>#6453 <code class="language-text highlighter-rouge">8fe5cce</code> Separate core memory usage computation in core_memusage.h (Pieter Wuille)</li>
    <li>#6149 <code class="language-text highlighter-rouge">633fe10</code> Buffer log messages and explicitly open logs (Adam Weiss)</li>
    <li>#6488 <code class="language-text highlighter-rouge">7cbed7f</code> Avoid leaking file descriptors in RegisterLoad (Casey Rodarmor)</li>
    <li>#6497 <code class="language-text highlighter-rouge">a2bf40d</code> Make sure LogPrintf strings are line-terminated (Wladimir J. van der Laan)</li>
    <li>#6504 <code class="language-text highlighter-rouge">b6fee6b</code> Rationalize currency unit to “BTC” (Ross Nicoll)</li>
    <li>#6507 <code class="language-text highlighter-rouge">9bb4dd8</code> Removed contrib/bitrpc (Casey Rodarmor)</li>
    <li>#6527 <code class="language-text highlighter-rouge">41d650f</code> Use unique name for AlertNotify tempfile (Casey Rodarmor)</li>
    <li>#6561 <code class="language-text highlighter-rouge">e08a7d9</code> limitedmap fixes and tests (Casey Rodarmor)</li>
    <li>#6565 <code class="language-text highlighter-rouge">a6f2aff</code> Make sure we re-acquire lock if a task throws (Casey Rodarmor)</li>
    <li>#6599 <code class="language-text highlighter-rouge">f4d88c4</code> Make sure LogPrint strings are line-terminated (Ross Nicoll)</li>
    <li>#6630 <code class="language-text highlighter-rouge">195942d</code> Replace boost::reverse_lock with our own (Casey Rodarmor)</li>
    <li>#6103 <code class="language-text highlighter-rouge">13b8282</code> Add ZeroMQ notifications (João Barbosa)</li>
    <li>#6692 <code class="language-text highlighter-rouge">d5d1d2e</code> devtools: don’t push if signing fails in github-merge (Wladimir J. van der Laan)</li>
    <li>#6728 <code class="language-text highlighter-rouge">2b0567b</code> timedata: Prevent warning overkill (Wladimir J. van der Laan)</li>
    <li>#6713 <code class="language-text highlighter-rouge">f6ce59c</code> SanitizeString: Allow hypen char (MarcoFalke)</li>
    <li>#5987 <code class="language-text highlighter-rouge">4899a04</code> Bugfix: Fix testnet-in-a-box use case (Luke-Jr)</li>
    <li>#6733 <code class="language-text highlighter-rouge">b7d78fd</code> Simple benchmarking framework (Gavin Andresen)</li>
    <li>#6854 <code class="language-text highlighter-rouge">a092970</code> devtools: Add security-check.py (Wladimir J. van der Laan)</li>
    <li>#6790 <code class="language-text highlighter-rouge">fa1d252</code> devtools: add clang-format.py (MarcoFalke)</li>
    <li>#7114 <code class="language-text highlighter-rouge">f3d0fdd</code> util: Don’t set strMiscWarning on every exception (Wladimir J. van der Laan)</li>
    <li>#7078 <code class="language-text highlighter-rouge">93e0514</code> uint256::GetCheapHash bigendian compatibility (arowser)</li>
    <li>#7094 <code class="language-text highlighter-rouge">34e02e0</code> Assert now &gt; 0 in GetTime GetTimeMillis GetTimeMicros (Patrick Strateman)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>accraze</li>
    <li>Adam Weiss</li>
    <li>Alex Morcos</li>
    <li>Alex van der Peet</li>
    <li>AlSzacrel</li>
    <li>Altoidnerd</li>
    <li>Andriy Voskoboinyk</li>
    <li>antonio-fr</li>
    <li>Arne Brutschy</li>
    <li>Ashley Holman</li>
    <li>Bob McElrath</li>
    <li>Braydon Fuller</li>
    <li>BtcDrak</li>
    <li>Casey Rodarmor</li>
    <li>centaur1</li>
    <li>Chris Kleeschulte</li>
    <li>Christian Decker</li>
    <li>Cory Fields</li>
    <li>daniel</li>
    <li>Daniel Cousens</li>
    <li>Daniel Kraft</li>
    <li>David Hill</li>
    <li>dexX7</li>
    <li>Diego Viola</li>
    <li>Elias Rohrer</li>
    <li>Eric Lombrozo</li>
    <li>Erik Mossberg</li>
    <li>Esteban Ordano</li>
    <li>EthanHeilman</li>
    <li>Florian Schmaus</li>
    <li>Forrest Voight</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>Gregory Sanders / instagibbs</li>
    <li>Ian T</li>
    <li>Irving Ruan</li>
    <li>Jacob Welsh</li>
    <li>James O’Beirne</li>
    <li>Jeff Garzik</li>
    <li>Johnathan Corgan</li>
    <li>Jonas Schnelli</li>
    <li>Jonathan Cross</li>
    <li>João Barbosa</li>
    <li>Jorge Timón</li>
    <li>Josh Lehan</li>
    <li>J Ross Nicoll</li>
    <li>kazcw</li>
    <li>Kevin Cooper</li>
    <li>lpescher</li>
    <li>Luke Dashjr</li>
    <li>MarcoFalke</li>
    <li>Mark Friedenbach</li>
    <li>Matt</li>
    <li>Matt Bogosian</li>
    <li>Matt Corallo</li>
    <li>Matt Quinn</li>
    <li>Micha</li>
    <li>Michael</li>
    <li>Michael Ford / fanquake</li>
    <li>Midnight Magic</li>
    <li>Mitchell Cash</li>
    <li>mrbandrews</li>
    <li>mruddy</li>
    <li>Nick</li>
    <li>Patrick Strateman</li>
    <li>Paul Georgiou</li>
    <li>Paul Rabahy</li>
    <li>Pavel Janík / paveljanik</li>
    <li>Pavel Vasin</li>
    <li>Pavol Rusnak</li>
    <li>Peter Josling</li>
    <li>Peter Todd</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>ptschip</li>
    <li>randy-waterhouse</li>
    <li>rion</li>
    <li>Ross Nicoll</li>
    <li>Ryan Havar</li>
    <li>Shaul Kfir</li>
    <li>Simon Males</li>
    <li>Stephen</li>
    <li>Suhas Daftuar</li>
    <li>tailsjoin</li>
    <li>Thomas Kerin</li>
    <li>Tom Harding</li>
    <li>tulip</li>
    <li>unsystemizer</li>
    <li>Veres Lajos</li>
    <li>Wladimir J. van der Laan</li>
    <li>xor-freenet</li>
    <li>Zak Wilcox</li>
    <li>zathras-crypto</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.11.2 released</title>
            <link>https://bitcoin.org/en/release/v0.11.2</link>
            <guid>https://bitcoin.org/en/release/v0.11.2</guid>
          
            <pubDate>Fri, 13 Nov 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.11.2 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.11.2/">https://bitcoin.org/bin/bitcoin-core-0.11.2/</a></p>

  <p>This is a new minor version release, bringing bug fixes, the BIP65
(CLTV) consensus change, and relay policy preparation for BIP113. It is
recommended to upgrade to this version as soon as possible.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility. There are no
known problems when downgrading from 0.11.x to 0.10.x.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="notable-changes-since-0111">Notable changes since 0.11.1</h1>

  <h2 id="bip65-soft-fork-to-enforce-opchecklocktimeverify-opcode">BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode</h2>

  <p>This release includes several changes related to the <a href="https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki">BIP65</a> soft fork
which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY
(CLTV) so that a transaction output can be made unspendable until a
specified point in the future.</p>

  <ol>
    <li>
      <p>This release will only relay and mine transactions spending a CLTV
output if they comply with the BIP65 rules as provided in code.</p>
    </li>
    <li>
      <p>This release will produce version 4 blocks by default. Please see the
<em>notice to miners</em> below.</p>
    </li>
    <li>
      <p>Once 951 out of a sequence of 1,001 blocks on the local node’s best block
chain contain version 4 (or higher) blocks, this release will no
longer accept new version 3 blocks and it will only accept version 4
blocks if they comply with the BIP65 rules for CLTV.</p>
    </li>
  </ol>

  <p>For more information about the soft-forking change, please see
<a href="https://github.com/bitcoin/bitcoin/pull/6351">https://github.com/bitcoin/bitcoin/pull/6351</a></p>

  <p>Graphs showing the progress towards block version 4 adoption may be
found at the URLs below:</p>

  <ul>
    <li>
      <p>Block versions over the last 50,000 blocks as progress towards BIP65
consensus enforcement: <a href="http://bitcoin.sipa.be/ver-50k.png">http://bitcoin.sipa.be/ver-50k.png</a></p>
    </li>
    <li>
      <p>Block versions over the last 2,000 blocks showing the days to the
earliest possible BIP65 consensus-enforced block: <a href="http://bitcoin.sipa.be/ver-2k.png">http://bitcoin.sipa.be/ver-2k.png</a></p>
    </li>
  </ul>

  <p><strong>Notice to miners:</strong> Bitcoin Core’s block templates are now for
version 4 blocks only, and any mining software relying on its
getblocktemplate must be updated in parallel to use libblkmaker either
version 0.4.3 or any version from 0.5.2 onward.</p>

  <ul>
    <li>
      <p>If you are solo mining, this will affect you the moment you upgrade
Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001
status.</p>
    </li>
    <li>
      <p>If you are mining with the stratum mining protocol: this does not
affect you.</p>
    </li>
    <li>
      <p>If you are mining with the getblocktemplate protocol to a pool: this
will affect you at the pool operator’s discretion, which must be no
later than BIP65 achieving its 951/1001 status.</p>
    </li>
  </ul>

  <h2 id="bip113-mempool-only-locktime-enforcement-using-getmediantimepast">BIP113 mempool-only locktime enforcement using GetMedianTimePast()</h2>

  <p>Bitcoin transactions currently may specify a locktime indicating when
they may be added to a valid block.  Current consensus rules require
that blocks have a block header time greater than the locktime specified
in any transaction in that block.</p>

  <p>Miners get to choose what time they use for their header time, with the
consensus rule being that no node will accept a block whose time is more
than two hours in the future.  This creates a incentive for miners to
set their header times to future values in order to include locktimed
transactions which weren’t supposed to be included for up to two more
hours.</p>

  <p>The consensus rules also specify that valid blocks may have a header
time greater than that of the median of the 11 previous blocks.  This
GetMedianTimePast() time has a key feature we generally associate with
time: it can’t go backwards.</p>

  <p><a href="https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki">BIP113</a> specifies a soft fork (<strong>not enforced in this release</strong>) that
weakens this perverse incentive for individual miners to use a future
time by requiring that valid blocks have a computed GetMedianTimePast()
greater than the locktime specified in any transaction in that block.</p>

  <p>Mempool inclusion rules currently require transactions to be valid for
immediate inclusion in a block in order to be accepted into the mempool.
This release begins applying the BIP113 rule to received transactions,
so transaction whose time is greater than the GetMedianTimePast() will
no longer be accepted into the mempool.</p>

  <p><strong>Implication for miners:</strong> you will begin rejecting transactions that
would not be valid under BIP113, which will prevent you from producing
invalid blocks if/when BIP113 is enforced on the network. Any
transactions which are valid under the current rules but not yet valid
under the BIP113 rules will either be mined by other miners or delayed
until they are valid under BIP113. Note, however, that time-based
locktime transactions are more or less unseen on the network currently.</p>

  <p><strong>Implication for users:</strong> GetMedianTimePast() always trails behind the
current time, so a transaction locktime set to the present time will be
rejected by nodes running this release until the median time moves
forward. To compensate, subtract one hour (3,600 seconds) from your
locktimes to allow those transactions to be included in mempools at
approximately the expected time.</p>

  <h2 id="windows-bug-fix-for-corrupted-utxo-database-on-unclean-shutdowns">Windows bug fix for corrupted UTXO database on unclean shutdowns</h2>

  <p>Several Windows users reported that they often need to reindex the
entire blockchain after an unclean shutdown of Bitcoin Core on Windows
(or an unclean shutdown of Windows itself). Although unclean shutdowns
remain unsafe, this release no longer relies on memory-mapped files for
the UTXO database, which significantly reduced the frequency of unclean
shutdowns leading to required reindexes during testing.</p>

  <p>For more information, see: <a href="https://github.com/bitcoin/bitcoin/pull/6917">https://github.com/bitcoin/bitcoin/pull/6917</a></p>

  <p>Other fixes for database corruption on Windows are expected in the
next major release.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="change-log">0.11.2 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <ul>
    <li>#6124 <code class="language-text highlighter-rouge">684636b</code> Make CScriptNum() take nMaxNumSize as an argument</li>
    <li>#6124 <code class="language-text highlighter-rouge">4fa7a04</code> Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)</li>
    <li>#6124 <code class="language-text highlighter-rouge">6ea5ca4</code> Enable CHECKLOCKTIMEVERIFY as a standard script verify flag</li>
    <li>#6351 <code class="language-text highlighter-rouge">5e82e1c</code> Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic</li>
    <li>#6353 <code class="language-text highlighter-rouge">ba1da90</code> Show softfork status in getblockchaininfo</li>
    <li>#6351 <code class="language-text highlighter-rouge">6af25b0</code> Add BIP65 to getblockchaininfo softforks list</li>
    <li>#6688 <code class="language-text highlighter-rouge">01878c9</code> Fix locking in GetTransaction</li>
    <li>#6653 <code class="language-text highlighter-rouge">b3eaa30</code> [Qt] Raise debug window when requested</li>
    <li>#6600 <code class="language-text highlighter-rouge">1e672ae</code> Debian/Ubuntu: Include bitcoin-tx binary</li>
    <li>#6600 <code class="language-text highlighter-rouge">2394f4d</code> Debian/Ubuntu: Split bitcoin-tx into its own package</li>
    <li>#5987 <code class="language-text highlighter-rouge">33d6825</code> Bugfix: Allow mining on top of old tip blocks for testnet</li>
    <li>#6852 <code class="language-text highlighter-rouge">21e58b8</code> build: make sure OpenSSL heeds noexecstack</li>
    <li>#6846 <code class="language-text highlighter-rouge">af6edac</code> alias <code class="language-text highlighter-rouge">-h</code> for <code class="language-text highlighter-rouge">--help</code></li>
    <li>#6867 <code class="language-text highlighter-rouge">95a5039</code> Set TCP_NODELAY on P2P sockets.</li>
    <li>#6856 <code class="language-text highlighter-rouge">dfe55bd</code> Do not allow blockfile pruning during reindex.</li>
    <li>#6566 <code class="language-text highlighter-rouge">a1d3c6f</code> Add rules–presently disabled–for using GetMedianTimePast as end point for lock-time calculations</li>
    <li>#6566 <code class="language-text highlighter-rouge">f720c5f</code> Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints</li>
    <li>#6917 <code class="language-text highlighter-rouge">0af5b8e</code> leveldb: Win32WritableFile without memory mapping</li>
    <li>#6948 <code class="language-text highlighter-rouge">4e895b0</code> Always flush block and undo when switching to new file</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Alex Morcos</li>
    <li>฿tcDrak</li>
    <li>Chris Kleeschulte</li>
    <li>Daniel Cousens</li>
    <li>Diego Viola</li>
    <li>Eric Lombrozo</li>
    <li>Esteban Ordano</li>
    <li>Gregory Maxwell</li>
    <li>Luke Dashjr</li>
    <li>Marco Falke</li>
    <li>Mark Friedenbach</li>
    <li>Matt Corallo</li>
    <li>Micha</li>
    <li>Mitchell Cash</li>
    <li>Peter Todd</li>
    <li>Pieter Wuille</li>
    <li>Wladimir J. van der Laan</li>
    <li>Zak Wilcox</li>
  </ul>

  <p>And those who contributed additional code review and/or security research.</p>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>

]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.11.1 released</title>
            <link>https://bitcoin.org/en/release/v0.11.1</link>
            <guid>https://bitcoin.org/en/release/v0.11.1</guid>
          
            <pubDate>Thu, 15 Oct 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.11.1 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.11.1/">https://bitcoin.org/bin/bitcoin-core-0.11.1/</a></p>

  <p>This is a new minor version release, bringing security fixes. It is recommended
to upgrade to this version as soon as possible.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility. There are no
known problems when downgrading from 0.11.x to 0.10.x.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="fix-buffer-overflow-in-bundled-upnp">Fix buffer overflow in bundled upnp</h2>

  <p>Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in
the XML parser during initial network discovery.</p>

  <p>Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/</p>

  <p>This applies to the distributed executables only, not when building from source or
using distribution provided packages.</p>

  <p>Additionally, upnp has been disabled by default. This may result in a lower
number of reachable nodes on IPv4, however this prevents future libupnpc
vulnerabilities from being a structural risk to the network
(see https://github.com/bitcoin/bitcoin/pull/6795).</p>

  <h2 id="test-for-lows-signatures-before-relaying">Test for LowS signatures before relaying</h2>

  <p>Make the node require the canonical ‘low-s’ encoding for ECDSA signatures when
relaying or mining.  This removes a nuisance malleability vector.</p>

  <p>Consensus behavior is unchanged.</p>

  <p>If widely deployed this change would eliminate the last remaining known vector
for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side
it will block most transactions made by sufficiently out of date software.</p>

  <p>Unlike the other avenues to change txids on transactions this
one was randomly violated by all deployed bitcoin software prior to
its discovery. So, while other malleability vectors where made
non-standard as soon as they were discovered, this one has remained
permitted. Even BIP62 did not propose applying this rule to
old version transactions, but conforming implementations have become
much more common since BIP62 was initially written.</p>

  <p>Bitcoin Core has produced compatible signatures since a28fb70e in
September 2013, but this didn’t make it into a release until 0.9
in March 2014; Bitcoinj has done so for a similar span of time.
Bitcoinjs and electrum have been more recently updated.</p>

  <p>This does not replace the need for BIP62 or similar, as miners can
still cooperate to break transactions.  Nor does it replace the
need for wallet software to handle malleability sanely[1]. This
only eliminates the cheap and irritating DOS attack.</p>

  <p>[1] On the Malleability of Bitcoin Transactions
Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, Łukasz Mazurek
http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf</p>

  <h2 id="minimum-relay-fee-default-increase">Minimum relay fee default increase</h2>

  <p>The default for the <code class="language-text highlighter-rouge">-minrelaytxfee</code> setting has been increased from <code class="language-text highlighter-rouge">0.00001</code>
to <code class="language-text highlighter-rouge">0.00005</code>.</p>

  <p>This is necessitated by the current transaction flooding, causing
outrageous memory usage on nodes due to the mempool ballooning. This is a
temporary measure, bridging the time until a dynamic method for determining
this fee is merged (which will be in 0.12).</p>

  <p>(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11
release notes, in which this value was suggested)</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.11.1 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <ul>
    <li>#6438 <code class="language-text highlighter-rouge">2531438</code> openssl: avoid config file load/race</li>
    <li>#6439 <code class="language-text highlighter-rouge">980f820</code> Updated URL location of netinstall for Debian</li>
    <li>#6384 <code class="language-text highlighter-rouge">8e5a969</code> qt: Force TLS1.0+ for SSL connections</li>
    <li>#6471 <code class="language-text highlighter-rouge">92401c2</code> Depends: bump to qt 5.5</li>
    <li>#6224 <code class="language-text highlighter-rouge">93b606a</code> Be even stricter in processing unrequested blocks</li>
    <li>#6571 <code class="language-text highlighter-rouge">100ac4e</code> libbitcoinconsensus: avoid a crash in multi-threaded environments</li>
    <li>#6545 <code class="language-text highlighter-rouge">649f5d9</code> Do not store more than 200 timedata samples.</li>
    <li>#6694 <code class="language-text highlighter-rouge">834e299</code> [QT] fix thin space word wrap line break issue</li>
    <li>#6703 <code class="language-text highlighter-rouge">1cd7952</code> Backport bugfixes to 0.11</li>
    <li>#6750 <code class="language-text highlighter-rouge">5ed8d0b</code> Recent rejects backport to v0.11</li>
    <li>#6769 <code class="language-text highlighter-rouge">71cc9d9</code> Test LowS in standardness, removes nuisance malleability vector.</li>
    <li>#6789 <code class="language-text highlighter-rouge">b4ad73f</code> Update miniupnpc to 1.9.20151008</li>
    <li>#6785 <code class="language-text highlighter-rouge">b4dc33e</code> Backport to v0.11: In (strCommand == “tx”), return if AlreadyHave()</li>
    <li>#6412 <code class="language-text highlighter-rouge">0095b9a</code> Test whether created sockets are select()able</li>
    <li>#6795 <code class="language-text highlighter-rouge">4dbcec0</code> net: Disable upnp by default</li>
    <li>#6793 <code class="language-text highlighter-rouge">e7bcc4a</code> Bump minrelaytxfee default</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Adam Weiss</li>
    <li>Alex Morcos</li>
    <li>Casey Rodarmor</li>
    <li>Cory Fields</li>
    <li>fanquake</li>
    <li>Gregory Maxwell</li>
    <li>Jonas Schnelli</li>
    <li>J Ross Nicoll</li>
    <li>Luke Dashjr</li>
    <li>Pavel Janík</li>
    <li>Pavel Vasin</li>
    <li>Peter Todd</li>
    <li>Pieter Wuille</li>
    <li>randy-waterhouse</li>
    <li>Ross Nicoll</li>
    <li>Suhas Daftuar</li>
    <li>tailsjoin</li>
    <li>฿tcDrak</li>
    <li>Tom Harding</li>
    <li>Veres Lajos</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And those who contributed additional code review and/or security research:</p>

  <ul>
    <li>timothy on IRC for reporting the issue</li>
    <li>Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.10.3 released</title>
            <link>https://bitcoin.org/en/release/v0.10.3</link>
            <guid>https://bitcoin.org/en/release/v0.10.3</guid>
          
            <pubDate>Wed, 14 Oct 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.10.3 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.10.3/">https://bitcoin.org/bin/bitcoin-core-0.10.3/</a></p>

  <p>This is a new minor version release, bringing security fixes and translation
updates. It is recommended to upgrade to this version as soon as possible.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="fix-buffer-overflow-in-bundled-upnp">Fix buffer overflow in bundled upnp</h2>

  <p>Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in
the XML parser during initial network discovery.</p>

  <p>Details can be found here: <a href="http://talosintel.com/reports/TALOS-2015-0035/">http://talosintel.com/reports/TALOS-2015-0035/</a></p>

  <p>This applies to the distributed executables only, not when building from source or
using distribution provided packages.</p>

  <p>Additionally, upnp has been disabled by default. This may result in a lower
number of reachable nodes on IPv4, however this prevents future libupnpc
vulnerabilities from being a structural risk to the network
(see <a href="https://github.com/bitcoin/bitcoin/pull/6795">https://github.com/bitcoin/bitcoin/pull/6795</a>).</p>

  <h2 id="test-for-lows-signatures-before-relaying">Test for LowS signatures before relaying</h2>

  <p>Make the node require the canonical ‘low-s’ encoding for ECDSA signatures when
relaying or mining.  This removes a nuisance malleability vector.</p>

  <p>Consensus behavior is unchanged.</p>

  <p>If widely deployed this change would eliminate the last remaining known vector
for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side
it will block most transactions made by sufficiently out of date software.</p>

  <p>Unlike the other avenues to change txids on transactions this
one was randomly violated by all deployed bitcoin software prior to
its discovery. So, while other malleability vectors where made
non-standard as soon as they were discovered, this one has remained
permitted. Even BIP62 did not propose applying this rule to
old version transactions, but conforming implementations have become
much more common since BIP62 was initially written.</p>

  <p>Bitcoin Core has produced compatible signatures since a28fb70e in
September 2013, but this didn’t make it into a release until 0.9
in March 2014; Bitcoinj has done so for a similar span of time.
Bitcoinjs and electrum have been more recently updated.</p>

  <p>This does not replace the need for BIP62 or similar, as miners can
still cooperate to break transactions.  Nor does it replace the
need for wallet software to handle malleability sanely[1]. This
only eliminates the cheap and irritating DOS attack.</p>

  <p>[1] On the Malleability of Bitcoin Transactions
Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, Łukasz Mazurek
<a href="http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf">http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf</a></p>

  <h2 id="minimum-relay-fee-default-increase">Minimum relay fee default increase</h2>

  <p>The default for the <code class="language-text highlighter-rouge">-minrelaytxfee</code> setting has been increased from <code class="language-text highlighter-rouge">0.00001</code>
to <code class="language-text highlighter-rouge">0.00005</code>.</p>

  <p>This is necessitated by the current transaction flooding, causing
outrageous memory usage on nodes due to the mempool ballooning. This is a
temporary measure, bridging the time until a dynamic method for determining
this fee is merged (which will be in 0.12).</p>

  <p>(see <a href="https://github.com/bitcoin/bitcoin/pull/6793">https://github.com/bitcoin/bitcoin/pull/6793</a>, as well as the 0.11.0
release notes, in which this value was suggested)</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.10.3 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect external
behavior, not code moves, refactors or string updates.</p>

  <ul>
    <li>#6186 <code class="language-text highlighter-rouge">e4a7d51</code> Fix two problems in CSubnet parsing</li>
    <li>#6153 <code class="language-text highlighter-rouge">ebd7d8d</code> Parameter interaction: disable upnp if -proxy set</li>
    <li>#6203 <code class="language-text highlighter-rouge">ecc96f5</code> Remove P2SH coinbase flag, no longer interesting</li>
    <li>#6226 <code class="language-text highlighter-rouge">181771b</code> json: fail read_string if string contains trailing garbage</li>
    <li>#6244 <code class="language-text highlighter-rouge">09334e0</code> configure: Detect (and reject) LibreSSL</li>
    <li>#6276 <code class="language-text highlighter-rouge">0fd8464</code> Fix getbalance * 0</li>
    <li>#6274 <code class="language-text highlighter-rouge">be64204</code> Add option <code class="language-text highlighter-rouge">-alerts</code> to opt out of alert system</li>
    <li>#6319 <code class="language-text highlighter-rouge">3f55638</code> doc: update mailing list address</li>
    <li>#6438 <code class="language-text highlighter-rouge">7e66e9c</code> openssl: avoid config file load/race</li>
    <li>#6439 <code class="language-text highlighter-rouge">255eced</code> Updated URL location of netinstall for Debian</li>
    <li>#6412 <code class="language-text highlighter-rouge">0739e6e</code> Test whether created sockets are select()able</li>
    <li>#6694 <code class="language-text highlighter-rouge">f696ea1</code> [QT] fix thin space word wrap line brake issue</li>
    <li>#6704 <code class="language-text highlighter-rouge">743cc9e</code> Backport bugfixes to 0.10</li>
    <li>#6769 <code class="language-text highlighter-rouge">1cea6b0</code> Test LowS in standardness, removes nuisance malleability vector.</li>
    <li>#6789 <code class="language-text highlighter-rouge">093d7b5</code> Update miniupnpc to 1.9.20151008</li>
    <li>#6795 <code class="language-text highlighter-rouge">f2778e0</code> net: Disable upnp by default</li>
    <li>#6797 <code class="language-text highlighter-rouge">91ef4d9</code> Do not store more than 200 timedata samples</li>
    <li>#6793 <code class="language-text highlighter-rouge">842c48d</code> Bump minrelaytxfee default</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Adam Weiss</li>
    <li>Alex Morcos</li>
    <li>Casey Rodarmor</li>
    <li>Cory Fields</li>
    <li>fanquake</li>
    <li>Gregory Maxwell</li>
    <li>Jonas Schnelli</li>
    <li>J Ross Nicoll</li>
    <li>Luke Dashjr</li>
    <li>Pavel Vasin</li>
    <li>Pieter Wuille</li>
    <li>randy-waterhouse</li>
    <li>฿tcDrak</li>
    <li>Tom Harding</li>
    <li>Veres Lajos</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And all those who contributed additional code review and/or security research:</p>

  <ul>
    <li>timothy on IRC for reporting the issue</li>
    <li>Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.11.0 released</title>
            <link>https://bitcoin.org/en/release/v0.11.0</link>
            <guid>https://bitcoin.org/en/release/v0.11.0</guid>
          
            <pubDate>Sun, 12 Jul 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.11.0 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.11.0/">https://bitcoin.org/bin/bitcoin-core-0.11.0/</a></p>

  <p>This is a new major version release, bringing both new features and
bug fixes.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility. There are no
known problems when downgrading from 0.11.x to 0.10.x.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="important-information">Important information</h1>

  <h2 id="transaction-flooding">Transaction flooding</h2>

  <p>At the time of this release, the P2P network is being flooded with low-fee
transactions. This causes a ballooning of the mempool size.</p>

  <p>If this growth of the mempool causes problematic memory use on your node, it is
possible to change a few configuration options to work around this. The growth
of the mempool can be monitored with the RPC command <code class="language-text highlighter-rouge">getmempoolinfo</code>.</p>

  <p>One is to increase the minimum transaction relay fee <code class="language-text highlighter-rouge">minrelaytxfee</code>, which
defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be
rejected, and thus fewer transactions entering the mempool.</p>

  <p>The other is to restrict the relaying of free transactions with
<code class="language-text highlighter-rouge">limitfreerelay</code>. This option sets the number of kB/minute at which
free transactions (with enough priority) will be accepted. It defaults to 15.
Reducing this number reduces the speed at which the mempool can grow due
to free transactions.</p>

  <p>For example, add the following to <code class="language-text highlighter-rouge">bitcoin.conf</code>:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>minrelaytxfee=0.00005
limitfreerelay=5
</code></pre></div>  </div>

  <p>More robust solutions are being worked on for a follow-up release.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="block-file-pruning">Block file pruning</h2>

  <p>This release supports running a fully validating node without maintaining a copy
of the raw block and undo data on disk. To recap, there are four types of data
related to the blockchain in the bitcoin system: the raw blocks as received over
the network (blk???.dat), the undo data (rev???.dat), the block index and the
UTXO set (both LevelDB databases). The databases are built from the raw data.</p>

  <p>Block pruning allows Bitcoin Core to delete the raw block and undo data once
it’s been validated and used to build the databases. At that point, the raw data
is used only to relay blocks to other nodes, to handle reorganizations, to look
up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or
for rescanning the wallet. The block index continues to hold the metadata about
all blocks in the blockchain.</p>

  <p>The user specifies how much space to allot for block &amp; undo files. The minimum
allowed is 550MB. Note that this is in addition to whatever is required for the
block index and UTXO databases. The minimum was chosen so that Bitcoin Core will
be able to maintain at least 288 blocks on disk (two days worth of blocks at 10
minutes per block). In rare instances it is possible that the amount of space
used will exceed the pruning target in order to keep the required last 288
blocks on disk.</p>

  <p>Block pruning works during initial sync in the same way as during steady state,
by deleting block files “as you go” whenever disk space is allocated. Thus, if
the user specifies 550MB, once that level is reached the program will begin
deleting the oldest block and undo files, while continuing to download the
blockchain.</p>

  <p>For now, block pruning disables block relay.  In the future, nodes with block
pruning will at a minimum relay “new” blocks, meaning blocks that extend their
active chain.</p>

  <p>Block pruning is currently incompatible with running a wallet due to the fact
that block data is used for rescanning the wallet and importing keys or
addresses (which require a rescan.) However, running the wallet with block
pruning will be supported in the near future, subject to those limitations.</p>

  <p>Block pruning is also incompatible with -txindex and will automatically disable
it.</p>

  <p>Once you have pruned blocks, going back to unpruned state requires
re-downloading the entire blockchain. To do this, re-start the node with
-reindex. Note also that any problem that would cause a user to reindex (e.g.,
disk corruption) will cause a pruned node to redownload the entire blockchain.
Finally, note that when a pruned node reindexes, it will delete any blk???.dat
and rev???.dat files in the data directory prior to restarting the download.</p>

  <p>To enable block pruning on the command line:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">-prune=N</code>: where N is the number of MB to allot for raw block &amp; undo data.</li>
  </ul>

  <p>Modified RPC calls:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">getblockchaininfo</code> now includes whether we are in pruned mode or not.</li>
    <li><code class="language-text highlighter-rouge">getblock</code> will check if the block’s data has been pruned and if so, return an
error.</li>
    <li><code class="language-text highlighter-rouge">getrawtransaction</code> will no longer be able to locate a transaction that has a
UTXO but where its block file has been pruned.</li>
  </ul>

  <p>Pruning is disabled by default.</p>

  <h2 id="big-endian-support">Big endian support</h2>

  <p>Experimental support for big-endian CPU architectures was added in this
release. All little-endian specific code was replaced with endian-neutral
constructs. This has been tested on at least MIPS and PPC hosts. The build
system will automatically detect the endianness of the target.</p>

  <h2 id="memory-usage-optimization">Memory usage optimization</h2>

  <p>There have been many changes in this release to reduce the default memory usage
of a node, among which:</p>

  <ul>
    <li>Accurate UTXO cache size accounting (#6102); this makes the option <code class="language-text highlighter-rouge">-dbcache</code>
precise where this grossly underestimated memory usage before</li>
    <li>Reduce size of per-peer data structure (#6064 and others); this increases the
number of connections that can be supported with the same amount of memory</li>
    <li>Reduce the number of threads (#5964, #5679); lowers the amount of (esp.
virtual) memory needed</li>
  </ul>

  <h2 id="fee-estimation-changes">Fee estimation changes</h2>

  <p>This release improves the algorithm used for fee estimation.  Previously, -1
was returned when there was insufficient data to give an estimate.  Now, -1
will also be returned when there is no fee or priority high enough for the
desired confirmation target. In those cases, it can help to ask for an estimate
for a higher target number of blocks. It is not uncommon for there to be no
fee or priority high enough to be reliably (85%) included in the next block and
for this reason, the default for <code class="language-text highlighter-rouge">-txconfirmtarget=n</code> has changed from 1 to 2.</p>

  <h2 id="privacy-disable-wallet-transaction-broadcast">Privacy: Disable wallet transaction broadcast</h2>

  <p>This release adds an option <code class="language-text highlighter-rouge">-walletbroadcast=0</code> to prevent automatic
transaction broadcast and rebroadcast (#5951). This option allows separating
transaction submission from the node functionality.</p>

  <p>Making use of this, third-party scripts can be written to take care of
transaction (re)broadcast:</p>

  <ul>
    <li>Send the transaction as normal, either through RPC or the GUI</li>
    <li>Retrieve the transaction data through RPC using <code class="language-text highlighter-rouge">gettransaction</code> (NOT
<code class="language-text highlighter-rouge">getrawtransaction</code>). The <code class="language-text highlighter-rouge">hex</code> field of the result will contain the raw
hexadecimal representation of the transaction</li>
    <li>The transaction can then be broadcasted through arbitrary mechanisms
supported by the script</li>
  </ul>

  <p>One such application is selective Tor usage, where the node runs on the normal
internet but transactions are broadcasted over Tor.</p>

  <p>For an example script see <a href="https://github.com/laanwj/bitcoin-submittx">bitcoin-submittx</a>.</p>

  <h2 id="privacy-stream-isolation-for-tor">Privacy: Stream isolation for Tor</h2>

  <p>This release adds functionality to create a new circuit for every peer
connection, when the software is used with Tor. The new option,
<code class="language-text highlighter-rouge">-proxyrandomize</code>, is on by default.</p>

  <p>When enabled, every outgoing connection will (potentially) go through a
different exit node. That significantly reduces the chance to get unlucky and
pick a single exit node that is either malicious, or widely banned from the P2P
network. This improves connection reliability as well as privacy, especially
for the initial connections.</p>

  <p><strong>Important note:</strong> If a non-Tor SOCKS5 proxy is configured that supports
authentication, but doesn’t require it, this change may cause that proxy to reject
connections. A user and password is sent where they weren’t before. This setup
is exceedingly rare, but in this case <code class="language-text highlighter-rouge">-proxyrandomize=0</code> can be passed to
disable the behavior.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.11.0 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.</p>

  <h3 id="rpc-and-rest">RPC and REST</h3>

  <ul>
    <li>#5461 <code class="language-text highlighter-rouge">5f7279a</code> signrawtransaction: validate private key</li>
    <li>#5444 <code class="language-text highlighter-rouge">103f66b</code> Add <code class="language-text highlighter-rouge">/rest/headers/&lt;count&gt;/&lt;hash&gt;.&lt;ext&gt;</code></li>
    <li>#4964 <code class="language-text highlighter-rouge">95ecc0a</code> Add scriptPubKey field to validateaddress RPC call</li>
    <li>#5476 <code class="language-text highlighter-rouge">c986972</code> Add time offset into getpeerinfo output</li>
    <li>#5540 <code class="language-text highlighter-rouge">84eba47</code> Add unconfirmed and immature balances to getwalletinfo</li>
    <li>#5599 <code class="language-text highlighter-rouge">40e96a3</code> Get rid of the internal miner’s hashmeter</li>
    <li>#5711 <code class="language-text highlighter-rouge">87ecfb0</code> Push down RPC locks</li>
    <li>#5754 <code class="language-text highlighter-rouge">1c4e3f9</code> fix getblocktemplate lock issue</li>
    <li>#5756 <code class="language-text highlighter-rouge">5d901d8</code> Fix getblocktemplate_proposals test by mining one block</li>
    <li>#5548 <code class="language-text highlighter-rouge">d48ce48</code> Add /rest/chaininfos</li>
    <li>#5992 <code class="language-text highlighter-rouge">4c4f1b4</code> Push down RPC reqWallet flag</li>
    <li>#6036 <code class="language-text highlighter-rouge">585b5db</code> Show zero value txouts in listunspent</li>
    <li>#5199 <code class="language-text highlighter-rouge">6364408</code> Add RPC call <code class="language-text highlighter-rouge">gettxoutproof</code> to generate and verify merkle blocks</li>
    <li>#5418 <code class="language-text highlighter-rouge">16341cc</code> Report missing inputs in sendrawtransaction</li>
    <li>#5937 <code class="language-text highlighter-rouge">40f5e8d</code> show script verification errors in signrawtransaction result</li>
    <li>#5420 <code class="language-text highlighter-rouge">1fd2d39</code> getutxos REST command (based on Bip64)</li>
    <li>#6193 <code class="language-text highlighter-rouge">42746b0</code> [REST] remove json input for getutxos, limit to query max. 15 outpoints</li>
    <li>#6226 <code class="language-text highlighter-rouge">5901596</code> json: fail read_string if string contains trailing garbage</li>
  </ul>

  <h3 id="configuration-and-command-line-options">Configuration and command-line options</h3>

  <ul>
    <li>#5636 <code class="language-text highlighter-rouge">a353ad4</code> Add option <code class="language-text highlighter-rouge">-allowselfsignedrootcertificate</code> to allow self signed root certs (for testing payment requests)</li>
    <li>#5900 <code class="language-text highlighter-rouge">3e8a1f2</code> Add a consistency check <code class="language-text highlighter-rouge">-checkblockindex</code> for the block chain data structures</li>
    <li>#5951 <code class="language-text highlighter-rouge">7efc9cf</code> Make it possible to disable wallet transaction broadcast (using <code class="language-text highlighter-rouge">-walletbroadcast=0</code>)</li>
    <li>#5911 <code class="language-text highlighter-rouge">b6ea3bc</code> privacy: Stream isolation for Tor (on by default, use <code class="language-text highlighter-rouge">-proxyrandomize=0</code> to disable)</li>
    <li>#5863 <code class="language-text highlighter-rouge">c271304</code> Add autoprune functionality (<code class="language-text highlighter-rouge">-prune=&lt;size&gt;</code>)</li>
    <li>#6153 <code class="language-text highlighter-rouge">0bcf04f</code> Parameter interaction: disable upnp if -proxy set</li>
    <li>#6274 <code class="language-text highlighter-rouge">4d9c7fe</code> Add option <code class="language-text highlighter-rouge">-alerts</code> to opt out of alert system</li>
  </ul>

  <h3 id="block-and-transaction-handling">Block and transaction handling</h3>

  <ul>
    <li>#5367 <code class="language-text highlighter-rouge">dcc1304</code> Do all block index writes in a batch</li>
    <li>#5253 <code class="language-text highlighter-rouge">203632d</code> Check against MANDATORY flags prior to accepting to mempool</li>
    <li>#5459 <code class="language-text highlighter-rouge">4406c3e</code> Reject headers that build on an invalid parent</li>
    <li>#5481 <code class="language-text highlighter-rouge">055f3ae</code> Apply AreSane() checks to the fees from the network</li>
    <li>#5580 <code class="language-text highlighter-rouge">40d65eb</code> Preemptively catch a few potential bugs</li>
    <li>#5349 <code class="language-text highlighter-rouge">f55c5e9</code> Implement test for merkle tree malleability in CPartialMerkleTree</li>
    <li>#5564 <code class="language-text highlighter-rouge">a89b837</code> clarify obscure uses of EvalScript()</li>
    <li>#5521 <code class="language-text highlighter-rouge">8e4578a</code> Reject non-final txs even in testnet/regtest</li>
    <li>#5707 <code class="language-text highlighter-rouge">6af674e</code> Change hardcoded character constants to descriptive named constants for db keys</li>
    <li>#5286 <code class="language-text highlighter-rouge">fcf646c</code> Change the default maximum OP_RETURN size to 80 bytes</li>
    <li>#5710 <code class="language-text highlighter-rouge">175d86e</code> Add more information to errors in ReadBlockFromDisk</li>
    <li>#5948 <code class="language-text highlighter-rouge">b36f1ce</code> Use GetAncestor to compute new target</li>
    <li>#5959 <code class="language-text highlighter-rouge">a0bfc69</code> Add additional block index consistency checks</li>
    <li>#6058 <code class="language-text highlighter-rouge">7e0e7f8</code> autoprune minor post-merge improvements</li>
    <li>#5159 <code class="language-text highlighter-rouge">2cc1372</code> New fee estimation code</li>
    <li>#6102 <code class="language-text highlighter-rouge">6fb90d8</code> Implement accurate UTXO cache size accounting</li>
    <li>#6129 <code class="language-text highlighter-rouge">2a82298</code> Bug fix for clearing fCheckForPruning</li>
    <li>#5947 <code class="language-text highlighter-rouge">e9af4e6</code> Alert if it is very likely we are getting a bad chain</li>
    <li>#6203 <code class="language-text highlighter-rouge">c00ae64</code> Remove P2SH coinbase flag, no longer interesting</li>
    <li>#5985 <code class="language-text highlighter-rouge">37b4e42</code> Fix removing of orphan transactions</li>
    <li>#6221 <code class="language-text highlighter-rouge">6cb70ca</code> Prune: Support noncontiguous block files</li>
    <li>#6256 <code class="language-text highlighter-rouge">fce474c</code> Use best header chain timestamps to detect partitioning</li>
    <li>#6233 <code class="language-text highlighter-rouge">a587606</code> Advance pindexLastCommonBlock for blocks in chainActive</li>
  </ul>

  <h3 id="p2p-protocol-and-network-code">P2P protocol and network code</h3>

  <ul>
    <li>#5507 <code class="language-text highlighter-rouge">844ace9</code> Prevent DOS attacks on in-flight data structures</li>
    <li>#5770 <code class="language-text highlighter-rouge">32a8b6a</code> Sanitize command strings before logging them</li>
    <li>#5859 <code class="language-text highlighter-rouge">dd4ffce</code> Add correct bool combiner for net signals</li>
    <li>#5876 <code class="language-text highlighter-rouge">8e4fd0c</code> Add a NODE_GETUTXO service bit and document NODE_NETWORK</li>
    <li>#6028 <code class="language-text highlighter-rouge">b9311fb</code> Move nLastTry from CAddress to CAddrInfo</li>
    <li>#5662 <code class="language-text highlighter-rouge">5048465</code> Change download logic to allow calling getdata on inbound peers</li>
    <li>#5971 <code class="language-text highlighter-rouge">18d2832</code> replace absolute sleep with conditional wait</li>
    <li>#5918 <code class="language-text highlighter-rouge">7bf5d5e</code> Use equivalent PoW for non-main-chain requests</li>
    <li>#6059 <code class="language-text highlighter-rouge">f026ab6</code> chainparams: use SeedSpec6’s rather than CAddress’s for fixed seeds</li>
    <li>#6080 <code class="language-text highlighter-rouge">31c0bf1</code> Add jonasschnellis dns seeder</li>
    <li>#5976 <code class="language-text highlighter-rouge">9f7809f</code> Reduce download timeouts as blocks arrive</li>
    <li>#6172 <code class="language-text highlighter-rouge">b4bbad1</code> Ignore getheaders requests when not synced</li>
    <li>#5875 <code class="language-text highlighter-rouge">304892f</code> Be stricter in processing unrequested blocks</li>
    <li>#6333 <code class="language-text highlighter-rouge">41bbc85</code> Hardcoded seeds update June 2015</li>
  </ul>

  <h3 id="validation">Validation</h3>

  <ul>
    <li>#5143 <code class="language-text highlighter-rouge">48e1765</code> Implement BIP62 rule 6</li>
    <li>#5713 <code class="language-text highlighter-rouge">41e6e4c</code> Implement BIP66</li>
  </ul>

  <h3 id="build-system">Build system</h3>

  <ul>
    <li>#5501 <code class="language-text highlighter-rouge">c76c9d2</code> Add mips, mipsel and aarch64 to depends platforms</li>
    <li>#5334 <code class="language-text highlighter-rouge">cf87536</code> libbitcoinconsensus: Add pkg-config support</li>
    <li>#5514 <code class="language-text highlighter-rouge">ed11d53</code> Fix ‘make distcheck’</li>
    <li>#5505 <code class="language-text highlighter-rouge">a99ef7d</code> Build winshutdownmonitor.cpp on Windows only</li>
    <li>#5582 <code class="language-text highlighter-rouge">e8a6639</code> Osx toolchain update</li>
    <li>#5684 <code class="language-text highlighter-rouge">ab64022</code> osx: bump build sdk to 10.9</li>
    <li>#5695 <code class="language-text highlighter-rouge">23ef5b7</code> depends: latest config.guess and config.sub</li>
    <li>#5509 <code class="language-text highlighter-rouge">31dedb4</code> Fixes when compiling in c++11 mode</li>
    <li>#5819 <code class="language-text highlighter-rouge">f8e68f7</code> release: use static libstdc++ and disable reduced exports by default</li>
    <li>#5510 <code class="language-text highlighter-rouge">7c3fbc3</code> Big endian support</li>
    <li>#5149 <code class="language-text highlighter-rouge">c7abfa5</code> Add script to verify all merge commits are signed</li>
    <li>#6082 <code class="language-text highlighter-rouge">7abbb7e</code> qt: disable qt tests when one of the checks for the gui fails</li>
    <li>#6244 <code class="language-text highlighter-rouge">0401aa2</code> configure: Detect (and reject) LibreSSL</li>
    <li>#6269 <code class="language-text highlighter-rouge">95aca44</code> gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures</li>
    <li>#6285 <code class="language-text highlighter-rouge">ef1d506</code> Fix scheduler build with some boost versions.</li>
    <li>#6280 <code class="language-text highlighter-rouge">25c2216</code> depends: fix Boost 1.55 build on GCC 5</li>
    <li>#6303 <code class="language-text highlighter-rouge">b711599</code> gitian: add a gitian-win-signer descriptor</li>
    <li>#6246 <code class="language-text highlighter-rouge">8ea6d37</code> Fix build on FreeBSD</li>
    <li>#6282 <code class="language-text highlighter-rouge">daf956b</code> fix crash on shutdown when e.g. changing -txindex and abort action</li>
    <li>#6354 <code class="language-text highlighter-rouge">bdf0d94</code> Gitian windows signing normalization</li>
  </ul>

  <h3 id="wallet">Wallet</h3>

  <ul>
    <li>#2340 <code class="language-text highlighter-rouge">811c71d</code> Discourage fee sniping with nLockTime</li>
    <li>#5485 <code class="language-text highlighter-rouge">d01bcc4</code> Enforce minRelayTxFee on wallet created tx and add a maxtxfee option</li>
    <li>#5508 <code class="language-text highlighter-rouge">9a5cabf</code> Add RandAddSeedPerfmon to MakeNewKey</li>
    <li>#4805 <code class="language-text highlighter-rouge">8204e19</code> Do not flush the wallet in AddToWalletIfInvolvingMe(..)</li>
    <li>#5319 <code class="language-text highlighter-rouge">93b7544</code> Clean up wallet encryption code</li>
    <li>#5831 <code class="language-text highlighter-rouge">df5c246</code> Subtract fee from amount</li>
    <li>#6076 <code class="language-text highlighter-rouge">6c97fd1</code> wallet: fix boost::get usage with boost 1.58</li>
    <li>#5511 <code class="language-text highlighter-rouge">23c998d</code> Sort pending wallet transactions before reaccepting</li>
    <li>#6126 <code class="language-text highlighter-rouge">26e08a1</code> Change default nTxConfirmTarget to 2</li>
    <li>#6183 <code class="language-text highlighter-rouge">75a4d51</code> Fix off-by-one error w/ nLockTime in the wallet</li>
    <li>#6276 <code class="language-text highlighter-rouge">c9fd907</code> Fix getbalance * 0</li>
  </ul>

  <h3 id="gui">GUI</h3>

  <ul>
    <li>#5219 <code class="language-text highlighter-rouge">f3af0c8</code> New icons</li>
    <li>#5228 <code class="language-text highlighter-rouge">bb3c75b</code> HiDPI (retina) support for splash screen</li>
    <li>#5258 <code class="language-text highlighter-rouge">73cbf0a</code> The RPC Console should be a QWidget to make window more independent</li>
    <li>#5488 <code class="language-text highlighter-rouge">851dfc7</code> Light blue icon color for regtest</li>
    <li>#5547 <code class="language-text highlighter-rouge">a39aa74</code> New icon for the debug window</li>
    <li>#5493 <code class="language-text highlighter-rouge">e515309</code> Adopt style colour for button icons</li>
    <li>#5557 <code class="language-text highlighter-rouge">70477a0</code> On close of splashscreen interrupt verifyDB</li>
    <li>#5559 <code class="language-text highlighter-rouge">83be8fd</code> Make the command-line-args dialog better</li>
    <li>#5144 <code class="language-text highlighter-rouge">c5380a9</code> Elaborate on signverify message dialog warning</li>
    <li>#5489 <code class="language-text highlighter-rouge">d1aa3c6</code> Optimize PNG files</li>
    <li>#5649 <code class="language-text highlighter-rouge">e0cd2f5</code> Use text-color icons for system tray Send/Receive menu entries</li>
    <li>#5651 <code class="language-text highlighter-rouge">848f55d</code> Coin Control: Use U+2248 “ALMOST EQUAL TO” rather than a simple tilde</li>
    <li>#5626 <code class="language-text highlighter-rouge">ab0d798</code> Fix icon sizes and column width</li>
    <li>#5683 <code class="language-text highlighter-rouge">c7b22aa</code> add new osx dmg background picture</li>
    <li>#5620 <code class="language-text highlighter-rouge">7823598</code> Payment request expiration bug fix</li>
    <li>#5729 <code class="language-text highlighter-rouge">9c4a5a5</code> Allow unit changes for read-only BitcoinAmountField</li>
    <li>#5753 <code class="language-text highlighter-rouge">0f44672</code> Add bitcoin logo to about screen</li>
    <li>#5629 <code class="language-text highlighter-rouge">a956586</code> Prevent amount overflow problem with payment requests</li>
    <li>#5830 <code class="language-text highlighter-rouge">215475a</code> Don’t save geometry for options and about/help window</li>
    <li>#5793 <code class="language-text highlighter-rouge">d26f0b2</code> Honor current network when creating autostart link</li>
    <li>#5847 <code class="language-text highlighter-rouge">f238add</code> Startup script for centos, with documentation</li>
    <li>#5915 <code class="language-text highlighter-rouge">5bd3a92</code> Fix a static qt5 crash when using certain versions of libxcb</li>
    <li>#5898 <code class="language-text highlighter-rouge">bb56781</code> Fix rpc console font size to flexible metrics</li>
    <li>#5467 <code class="language-text highlighter-rouge">bc8535b</code> Payment request / server work - part 2</li>
    <li>#6161 <code class="language-text highlighter-rouge">180c164</code> Remove movable option for toolbar</li>
    <li>#6160 <code class="language-text highlighter-rouge">0d862c2</code> Overviewpage: make sure warning icons gets colored</li>
  </ul>

  <h3 id="tests">Tests</h3>

  <ul>
    <li>#5453 <code class="language-text highlighter-rouge">2f2d337</code> Add ability to run single test manually to RPC tests</li>
    <li>#5421 <code class="language-text highlighter-rouge">886eb57</code> Test unexecuted OP_CODESEPARATOR</li>
    <li>#5530 <code class="language-text highlighter-rouge">565b300</code> Additional rpc tests</li>
    <li>#5611 <code class="language-text highlighter-rouge">37b185c</code> Fix spurious windows test failures after 012598880c</li>
    <li>#5613 <code class="language-text highlighter-rouge">2eda47b</code> Fix smartfees test for change to relay policy</li>
    <li>#5612 <code class="language-text highlighter-rouge">e3f5727</code> Fix zapwallettxes test</li>
    <li>#5642 <code class="language-text highlighter-rouge">30a5b5f</code> Prepare paymentservertests for new unit tests</li>
    <li>#5784 <code class="language-text highlighter-rouge">e3a3cd7</code> Fix usage of NegateSignatureS in script_tests</li>
    <li>#5813 <code class="language-text highlighter-rouge">ee9f2bf</code> Add unit tests for next difficulty calculations</li>
    <li>#5855 <code class="language-text highlighter-rouge">d7989c0</code> Travis: run unit tests in different orders</li>
    <li>#5852 <code class="language-text highlighter-rouge">cdae53e</code> Reinitialize state in between individual unit tests.</li>
    <li>#5883 <code class="language-text highlighter-rouge">164d7b6</code> tests: add a BasicTestingSetup and apply to all tests</li>
    <li>#5940 <code class="language-text highlighter-rouge">446bb70</code> Regression test for ResendWalletTransactions</li>
    <li>#6052 <code class="language-text highlighter-rouge">cf7adad</code> fix and enable bip32 unit test</li>
    <li>#6039 <code class="language-text highlighter-rouge">734f80a</code> tests: Error when setgenerate is used on regtest</li>
    <li>#6074 <code class="language-text highlighter-rouge">948beaf</code> Correct the PUSHDATA4 minimal encoding test in script_invalid.json</li>
    <li>#6032 <code class="language-text highlighter-rouge">e08886d</code> Stop nodes after RPC tests, even with –nocleanup</li>
    <li>#6075 <code class="language-text highlighter-rouge">df1609f</code> Add additional script edge condition tests</li>
    <li>#5981 <code class="language-text highlighter-rouge">da38dc6</code> Python P2P testing</li>
    <li>#5958 <code class="language-text highlighter-rouge">9ef00c3</code> Add multisig rpc tests</li>
    <li>#6112 <code class="language-text highlighter-rouge">fec5c0e</code> Add more script edge condition tests</li>
  </ul>

  <h3 id="miscellaneous">Miscellaneous</h3>

  <ul>
    <li>#5457, #5506, #5952, #6047 Update libsecp256k1</li>
    <li>#5437 <code class="language-text highlighter-rouge">84857e8</code> Add missing CAutoFile::IsNull() check in main</li>
    <li>#5490 <code class="language-text highlighter-rouge">ec20fd7</code> Replace uint256/uint160 with opaque blobs where possible</li>
    <li>#5654, #5764 Adding jonasschnelli’s GPG key</li>
    <li>#5477 <code class="language-text highlighter-rouge">5f04d1d</code> OS X 10.10: LSSharedFileListItemResolve() is deprecated</li>
    <li>#5679 <code class="language-text highlighter-rouge">beff11a</code> Get rid of DetectShutdownThread</li>
    <li>#5787 <code class="language-text highlighter-rouge">9bd8c9b</code> Add fanquake PGP key</li>
    <li>#5366 <code class="language-text highlighter-rouge">47a79bb</code> No longer check osx compatibility in RenameThread</li>
    <li>#5689 <code class="language-text highlighter-rouge">07f4386</code> openssl: abstract out OPENSSL_cleanse</li>
    <li>#5708 <code class="language-text highlighter-rouge">8b298ca</code> Add list of implemented BIPs</li>
    <li>#5809 <code class="language-text highlighter-rouge">46bfbe7</code> Add bitcoin-cli man page</li>
    <li>#5839 <code class="language-text highlighter-rouge">86eb461</code> keys: remove libsecp256k1 verification until it’s actually supported</li>
    <li>#5749 <code class="language-text highlighter-rouge">d734d87</code> Help messages correctly formatted (79 chars)</li>
    <li>#5884 <code class="language-text highlighter-rouge">7077fe6</code> BUGFIX: Stack around the variable ‘rv’ was corrupted</li>
    <li>#5849 <code class="language-text highlighter-rouge">41259ca</code> contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables</li>
    <li>#5950 <code class="language-text highlighter-rouge">41113e3</code> Fix locale fallback and guard tests against invalid locale settings</li>
    <li>#5965 <code class="language-text highlighter-rouge">7c6bfb1</code> Add git-subtree-check.sh script</li>
    <li>#6033 <code class="language-text highlighter-rouge">1623f6e</code> FreeBSD, OpenBSD thread renaming</li>
    <li>#6064 <code class="language-text highlighter-rouge">b46e7c2</code> Several changes to mruset</li>
    <li>#6104 <code class="language-text highlighter-rouge">3e2559c</code> Show an init message while activating best chain</li>
    <li>#6125 <code class="language-text highlighter-rouge">351f73e</code> Clean up parsing of bool command line args</li>
    <li>#5964 <code class="language-text highlighter-rouge">b4c219b</code> Lightweight task scheduler</li>
    <li>#6116 <code class="language-text highlighter-rouge">30dc3c1</code> [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app</li>
    <li>#6168 <code class="language-text highlighter-rouge">b3024f0</code> contrib/linearize: Support linearization of testnet blocks</li>
    <li>#6098 <code class="language-text highlighter-rouge">7708fcd</code> Update Windows resource files (and add one for bitcoin-tx)</li>
    <li>#6159 <code class="language-text highlighter-rouge">e1412d3</code> Catch errors on datadir lock and pidfile delete</li>
    <li>#6186 <code class="language-text highlighter-rouge">182686c</code> Fix two problems in CSubnet parsing</li>
    <li>#6174 <code class="language-text highlighter-rouge">df992b9</code> doc: add translation strings policy</li>
    <li>#6210 <code class="language-text highlighter-rouge">dfdb6dd</code> build: disable optional use of gmp in internal secp256k1 build</li>
    <li>#6264 <code class="language-text highlighter-rouge">94cd705</code> Remove translation for -help-debug options</li>
    <li>#6286 <code class="language-text highlighter-rouge">3902c15</code> Remove berkeley-db4 workaround in MacOSX build docs</li>
    <li>#6319 <code class="language-text highlighter-rouge">3f8fcc9</code> doc: update mailing list address</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>21E14</li>
    <li>Adam Weiss</li>
    <li>Alex Morcos</li>
    <li>ayeowch</li>
    <li>azeteki</li>
    <li>Ben Holden-Crowther</li>
    <li>bikinibabe</li>
    <li>BitcoinPRReadingGroup</li>
    <li>Blake Jakopovic</li>
    <li>BtcDrak</li>
    <li>charlescharles</li>
    <li>Chris Arnesen</li>
    <li>Ciemon</li>
    <li>CohibAA</li>
    <li>Corinne Dashjr</li>
    <li>Cory Fields</li>
    <li>Cozz Lovan</li>
    <li>Daira Hopwood</li>
    <li>Daniel Kraft</li>
    <li>Dave Collins</li>
    <li>David A. Harding</li>
    <li>dexX7</li>
    <li>Earlz</li>
    <li>Eric Lombrozo</li>
    <li>Eric R. Schulz</li>
    <li>Everett Forth</li>
    <li>Flavien Charlon</li>
    <li>fsb4000</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>Heath</li>
    <li>Ivan Pustogarov</li>
    <li>Jacob Welsh</li>
    <li>Jameson Lopp</li>
    <li>Jason Lewicki</li>
    <li>Jeff Garzik</li>
    <li>Jonas Schnelli</li>
    <li>Jonathan Brown</li>
    <li>Jorge Timón</li>
    <li>joshr</li>
    <li>jtimon</li>
    <li>Julian Yap</li>
    <li>Luca Venturini</li>
    <li>Luke Dashjr</li>
    <li>Manuel Araoz</li>
    <li>MarcoFalke</li>
    <li>Matt Bogosian</li>
    <li>Matt Corallo</li>
    <li>Micha</li>
    <li>Michael Ford</li>
    <li>Mike Hearn</li>
    <li>mrbandrews</li>
    <li>Nicolas Benoit</li>
    <li>paveljanik</li>
    <li>Pavel Janík</li>
    <li>Pavel Vasin</li>
    <li>Peter Todd</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>pstratem</li>
    <li>randy-waterhouse</li>
    <li>rion</li>
    <li>Rob Van Mieghem</li>
    <li>Ross Nicoll</li>
    <li>Ruben de Vries</li>
    <li>sandakersmann</li>
    <li>Shaul Kfir</li>
    <li>Shawn Wilkinson</li>
    <li>sinetek</li>
    <li>Suhas Daftuar</li>
    <li>svost</li>
    <li>Thomas Zander</li>
    <li>Tom Harding</li>
    <li>UdjinM6</li>
    <li>Vitalii Demianets</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And all those who contributed additional code review and/or security research:</p>

  <ul>
    <li>Sergio Demian Lerner</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.10.2 released</title>
            <link>https://bitcoin.org/en/release/v0.10.2</link>
            <guid>https://bitcoin.org/en/release/v0.10.2</guid>
          
            <pubDate>Tue, 19 May 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.10.2 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.10.2/">https://bitcoin.org/bin/bitcoin-core-0.10.2/</a></p>

  <p>This is a new minor version release, bringing minor bug fixes and translation 
updates. It is recommended to upgrade to this version.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <p>This fixes a serious problem on Windows with data directories that have non-ASCII
characters (https://github.com/bitcoin/bitcoin/issues/6078).</p>

  <p>For other platforms there are no notable changes.</p>

  <p>For the notable changes in 0.10, refer to the release notes
at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.10.2 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect external
behavior, not code moves, refactors or string updates.</p>

  <p>Wallet:</p>
  <ul>
    <li><code class="language-text highlighter-rouge">824c011</code> fix boost::get usage with boost 1.58</li>
  </ul>

  <p>Miscellaneous:</p>
  <ul>
    <li><code class="language-text highlighter-rouge">da65606</code> Avoid crash on start in TestBlockValidity with gen=1.</li>
    <li><code class="language-text highlighter-rouge">424ae66</code> don’t imbue boost::filesystem::path with locale “C” on windows (fixes #6078)</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who directly contributed to this release:</p>

  <ul>
    <li>Cory Fields</li>
    <li>Gregory Maxwell</li>
    <li>Jonas Schnelli</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>And all those who contributed additional code review and/or security research:</p>

  <ul>
    <li>dexX7</li>
    <li>Pieter Wuille</li>
    <li>vayvanne</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.10.1 released</title>
            <link>https://bitcoin.org/en/release/v0.10.1</link>
            <guid>https://bitcoin.org/en/release/v0.10.1</guid>
          
            <pubDate>Mon, 27 Apr 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.10.1 is now available from:</p>

  <p><a href="https://bitcoin.org/bin/bitcoin-core-0.10.1/">https://bitcoin.org/bin/bitcoin-core-0.10.1/</a></p>

  <p>This is a new minor version release, bringing bug fixes and translation
updates. If you are using 0.10.0, it is recommended to upgrade to this
version.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrade-warning">Downgrade warning</h2>

  <p>Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility.</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="notable-changes">Notable changes</h1>

  <p>This is a minor release and hence there are no notable changes.
For the notable changes in 0.10, refer to the release notes for the
0.10.0 release at <a href="https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md">https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md</a></p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="change-log">0.10.1 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect external
behavior, not code moves, refactors or string updates.</p>

  <p>RPC:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">7f502be</code> fix crash: createmultisig and addmultisigaddress</li>
    <li><code class="language-text highlighter-rouge">eae305f</code> Fix missing lock in submitblock</li>
  </ul>

  <p>Block (database) and transaction handling:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">1d2cdd2</code> Fix InvalidateBlock to add chainActive.Tip to setBlockIndexCandidates</li>
    <li><code class="language-text highlighter-rouge">c91c660</code> fix InvalidateBlock to repopulate setBlockIndexCandidates</li>
    <li><code class="language-text highlighter-rouge">002c8a2</code> fix possible block db breakage during re-index</li>
    <li><code class="language-text highlighter-rouge">a1f425b</code> Add (optional) consistency check for the block chain data structures</li>
    <li><code class="language-text highlighter-rouge">1c62e84</code> Keep mempool consistent during block-reorgs</li>
    <li><code class="language-text highlighter-rouge">57d1f46</code> Fix CheckBlockIndex for reindex</li>
    <li><code class="language-text highlighter-rouge">bac6fca</code> Set nSequenceId when a block is fully linked</li>
  </ul>

  <p>P2P protocol and network code:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">78f64ef</code> don’t trickle for whitelisted nodes</li>
    <li><code class="language-text highlighter-rouge">ca301bf</code> Reduce fingerprinting through timestamps in ‘addr’ messages.</li>
    <li><code class="language-text highlighter-rouge">200f293</code> Ignore getaddr messages on Outbound connections.</li>
    <li><code class="language-text highlighter-rouge">d5d8998</code> Limit message sizes before transfer</li>
    <li><code class="language-text highlighter-rouge">aeb9279</code> Better fingerprinting protection for non-main-chain getdatas.</li>
    <li><code class="language-text highlighter-rouge">cf0218f</code> Make addrman’s bucket placement deterministic (countermeasure 1 against eclipse attacks, see http://cs-people.bu.edu/heilman/eclipse/)</li>
    <li><code class="language-text highlighter-rouge">0c6f334</code> Always use a 50% chance to choose between tried and new entries (countermeasure 2 against eclipse attacks)</li>
    <li><code class="language-text highlighter-rouge">214154e</code> Do not bias outgoing connections towards fresh addresses (countermeasure 2 against eclipse attacks)</li>
    <li><code class="language-text highlighter-rouge">aa587d4</code> Scale up addrman (countermeasure 6 against eclipse attacks)</li>
    <li><code class="language-text highlighter-rouge">139cd81</code> Cap nAttempts penalty at 8 and switch to pow instead of a division loop</li>
  </ul>

  <p>Validation:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">d148f62</code> Acquire CCheckQueue’s lock to avoid race condition</li>
  </ul>

  <p>Build system:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">8752b5c</code> 0.10 fix for crashes on OSX 10.6</li>
  </ul>

  <p>Wallet:</p>

  <ul>
    <li>N/A</li>
  </ul>

  <p>GUI:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">2c08406</code> some mac specifiy cleanup (memory handling, unnecessary code)</li>
    <li><code class="language-text highlighter-rouge">81145a6</code> fix OSX dock icon window reopening</li>
    <li><code class="language-text highlighter-rouge">786cf72</code> fix a issue where “command line options”-action overwrite “Preference”-action (on OSX)</li>
  </ul>

  <p>Tests:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">1117378</code> add RPC test for InvalidateBlock</li>
  </ul>

  <p>Miscellaneous:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">c9e022b</code> Initialization: set Boost path locale in main thread</li>
    <li><code class="language-text highlighter-rouge">23126a0</code> Sanitize command strings before logging them.</li>
    <li><code class="language-text highlighter-rouge">323de27</code> Initialization: setup environment before starting QT tests</li>
    <li><code class="language-text highlighter-rouge">7494e09</code> Initialization: setup environment before starting tests</li>
    <li><code class="language-text highlighter-rouge">df45564</code> Initialization: set fallback locale as environment variable</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who contributed to this release:</p>

  <ul>
    <li>Alex Morcos</li>
    <li>Cory Fields</li>
    <li>dexX7</li>
    <li>fsb4000</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>Ivan Pustogarov</li>
    <li>Jonas Nick</li>
    <li>Jonas Schnelli</li>
    <li>Matt Corallo</li>
    <li>mrbandrews</li>
    <li>Pieter Wuille</li>
    <li>Ruben de Vries</li>
    <li>Suhas Daftuar</li>
    <li>Wladimir J. van der Laan</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.10.0 released</title>
            <link>https://bitcoin.org/en/release/v0.10.0</link>
            <guid>https://bitcoin.org/en/release/v0.10.0</guid>
          
            <pubDate>Mon, 16 Feb 2015 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.10.0 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/0.10.0/</del></p>

  <p>This is a new major version release, bringing both new features and
bug fixes.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <h2 id="downgrading-warning">Downgrading warning</h2>

  <p>Because release 0.10.0 makes use of headers-first synchronization and parallel
block download (see further), the block files and databases are not
backwards-compatible with older versions of Bitcoin Core or other software:</p>

  <ul>
    <li>
      <p>Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.</p>
    </li>
    <li>
      <p>The block index database will now hold headers for which no block is
stored on disk, which earlier versions won’t support.</p>
    </li>
  </ul>

  <p>If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.</p>

  <p>This does not affect wallet forward or backward compatibility.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="notable-changes">Notable changes</h1>

  <h2 id="faster-synchronization">Faster synchronization</h2>

  <p>Bitcoin Core now uses ‘headers-first synchronization’. This means that we first
ask peers for block headers (a total of 27 megabytes, as of December 2014) and
validate those. In a second stage, when the headers have been discovered, we
download the blocks. However, as we already know about the whole chain in
advance, the blocks can be downloaded in parallel from all available peers.</p>

  <p>In practice, this means a much faster and more robust synchronization. On
recent hardware with a decent network link, it can be as little as 3 hours
for an initial full synchronization. You may notice a slower progress in the
very first few minutes, when headers are still being fetched and verified, but
it should gain speed afterwards.</p>

  <p>A few RPCs were added/updated as a result of this:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">getblockchaininfo</code> now returns the number of validated headers in addition to
the number of validated blocks.</li>
    <li><code class="language-text highlighter-rouge">getpeerinfo</code> lists both the number of blocks and headers we know we have in
common with each peer. While synchronizing, the heights of the blocks that we
have requested from peers (but haven’t received yet) are also listed as
‘inflight’.</li>
    <li>A new RPC <code class="language-text highlighter-rouge">getchaintips</code> lists all known branches of the block chain,
including those we only have headers for.</li>
  </ul>

  <h2 id="transaction-fee-changes">Transaction fee changes</h2>

  <p>This release automatically estimates how high a transaction fee (or how
high a priority) transactions require to be confirmed quickly. The default
settings will create transactions that confirm quickly; see the new
‘txconfirmtarget’ setting to control the tradeoff between fees and
confirmation times. Fees are added by default unless the ‘sendfreetransactions’ 
setting is enabled.</p>

  <p>Prior releases used hard-coded fees (and priorities), and would
sometimes create transactions that took a very long time to confirm.</p>

  <p>Statistics used to estimate fees and priorities are saved in the
data directory in the <code class="language-text highlighter-rouge">fee_estimates.dat</code> file just before
program shutdown, and are read in at startup.</p>

  <p>New command line options for transaction fee changes:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">-txconfirmtarget=n</code> : create transactions that have enough fees (or priority)
so they are likely to begin confirmation within n blocks (default: 1). This setting
is over-ridden by the -paytxfee option.</li>
    <li><code class="language-text highlighter-rouge">-sendfreetransactions</code> : Send transactions as zero-fee transactions if possible 
(default: 0)</li>
  </ul>

  <p>New RPC commands for fee estimation:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">estimatefee nblocks</code> : Returns approximate fee-per-1,000-bytes needed for
a transaction to begin confirmation within nblocks. Returns -1 if not enough
transactions have been observed to compute a good estimate.</li>
    <li><code class="language-text highlighter-rouge">estimatepriority nblocks</code> : Returns approximate priority needed for
a zero-fee transaction to begin confirmation within nblocks. Returns -1 if not
enough free transactions have been observed to compute a good
estimate.</li>
  </ul>

  <h2 id="rpc-access-control-changes">RPC access control changes</h2>

  <p>Subnet matching for the purpose of access control is now done
by matching the binary network address, instead of with string wildcard matching.
For the user this means that <code class="language-text highlighter-rouge">-rpcallowip</code> takes a subnet specification, which can be</p>

  <ul>
    <li>a single IP address (e.g. <code class="language-text highlighter-rouge">1.2.3.4</code> or <code class="language-text highlighter-rouge">fe80::0012:3456:789a:bcde</code>)</li>
    <li>a network/CIDR (e.g. <code class="language-text highlighter-rouge">1.2.3.0/24</code> or <code class="language-text highlighter-rouge">fe80::0000/64</code>)</li>
    <li>a network/netmask (e.g. <code class="language-text highlighter-rouge">1.2.3.4/255.255.255.0</code> or <code class="language-text highlighter-rouge">fe80::0012:3456:789a:bcde/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</code>)</li>
  </ul>

  <p>An arbitrary number of <code class="language-text highlighter-rouge">-rpcallow</code> arguments can be given. An incoming connection will be accepted if its origin address
matches one of them.</p>

  <p>For example:</p>

  <table>
    <thead>
      <tr>
        <th>0.9.x and before</th>
        <th>0.10.x</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><code class="language-text highlighter-rouge">-rpcallowip=192.168.1.1</code></td>
        <td><code class="language-text highlighter-rouge">-rpcallowip=192.168.1.1</code> (unchanged)</td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">-rpcallowip=192.168.1.*</code></td>
        <td><code class="language-text highlighter-rouge">-rpcallowip=192.168.1.0/24</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">-rpcallowip=192.168.*</code></td>
        <td><code class="language-text highlighter-rouge">-rpcallowip=192.168.0.0/16</code></td>
      </tr>
      <tr>
        <td><code class="language-text highlighter-rouge">-rpcallowip=*</code> (dangerous!)</td>
        <td><code class="language-text highlighter-rouge">-rpcallowip=::/0</code> (still dangerous!)</td>
      </tr>
    </tbody>
  </table>

  <p>Using wildcards will result in the rule being rejected with the following error in debug.log:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).
</code></pre></div>  </div>

  <h2 id="rest-interface">REST interface</h2>

  <p>A new HTTP API is exposed when running with the <code class="language-text highlighter-rouge">-rest</code> flag, which allows
unauthenticated access to public node data.</p>

  <p>It is served on the same port as RPC, but does not need a password, and uses
plain HTTP instead of JSON-RPC.</p>

  <p>Assuming a local RPC server running on port 8332, it is possible to request:</p>

  <ul>
    <li>Blocks: http://localhost:8332/rest/block/<em>HASH</em>.<em>EXT</em></li>
    <li>Blocks without transactions: http://localhost:8332/rest/block/notxdetails/<em>HASH</em>.<em>EXT</em></li>
    <li>Transactions (requires <code class="language-text highlighter-rouge">-txindex</code>): http://localhost:8332/rest/tx/<em>HASH</em>.<em>EXT</em></li>
  </ul>

  <p>In every case, <em>EXT</em> can be <code class="language-text highlighter-rouge">bin</code> (for raw binary data), <code class="language-text highlighter-rouge">hex</code> (for hex-encoded
binary) or <code class="language-text highlighter-rouge">json</code>.</p>

  <p>For more details, see the <code class="language-text highlighter-rouge">doc/REST-interface.md</code> document in the repository.</p>

  <h2 id="rpc-server-warm-up-mode">RPC Server “Warm-Up” Mode</h2>

  <p>The RPC server is started earlier now, before most of the expensive
intialisations like loading the block index.  It is available now almost
immediately after starting the process.  However, until all initialisations
are done, it always returns an immediate error with code -28 to all calls.</p>

  <p>This new behaviour can be useful for clients to know that a server is already
started and will be available soon (for instance, so that they do not
have to start it themselves).</p>

  <h2 id="improved-signing-security">Improved signing security</h2>

  <p>For 0.10 the security of signing against unusual attacks has been
improved by making the signatures constant time and deterministic.</p>

  <p>This change is a result of switching signing to use libsecp256k1
instead of OpenSSL. Libsecp256k1 is a cryptographic library
optimized for the curve Bitcoin uses which was created by Bitcoin
Core developer Pieter Wuille.</p>

  <p>There exist attacks[1] against most ECC implementations where an
attacker on shared virtual machine hardware could extract a private
key if they could cause a target to sign using the same key hundreds
of times. While using shared hosts and reusing keys are inadvisable
for other reasons, it’s a better practice to avoid the exposure.</p>

  <p>OpenSSL has code in their source repository for derandomization
and reduction in timing leaks that we’ve eagerly wanted to use for a
long time, but this functionality has still not made its
way into a released version of OpenSSL. Libsecp256k1 achieves
significantly stronger protection: As far as we’re aware this is
the only deployed implementation of constant time signing for
the curve Bitcoin uses and we have reason to believe that
libsecp256k1 is better tested and more thoroughly reviewed
than the implementation in OpenSSL.</p>

  <p>[1] <a href="https://eprint.iacr.org/2014/161.pdf">https://eprint.iacr.org/2014/161.pdf</a></p>

  <h2 id="watch-only-wallet-support">Watch-only wallet support</h2>

  <p>The wallet can now track transactions to and from wallets for which you know
all addresses (or scripts), even without the private keys.</p>

  <p>This can be used to track payments without needing the private keys online on a
possibly vulnerable system. In addition, it can help for (manual) construction
of multisig transactions where you are only one of the signers.</p>

  <p>One new RPC, <code class="language-text highlighter-rouge">importaddress</code>, is added which functions similarly to
<code class="language-text highlighter-rouge">importprivkey</code>, but instead takes an address or script (in hexadecimal) as
argument.  After using it, outputs credited to this address or script are
considered to be received, and transactions consuming these outputs will be
considered to be sent.</p>

  <p>The following RPCs have optional support for watch-only:
<code class="language-text highlighter-rouge">getbalance</code>, <code class="language-text highlighter-rouge">listreceivedbyaddress</code>, <code class="language-text highlighter-rouge">listreceivedbyaccount</code>,
<code class="language-text highlighter-rouge">listtransactions</code>, <code class="language-text highlighter-rouge">listaccounts</code>, <code class="language-text highlighter-rouge">listsinceblock</code>, <code class="language-text highlighter-rouge">gettransaction</code>. See the
RPC documentation for those methods for more information.</p>

  <p>Compared to using <code class="language-text highlighter-rouge">getrawtransaction</code>, this mechanism does not require
<code class="language-text highlighter-rouge">-txindex</code>, scales better, integrates better with the wallet, and is compatible
with future block chain pruning functionality. It does mean that all relevant
addresses need to added to the wallet before the payment, though.</p>

  <h2 id="consensus-library">Consensus library</h2>

  <p>Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.</p>

  <p>The purpose of this library is to make the verification functionality that is
critical to Bitcoin’s consensus available to other applications, e.g. to language
bindings such as <a href="https://pypi.python.org/pypi/python-bitcoinlib">python-bitcoinlib</a> or
alternative node implementations.</p>

  <p>This library is called <code class="language-text highlighter-rouge">libbitcoinconsensus.so</code> (or, <code class="language-text highlighter-rouge">.dll</code> for Windows).
Its interface is defined in the C header <a href="https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h">bitcoinconsensus.h</a>.</p>

  <p>In its initial version the API includes two functions:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">bitcoinconsensus_verify_script</code> verifies a script. It returns whether the indicated input of the provided serialized transaction 
correctly spends the passed scriptPubKey under additional constraints indicated by flags</li>
    <li><code class="language-text highlighter-rouge">bitcoinconsensus_version</code> returns the API version, currently at an experimental <code class="language-text highlighter-rouge">0</code></li>
  </ul>

  <p>The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface
for existing methods should remain stable.</p>

  <h2 id="standard-script-rules-relaxed-for-p2sh-addresses">Standard script rules relaxed for P2SH addresses</h2>

  <p>The IsStandard() rules have been almost completely removed for P2SH
redemption scripts, allowing applications to make use of any valid
script type, such as “n-of-m OR y”, hash-locked oracle addresses, etc.
While the Bitcoin protocol has always supported these types of script,
actually using them on mainnet has been previously inconvenient as
standard Bitcoin Core nodes wouldn’t relay them to miners, nor would
most miners include them in blocks they mined.</p>

  <h2 id="bitcoin-tx">bitcoin-tx</h2>

  <p>It has been observed that many of the RPC functions offered by bitcoind are
“pure functions”, and operate independently of the bitcoind wallet. This
included many of the RPC “raw transaction” API functions, such as
createrawtransaction.</p>

  <p>bitcoin-tx is a newly introduced command line utility designed to enable easy
manipulation of bitcoin transactions. A summary of its operation may be
obtained via “bitcoin-tx –help” Transactions may be created or signed in a
manner similar to the RPC raw tx API. Transactions may be updated, deleting
inputs or outputs, or appending new inputs and outputs. Custom scripts may be
easily composed using a simple text notation, borrowed from the bitcoin test
suite.</p>

  <p>This tool may be used for experimenting with new transaction types, signing
multi-party transactions, and many other uses. Long term, the goal is to
deprecate and remove “pure function” RPC API calls, as those do not require a
server round-trip to execute.</p>

  <p>Other utilities “bitcoin-key” and “bitcoin-script” have been proposed, making
key and script operations easily accessible via command line.</p>

  <h2 id="mining-and-relay-policy-enhancements">Mining and relay policy enhancements</h2>

  <p>Bitcoin Core’s block templates are now for version 3 blocks only, and any mining
software relying on its <code class="language-text highlighter-rouge">getblocktemplate</code> must be updated in parallel to use
libblkmaker either version 0.4.2 or any version from 0.5.1 onward.
If you are solo mining, this will affect you the moment you upgrade Bitcoin
Core, which must be done prior to BIP66 achieving its 951/1001 status.
If you are mining with the stratum mining protocol: this does not affect you.
If you are mining with the getblocktemplate protocol to a pool: this will affect
you at the pool operator’s discretion, which must be no later than BIP66
achieving its 951/1001 status.</p>

  <p>The <code class="language-text highlighter-rouge">prioritisetransaction</code> RPC method has been added to enable miners to
manipulate the priority of transactions on an individual basis.</p>

  <p>Bitcoin Core now supports BIP 22 long polling, so mining software can be
notified immediately of new templates rather than having to poll periodically.</p>

  <p>Support for BIP 23 block proposals is now available in Bitcoin Core’s
<code class="language-text highlighter-rouge">getblocktemplate</code> method. This enables miners to check the basic validity of
their next block before expending work on it, reducing risks of accidental
hardforks or mining invalid blocks.</p>

  <p>Two new options to control mining policy:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">-datacarrier=0/1</code> : Relay and mine “data carrier” (OP_RETURN) transactions
if this is 1.</li>
    <li><code class="language-text highlighter-rouge">-datacarriersize=n</code> : Maximum size, in bytes, we consider acceptable for
“data carrier” outputs.</li>
  </ul>

  <p>The relay policy has changed to more properly implement the desired behavior of not 
relaying free (or very low fee) transactions unless they have a priority above the 
AllowFreeThreshold(), in which case they are relayed subject to the rate limiter.</p>

  <h2 id="bip-66-strict-der-encoding-for-signatures">BIP 66: strict DER encoding for signatures</h2>

  <p>Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new
consensus rule, which prohibits non-DER signatures. Such transactions have been
non-standard since Bitcoin v0.8.0 (released in February 2013), but were
technically still permitted inside blocks.</p>

  <p>This change breaks the dependency on OpenSSL’s signature parsing, and is
required if implementations would want to remove all of OpenSSL from the
consensus code.</p>

  <p>The same miner-voting mechanism as in BIP 34 is used: when 751 out of a
sequence of 1001 blocks have version number 3 or higher, the new consensus
rule becomes active for those blocks. When 951 out of a sequence of 1001
blocks have version number 3 or higher, it becomes mandatory for all blocks.</p>

  <p>Backward compatibility with current mining software is NOT provided, thus miners
should read the first paragraph of “Mining and relay policy enhancements” above.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="change-log">0.10.0 Change log</h1>

  <p>Detailed release notes follow. This overview includes changes that affect external
behavior, not code moves, refactors or string updates.</p>

  <p>RPC:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">f923c07</code> Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost</li>
    <li><code class="language-text highlighter-rouge">b641c9c</code> Fix addnode “onetry”: Connect with OpenNetworkConnection</li>
    <li><code class="language-text highlighter-rouge">171ca77</code> estimatefee / estimatepriority RPC methods</li>
    <li><code class="language-text highlighter-rouge">b750cf1</code> Remove cli functionality from bitcoind</li>
    <li><code class="language-text highlighter-rouge">f6984e8</code> Add “chain” to getmininginfo, improve help in getblockchaininfo</li>
    <li><code class="language-text highlighter-rouge">99ddc6c</code> Add nLocalServices info to RPC getinfo</li>
    <li><code class="language-text highlighter-rouge">cf0c47b</code> Remove getwork() RPC call</li>
    <li><code class="language-text highlighter-rouge">2a72d45</code> <code class="language-text highlighter-rouge">prioritisetransaction &lt;txid&gt; &lt;priority delta&gt; &lt;priority tx fee&gt;</code></li>
    <li><code class="language-text highlighter-rouge">e44fea5</code> Add an option <code class="language-text highlighter-rouge">-datacarrier</code> to allow users to disable relaying/mining data carrier transactions</li>
    <li><code class="language-text highlighter-rouge">2ec5a3d</code> Prevent easy RPC memory exhaustion attack</li>
    <li><code class="language-text highlighter-rouge">d4640d7</code> Added argument to getbalance to include watchonly addresses and fixed errors in balance calculation</li>
    <li><code class="language-text highlighter-rouge">83f3543</code> Added argument to listaccounts to include watchonly addresses</li>
    <li><code class="language-text highlighter-rouge">952877e</code> Showing ‘involvesWatchonly’ property for transactions returned by ‘listtransactions’ and ‘listsinceblock’. It is only appended when the transaction involves a watchonly address</li>
    <li><code class="language-text highlighter-rouge">d7d5d23</code> Added argument to listtransactions and listsinceblock to include watchonly addresses</li>
    <li><code class="language-text highlighter-rouge">f87ba3d</code> added includeWatchonly argument to ‘gettransaction’ because it affects balance calculation</li>
    <li><code class="language-text highlighter-rouge">0fa2f88</code> added includedWatchonly argument to listreceivedbyaddress/…account</li>
    <li><code class="language-text highlighter-rouge">6c37f7f</code> <code class="language-text highlighter-rouge">getrawchangeaddress</code>: fail when keypool exhausted and wallet locked</li>
    <li><code class="language-text highlighter-rouge">ff6a7af</code> getblocktemplate: longpolling support</li>
    <li><code class="language-text highlighter-rouge">c4a321f</code> Add peerid to getpeerinfo to allow correlation with the logs</li>
    <li><code class="language-text highlighter-rouge">1b4568c</code> Add vout to ListTransactions output</li>
    <li><code class="language-text highlighter-rouge">b33bd7a</code> Implement “getchaintips” RPC command to monitor blockchain forks</li>
    <li><code class="language-text highlighter-rouge">733177e</code> Remove size limit in RPC client, keep it in server</li>
    <li><code class="language-text highlighter-rouge">6b5b7cb</code> Categorize rpc help overview</li>
    <li><code class="language-text highlighter-rouge">6f2c26a</code> Closely track mempool byte total. Add “getmempoolinfo” RPC</li>
    <li><code class="language-text highlighter-rouge">aa82795</code> Add detailed network info to getnetworkinfo RPC</li>
    <li><code class="language-text highlighter-rouge">01094bd</code> Don’t reveal whether password is &lt;20 or &gt;20 characters in RPC</li>
    <li><code class="language-text highlighter-rouge">57153d4</code> rpc: Compute number of confirmations of a block from block height</li>
    <li><code class="language-text highlighter-rouge">ff36cbe</code> getnetworkinfo: export local node’s client sub-version string</li>
    <li><code class="language-text highlighter-rouge">d14d7de</code> SanitizeString: allow ‘(‘ and ‘)’</li>
    <li><code class="language-text highlighter-rouge">31d6390</code> Fixed setaccount accepting foreign address</li>
    <li><code class="language-text highlighter-rouge">b5ec5fe</code> update getnetworkinfo help with subversion</li>
    <li><code class="language-text highlighter-rouge">ad6e601</code> RPC additions after headers-first</li>
    <li><code class="language-text highlighter-rouge">33dfbf5</code> rpc: Fix leveldb iterator leak, and flush before <code class="language-text highlighter-rouge">gettxoutsetinfo</code></li>
    <li><code class="language-text highlighter-rouge">2aa6329</code> Enable customising node policy for datacarrier data size with a -datacarriersize option</li>
    <li><code class="language-text highlighter-rouge">f877aaa</code> submitblock: Use a temporary CValidationState to determine accurately the outcome of ProcessBlock</li>
    <li><code class="language-text highlighter-rouge">e69a587</code> submitblock: Support for returning specific rejection reasons</li>
    <li><code class="language-text highlighter-rouge">af82884</code> Add “warmup mode” for RPC server</li>
    <li><code class="language-text highlighter-rouge">e2655e0</code> Add unauthenticated HTTP REST interface to public blockchain data</li>
    <li><code class="language-text highlighter-rouge">683dc40</code> Disable SSLv3 (in favor of TLS) for the RPC client and server</li>
    <li><code class="language-text highlighter-rouge">44b4c0d</code> signrawtransaction: validate private key</li>
    <li><code class="language-text highlighter-rouge">9765a50</code> Implement BIP 23 Block Proposal</li>
    <li><code class="language-text highlighter-rouge">f9de17e</code> Add warning comment to getinfo</li>
  </ul>

  <p>Command-line options:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">ee21912</code> Use netmasks instead of wildcards for IP address matching</li>
    <li><code class="language-text highlighter-rouge">deb3572</code> Add <code class="language-text highlighter-rouge">-rpcbind</code> option to allow binding RPC port on a specific interface</li>
    <li><code class="language-text highlighter-rouge">96b733e</code> Add <code class="language-text highlighter-rouge">-version</code> option to get just the version</li>
    <li><code class="language-text highlighter-rouge">1569353</code> Add <code class="language-text highlighter-rouge">-stopafterblockimport</code> option</li>
    <li><code class="language-text highlighter-rouge">77cbd46</code> Let -zapwallettxes recover transaction meta data</li>
    <li><code class="language-text highlighter-rouge">1c750db</code> remove -tor compatibility code (only allow -onion)</li>
    <li><code class="language-text highlighter-rouge">4aaa017</code> rework help messages for fee-related options</li>
    <li><code class="language-text highlighter-rouge">4278b1d</code> Clarify error message when invalid -rpcallowip</li>
    <li><code class="language-text highlighter-rouge">6b407e4</code> -datadir is now allowed in config files</li>
    <li><code class="language-text highlighter-rouge">bdd5b58</code> Add option <code class="language-text highlighter-rouge">-sysperms</code> to disable 077 umask (create new files with system default umask)</li>
    <li><code class="language-text highlighter-rouge">cbe39a3</code> Add “bitcoin-tx” command line utility and supporting modules</li>
    <li><code class="language-text highlighter-rouge">dbca89b</code> Trigger -alertnotify if network is upgrading without you</li>
    <li><code class="language-text highlighter-rouge">ad96e7c</code> Make -reindex cope with out-of-order blocks</li>
    <li><code class="language-text highlighter-rouge">16d5194</code> Skip reindexed blocks individually</li>
    <li><code class="language-text highlighter-rouge">ec01243</code> –tracerpc option for regression tests</li>
    <li><code class="language-text highlighter-rouge">f654f00</code> Change -genproclimit default to 1</li>
    <li><code class="language-text highlighter-rouge">3c77714</code> Make -proxy set all network types, avoiding a connect leak</li>
    <li><code class="language-text highlighter-rouge">57be955</code> Remove -printblock, -printblocktree, and -printblockindex</li>
    <li><code class="language-text highlighter-rouge">ad3d208</code> remove -maxorphanblocks config parameter since it is no longer functional</li>
  </ul>

  <p>Block and transaction handling:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">7a0e84d</code> ProcessGetData(): abort if a block file is missing from disk</li>
    <li><code class="language-text highlighter-rouge">8c93bf4</code> LoadBlockIndexDB(): Require block db reindex if any <code class="language-text highlighter-rouge">blk*.dat</code> files are missing</li>
    <li><code class="language-text highlighter-rouge">77339e5</code> Get rid of the static chainMostWork (optimization)</li>
    <li><code class="language-text highlighter-rouge">4e0eed8</code> Allow ActivateBestChain to release its lock on cs_main</li>
    <li><code class="language-text highlighter-rouge">18e7216</code> Push cs_mains down in ProcessBlock</li>
    <li><code class="language-text highlighter-rouge">fa126ef</code> Avoid undefined behavior using CFlatData in CScript serialization</li>
    <li><code class="language-text highlighter-rouge">7f3b4e9</code> Relax IsStandard rules for pay-to-script-hash transactions</li>
    <li><code class="language-text highlighter-rouge">c9a0918</code> Add a skiplist to the CBlockIndex structure</li>
    <li><code class="language-text highlighter-rouge">bc42503</code> Use unordered_map for CCoinsViewCache with salted hash (optimization)</li>
    <li><code class="language-text highlighter-rouge">d4d3fbd</code> Do not flush the cache after every block outside of IBD (optimization)</li>
    <li><code class="language-text highlighter-rouge">ad08d0b</code> Bugfix: make CCoinsViewMemPool support pruned entries in underlying cache</li>
    <li><code class="language-text highlighter-rouge">5734d4d</code> Only remove actualy failed blocks from setBlockIndexValid</li>
    <li><code class="language-text highlighter-rouge">d70bc52</code> Rework block processing benchmark code</li>
    <li><code class="language-text highlighter-rouge">714a3e6</code> Only keep setBlockIndexValid entries that are possible improvements</li>
    <li><code class="language-text highlighter-rouge">ea100c7</code> Reduce maximum coinscache size during verification (reduce memory usage)</li>
    <li><code class="language-text highlighter-rouge">4fad8e6</code> Reject transactions with excessive numbers of sigops</li>
    <li><code class="language-text highlighter-rouge">b0875eb</code> Allow BatchWrite to destroy its input, reducing copying (optimization)</li>
    <li><code class="language-text highlighter-rouge">92bb6f2</code> Bypass reloading blocks from disk (optimization)</li>
    <li><code class="language-text highlighter-rouge">2e28031</code> Perform CVerifyDB on pcoinsdbview instead of pcoinsTip (reduce memory usage)</li>
    <li><code class="language-text highlighter-rouge">ab15b2e</code> Avoid copying undo data (optimization)</li>
    <li><code class="language-text highlighter-rouge">341735e</code> Headers-first synchronization</li>
    <li><code class="language-text highlighter-rouge">afc32c5</code> Fix rebuild-chainstate feature and improve its performance</li>
    <li><code class="language-text highlighter-rouge">e11b2ce</code> Fix large reorgs</li>
    <li><code class="language-text highlighter-rouge">ed6d1a2</code> Keep information about all block files in memory</li>
    <li><code class="language-text highlighter-rouge">a48f2d6</code> Abstract context-dependent block checking from acceptance</li>
    <li><code class="language-text highlighter-rouge">7e615f5</code> Fixed mempool sync after sending a transaction</li>
    <li><code class="language-text highlighter-rouge">51ce901</code> Improve chainstate/blockindex disk writing policy</li>
    <li><code class="language-text highlighter-rouge">a206950</code> Introduce separate flushing modes</li>
    <li><code class="language-text highlighter-rouge">9ec75c5</code> Add a locking mechanism to IsInitialBlockDownload to ensure it never goes from false to true</li>
    <li><code class="language-text highlighter-rouge">868d041</code> Remove coinbase-dependant transactions during reorg</li>
    <li><code class="language-text highlighter-rouge">723d12c</code> Remove txn which are invalidated by coinbase maturity during reorg</li>
    <li><code class="language-text highlighter-rouge">0cb8763</code> Check against MANDATORY flags prior to accepting to mempool</li>
    <li><code class="language-text highlighter-rouge">8446262</code> Reject headers that build on an invalid parent</li>
    <li><code class="language-text highlighter-rouge">008138c</code> Bugfix: only track UTXO modification after lookup</li>
  </ul>

  <p>P2P protocol and network code:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">f80cffa</code> Do not trigger a DoS ban if SCRIPT_VERIFY_NULLDUMMY fails</li>
    <li><code class="language-text highlighter-rouge">c30329a</code> Add testnet DNS seed of Alex Kotenko</li>
    <li><code class="language-text highlighter-rouge">45a4baf</code> Add testnet DNS seed of Andreas Schildbach</li>
    <li><code class="language-text highlighter-rouge">f1920e8</code> Ping automatically every 2 minutes (unconditionally)</li>
    <li><code class="language-text highlighter-rouge">806fd19</code> Allocate receive buffers in on the fly</li>
    <li><code class="language-text highlighter-rouge">6ecf3ed</code> Display unknown commands received</li>
    <li><code class="language-text highlighter-rouge">aa81564</code> Track peers’ available blocks</li>
    <li><code class="language-text highlighter-rouge">caf6150</code> Use async name resolving to improve net thread responsiveness</li>
    <li><code class="language-text highlighter-rouge">9f4da19</code> Use pong receive time rather than processing time</li>
    <li><code class="language-text highlighter-rouge">0127a9b</code> remove SOCKS4 support from core and GUI, use SOCKS5</li>
    <li><code class="language-text highlighter-rouge">40f5cb8</code> Send rejects and apply DoS scoring for errors in direct block validation</li>
    <li><code class="language-text highlighter-rouge">dc942e6</code> Introduce whitelisted peers</li>
    <li><code class="language-text highlighter-rouge">c994d2e</code> prevent SOCKET leak in BindListenPort()</li>
    <li><code class="language-text highlighter-rouge">a60120e</code> Add built-in seeds for .onion</li>
    <li><code class="language-text highlighter-rouge">60dc8e4</code> Allow -onlynet=onion to be used</li>
    <li><code class="language-text highlighter-rouge">3a56de7</code> addrman: Do not propagate obviously poor addresses onto the network</li>
    <li><code class="language-text highlighter-rouge">6050ab6</code> netbase: Make SOCKS5 negotiation interruptible</li>
    <li><code class="language-text highlighter-rouge">604ee2a</code> Remove tx from AlreadyAskedFor list once we receive it, not when we process it</li>
    <li><code class="language-text highlighter-rouge">efad808</code> Avoid reject message feedback loops</li>
    <li><code class="language-text highlighter-rouge">71697f9</code> Separate protocol versioning from clientversion</li>
    <li><code class="language-text highlighter-rouge">20a5f61</code> Don’t relay alerts to peers before version negotiation</li>
    <li><code class="language-text highlighter-rouge">b4ee0bd</code> Introduce preferred download peers</li>
    <li><code class="language-text highlighter-rouge">845c86d</code> Do not use third party services for IP detection</li>
    <li><code class="language-text highlighter-rouge">12a49ca</code> Limit the number of new addressses to accumulate</li>
    <li><code class="language-text highlighter-rouge">35e408f</code> Regard connection failures as attempt for addrman</li>
    <li><code class="language-text highlighter-rouge">a3a7317</code> Introduce 10 minute block download timeout</li>
    <li><code class="language-text highlighter-rouge">3022e7d</code> Require sufficent priority for relay of free transactions</li>
    <li><code class="language-text highlighter-rouge">58fda4d</code> Update seed IPs, based on bitcoin.sipa.be crawler data</li>
    <li><code class="language-text highlighter-rouge">18021d0</code> Remove bitnodes.io from dnsseeds.</li>
  </ul>

  <p>Validation:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">6fd7ef2</code> Also switch the (unused) verification code to low-s instead of even-s</li>
    <li><code class="language-text highlighter-rouge">584a358</code> Do merkle root and txid duplicates check simultaneously</li>
    <li><code class="language-text highlighter-rouge">217a5c9</code> When transaction outputs exceed inputs, show the offending amounts so as to aid debugging</li>
    <li><code class="language-text highlighter-rouge">f74fc9b</code> Print input index when signature validation fails, to aid debugging</li>
    <li><code class="language-text highlighter-rouge">6fd59ee</code> script.h: set_vch() should shift a &gt;32 bit value</li>
    <li><code class="language-text highlighter-rouge">d752ba8</code> Add SCRIPT_VERIFY_SIGPUSHONLY (BIP62 rule 2) (test only)</li>
    <li><code class="language-text highlighter-rouge">698c6ab</code> Add SCRIPT_VERIFY_MINIMALDATA (BIP62 rules 3 and 4) (test only)</li>
    <li><code class="language-text highlighter-rouge">ab9edbd</code> script: create sane error return codes for script validation and remove logging</li>
    <li><code class="language-text highlighter-rouge">219a147</code> script: check ScriptError values in script tests</li>
    <li><code class="language-text highlighter-rouge">0391423</code> Discourage NOPs reserved for soft-fork upgrades</li>
    <li><code class="language-text highlighter-rouge">98b135f</code> Make STRICTENC invalid pubkeys fail the script rather than the opcode</li>
    <li><code class="language-text highlighter-rouge">307f7d4</code> Report script evaluation failures in log and reject messages</li>
    <li><code class="language-text highlighter-rouge">ace39db</code> consensus: guard against openssl’s new strict DER checks</li>
    <li><code class="language-text highlighter-rouge">12b7c44</code> Improve robustness of DER recoding code</li>
    <li><code class="language-text highlighter-rouge">76ce5c8</code> fail immediately on an empty signature</li>
  </ul>

  <p>Build system:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">f25e3ad</code> Fix build in OS X 10.9</li>
    <li><code class="language-text highlighter-rouge">65e8ba4</code> build: Switch to non-recursive make</li>
    <li><code class="language-text highlighter-rouge">460b32d</code> build: fix broken boost chrono check on some platforms</li>
    <li><code class="language-text highlighter-rouge">9ce0774</code> build: Fix windows configure when using –with-qt-libdir</li>
    <li><code class="language-text highlighter-rouge">ea96475</code> build: Add mention of –disable-wallet to bdb48 error messages</li>
    <li><code class="language-text highlighter-rouge">1dec09b</code> depends: add shared dependency builder</li>
    <li><code class="language-text highlighter-rouge">c101c76</code> build: Add –with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix</li>
    <li><code class="language-text highlighter-rouge">e432a5f</code> build: add option for reducing exports (v2)</li>
    <li><code class="language-text highlighter-rouge">6134b43</code> Fixing condition ‘sabotaging’ MSVC build</li>
    <li><code class="language-text highlighter-rouge">af0bd5e</code> osx: fix signing to make Gatekeeper happy (again)</li>
    <li><code class="language-text highlighter-rouge">a7d1f03</code> build: fix dynamic boost check when –with-boost= is used</li>
    <li><code class="language-text highlighter-rouge">d5fd094</code> build: fix qt test build when libprotobuf is in a non-standard path</li>
    <li><code class="language-text highlighter-rouge">2cf5f16</code> Add libbitcoinconsensus library</li>
    <li><code class="language-text highlighter-rouge">914868a</code> build: add a deterministic dmg signer</li>
    <li><code class="language-text highlighter-rouge">2d375fe</code> depends: bump openssl to 1.0.1k</li>
    <li><code class="language-text highlighter-rouge">b7a4ecc</code> Build: Only check for boost when building code that requires it</li>
  </ul>

  <p>Wallet:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">b33d1f5</code> Use fee/priority estimates in wallet CreateTransaction</li>
    <li><code class="language-text highlighter-rouge">4b7b1bb</code> Sanity checks for estimates</li>
    <li><code class="language-text highlighter-rouge">c898846</code> Add support for watch-only addresses</li>
    <li><code class="language-text highlighter-rouge">d5087d1</code> Use script matching rather than destination matching for watch-only</li>
    <li><code class="language-text highlighter-rouge">d88af56</code> Fee fixes</li>
    <li><code class="language-text highlighter-rouge">a35b55b</code> Dont run full check every time we decrypt wallet</li>
    <li><code class="language-text highlighter-rouge">3a7c348</code> Fix make_change to not create half-satoshis</li>
    <li><code class="language-text highlighter-rouge">f606bb9</code> fix a possible memory leak in CWalletDB::Recover</li>
    <li><code class="language-text highlighter-rouge">870da77</code> fix possible memory leaks in CWallet::EncryptWallet</li>
    <li><code class="language-text highlighter-rouge">ccca27a</code> Watch-only fixes</li>
    <li><code class="language-text highlighter-rouge">9b1627d</code> [Wallet] Reduce minTxFee for transaction creation to 1000 satoshis</li>
    <li><code class="language-text highlighter-rouge">a53fd41</code> Deterministic signing</li>
    <li><code class="language-text highlighter-rouge">15ad0b5</code> Apply AreSane() checks to the fees from the network</li>
    <li><code class="language-text highlighter-rouge">11855c1</code> Enforce minRelayTxFee on wallet created tx and add a maxtxfee option</li>
  </ul>

  <p>GUI:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">c21c74b</code> osx: Fix missing dock menu with qt5</li>
    <li><code class="language-text highlighter-rouge">b90711c</code> Fix Transaction details shows wrong To:</li>
    <li><code class="language-text highlighter-rouge">516053c</code> Make links in ‘About Bitcoin Core’ clickable</li>
    <li><code class="language-text highlighter-rouge">bdc83e8</code> Ensure payment request network matches client network</li>
    <li><code class="language-text highlighter-rouge">65f78a1</code> Add GUI view of peer information</li>
    <li><code class="language-text highlighter-rouge">06a91d9</code> VerifyDB progress reporting</li>
    <li><code class="language-text highlighter-rouge">fe6bff2</code> Add BerkeleyDB version info to RPCConsole</li>
    <li><code class="language-text highlighter-rouge">b917555</code> PeerTableModel: Fix potential deadlock. #4296</li>
    <li><code class="language-text highlighter-rouge">dff0e3b</code> Improve rpc console history behavior</li>
    <li><code class="language-text highlighter-rouge">95a9383</code> Remove CENT-fee-rule from coin control completely</li>
    <li><code class="language-text highlighter-rouge">56b07d2</code> Allow setting listen via GUI</li>
    <li><code class="language-text highlighter-rouge">d95ba75</code> Log messages with type&gt;QtDebugMsg as non-debug</li>
    <li><code class="language-text highlighter-rouge">8969828</code> New status bar Unit Display Control and related changes</li>
    <li><code class="language-text highlighter-rouge">674c070</code> seed OpenSSL PNRG with Windows event data</li>
    <li><code class="language-text highlighter-rouge">509f926</code> Payment request parsing on startup now only changes network if a valid network name is specified</li>
    <li><code class="language-text highlighter-rouge">acd432b</code> Prevent balloon-spam after rescan</li>
    <li><code class="language-text highlighter-rouge">7007402</code> Implement SI-style (thin space) thoudands separator</li>
    <li><code class="language-text highlighter-rouge">91cce17</code> Use fixed-point arithmetic in amount spinbox</li>
    <li><code class="language-text highlighter-rouge">bdba2dd</code> Remove an obscure option no-one cares about</li>
    <li><code class="language-text highlighter-rouge">bd0aa10</code> Replace the temporary file hack currently used to change Bitcoin-Qt’s dock icon (OS X) with a buffer-based solution</li>
    <li><code class="language-text highlighter-rouge">94e1b9e</code> Re-work overviewpage UI</li>
    <li><code class="language-text highlighter-rouge">8bfdc9a</code> Better looking trayicon</li>
    <li><code class="language-text highlighter-rouge">b197bf3</code> disable tray interactions when client model set to 0</li>
    <li><code class="language-text highlighter-rouge">1c5f0af</code> Add column Watch-only to transactions list</li>
    <li><code class="language-text highlighter-rouge">21f139b</code> Fix tablet crash. closes #4854</li>
    <li><code class="language-text highlighter-rouge">e84843c</code> Broken addresses on command line no longer trigger testnet</li>
    <li><code class="language-text highlighter-rouge">a49f11d</code> Change splash screen to normal window</li>
    <li><code class="language-text highlighter-rouge">1f9be98</code> Disable App Nap on OSX 10.9+</li>
    <li><code class="language-text highlighter-rouge">27c3e91</code> Add proxy to options overridden if necessary</li>
    <li><code class="language-text highlighter-rouge">4bd1185</code> Allow “emergency” shutdown during startup</li>
    <li><code class="language-text highlighter-rouge">d52f072</code> Don’t show wallet options in the preferences menu when running with -disablewallet</li>
    <li><code class="language-text highlighter-rouge">6093aa1</code> Qt: QProgressBar CPU-Issue workaround</li>
    <li><code class="language-text highlighter-rouge">0ed9675</code> [Wallet] Add global boolean whether to send free transactions (default=true)</li>
    <li><code class="language-text highlighter-rouge">ed3e5e4</code> [Wallet] Add global boolean whether to pay at least the custom fee (default=true)</li>
    <li><code class="language-text highlighter-rouge">e7876b2</code> [Wallet] Prevent user from paying a non-sense fee</li>
    <li><code class="language-text highlighter-rouge">c1c9d5b</code> Add Smartfee to GUI</li>
    <li><code class="language-text highlighter-rouge">e0a25c5</code> Make askpassphrase dialog behave more sanely</li>
    <li><code class="language-text highlighter-rouge">94b362d</code> On close of splashscreen interrupt verifyDB</li>
    <li><code class="language-text highlighter-rouge">b790d13</code> English translation update</li>
    <li><code class="language-text highlighter-rouge">8543b0d</code> Correct tooltip on address book page</li>
  </ul>

  <p>Tests:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">b41e594</code> Fix script test handling of empty scripts</li>
    <li><code class="language-text highlighter-rouge">d3a33fc</code> Test CHECKMULTISIG with m == 0 and n == 0</li>
    <li><code class="language-text highlighter-rouge">29c1749</code> Let tx (in)valid tests use any SCRIPT_VERIFY flag</li>
    <li><code class="language-text highlighter-rouge">6380180</code> Add rejection of non-null CHECKMULTISIG dummy values</li>
    <li><code class="language-text highlighter-rouge">21bf3d2</code> Add tests for BoostAsioToCNetAddr</li>
    <li><code class="language-text highlighter-rouge">b5ad5e7</code> Add Python test for -rpcbind and -rpcallowip</li>
    <li><code class="language-text highlighter-rouge">9ec0306</code> Add CODESEPARATOR/FindAndDelete() tests</li>
    <li><code class="language-text highlighter-rouge">75ebced</code> Added many rpc wallet tests</li>
    <li><code class="language-text highlighter-rouge">0193fb8</code> Allow multiple regression tests to run at once</li>
    <li><code class="language-text highlighter-rouge">92a6220</code> Hook up sanity checks</li>
    <li><code class="language-text highlighter-rouge">3820e01</code> Extend and move all crypto tests to crypto_tests.cpp</li>
    <li><code class="language-text highlighter-rouge">3f9a019</code> added list/get received by address/ account tests</li>
    <li><code class="language-text highlighter-rouge">a90689f</code> Remove timing-based signature cache unit test</li>
    <li><code class="language-text highlighter-rouge">236982c</code> Add skiplist unit tests</li>
    <li><code class="language-text highlighter-rouge">f4b00be</code> Add CChain::GetLocator() unit test</li>
    <li><code class="language-text highlighter-rouge">b45a6e8</code> Add test for getblocktemplate longpolling</li>
    <li><code class="language-text highlighter-rouge">cdf305e</code> Set -discover=0 in regtest framework</li>
    <li><code class="language-text highlighter-rouge">ed02282</code> additional test for OP_SIZE in script_valid.json</li>
    <li><code class="language-text highlighter-rouge">0072d98</code> script tests: BOOLAND, BOOLOR decode to integer</li>
    <li><code class="language-text highlighter-rouge">833ff16</code> script tests: values that overflow to 0 are true</li>
    <li><code class="language-text highlighter-rouge">4cac5db</code> script tests: value with trailing 0x00 is true</li>
    <li><code class="language-text highlighter-rouge">89101c6</code> script test: test case for 5-byte bools</li>
    <li><code class="language-text highlighter-rouge">d2d9dc0</code> script tests: add tests for CHECKMULTISIG limits</li>
    <li><code class="language-text highlighter-rouge">d789386</code> Add “it works” test for bitcoin-tx</li>
    <li><code class="language-text highlighter-rouge">df4d61e</code> Add bitcoin-tx tests</li>
    <li><code class="language-text highlighter-rouge">aa41ac2</code> Test IsPushOnly() with invalid push</li>
    <li><code class="language-text highlighter-rouge">6022b5d</code> Make <code class="language-text highlighter-rouge">script_{valid,invalid}.json</code> validation flags configurable</li>
    <li><code class="language-text highlighter-rouge">8138cbe</code> Add automatic script test generation, and actual checksig tests</li>
    <li><code class="language-text highlighter-rouge">ed27e53</code> Add coins_tests with a large randomized CCoinViewCache test</li>
    <li><code class="language-text highlighter-rouge">9df9cf5</code> Make SCRIPT_VERIFY_STRICTENC compatible with BIP62</li>
    <li><code class="language-text highlighter-rouge">dcb9846</code> Extend getchaintips RPC test</li>
    <li><code class="language-text highlighter-rouge">554147a</code> Ensure MINIMALDATA invalid tests can only fail one way</li>
    <li><code class="language-text highlighter-rouge">dfeec18</code> Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule</li>
    <li><code class="language-text highlighter-rouge">2b62e17</code> Clearly separate PUSHDATA and numeric argument MINIMALDATA tests</li>
    <li><code class="language-text highlighter-rouge">16d78bd</code> Add valid invert of invalid every numeric opcode tests</li>
    <li><code class="language-text highlighter-rouge">f635269</code> tests: enable alertnotify test for Windows</li>
    <li><code class="language-text highlighter-rouge">7a41614</code> tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment</li>
    <li><code class="language-text highlighter-rouge">5122ea7</code> tests: fix forknotify.py on windows</li>
    <li><code class="language-text highlighter-rouge">fa7f8cd</code> tests: remove old pull-tester scripts</li>
    <li><code class="language-text highlighter-rouge">7667850</code> tests: replace the old (unused since Travis) tests with new rpc test scripts</li>
    <li><code class="language-text highlighter-rouge">f4e0aef</code> Do signature-s negation inside the tests</li>
    <li><code class="language-text highlighter-rouge">1837987</code> Optimize -regtest setgenerate block generation</li>
    <li><code class="language-text highlighter-rouge">2db4c8a</code> Fix node ranges in the test framework</li>
    <li><code class="language-text highlighter-rouge">a8b2ce5</code> regression test only setmocktime RPC call</li>
    <li><code class="language-text highlighter-rouge">daf03e7</code> RPC tests: create initial chain with specific timestamps</li>
    <li><code class="language-text highlighter-rouge">8656dbb</code> Port/fix txnmall.sh regression test</li>
    <li><code class="language-text highlighter-rouge">ca81587</code> Test the exact order of CHECKMULTISIG sig/pubkey evaluation</li>
    <li><code class="language-text highlighter-rouge">7357893</code> Prioritize and display -testsafemode status in UI</li>
    <li><code class="language-text highlighter-rouge">f321d6b</code> Add key generation/verification to ECC sanity check</li>
    <li><code class="language-text highlighter-rouge">132ea9b</code> miner_tests: Disable checkpoints so they don’t fail the subsidy-change test</li>
    <li><code class="language-text highlighter-rouge">bc6cb41</code> QA RPC tests: Add tests block block proposals</li>
    <li><code class="language-text highlighter-rouge">f67a9ce</code> Use deterministically generated script tests</li>
    <li><code class="language-text highlighter-rouge">11d7a7d</code> [RPC] add rpc-test for http keep-alive (persistent connections)</li>
    <li><code class="language-text highlighter-rouge">34318d7</code> RPC-test based on invalidateblock for mempool coinbase spends</li>
    <li><code class="language-text highlighter-rouge">76ec867</code> Use actually valid transactions for script tests</li>
    <li><code class="language-text highlighter-rouge">c8589bf</code> Add actual signature tests</li>
    <li><code class="language-text highlighter-rouge">e2677d7</code> Fix smartfees test for change to relay policy</li>
    <li><code class="language-text highlighter-rouge">263b65e</code> tests: run sanity checks in tests too</li>
  </ul>

  <p>Miscellaneous:</p>

  <ul>
    <li><code class="language-text highlighter-rouge">122549f</code> Fix incorrect checkpoint data for testnet3</li>
    <li><code class="language-text highlighter-rouge">5bd02cf</code> Log used config file to debug.log on startup</li>
    <li><code class="language-text highlighter-rouge">68ba85f</code> Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments</li>
    <li><code class="language-text highlighter-rouge">e5ee8f0</code> Remove -beta suffix</li>
    <li><code class="language-text highlighter-rouge">38405ac</code> Add comment regarding experimental-use service bits</li>
    <li><code class="language-text highlighter-rouge">be873f6</code> Issue warning if collecting RandSeed data failed</li>
    <li><code class="language-text highlighter-rouge">8ae973c</code> Allocate more space if necessary in RandSeedAddPerfMon</li>
    <li><code class="language-text highlighter-rouge">675bcd5</code> Correct comment for 15-of-15 p2sh script size</li>
    <li><code class="language-text highlighter-rouge">fda3fed</code> libsecp256k1 integration</li>
    <li><code class="language-text highlighter-rouge">2e36866</code> Show nodeid instead of addresses in log (for anonymity) unless otherwise requested</li>
    <li><code class="language-text highlighter-rouge">cd01a5e</code> Enable paranoid corruption checks in LevelDB &gt;= 1.16</li>
    <li><code class="language-text highlighter-rouge">9365937</code> Add comment about never updating nTimeOffset past 199 samples</li>
    <li><code class="language-text highlighter-rouge">403c1bf</code> contrib: remove getwork-based pyminer (as getwork API call has been removed)</li>
    <li><code class="language-text highlighter-rouge">0c3e101</code> contrib: Added systemd .service file in order to help distributions integrate bitcoind</li>
    <li><code class="language-text highlighter-rouge">0a0878d</code> doc: Add new DNSseed policy</li>
    <li><code class="language-text highlighter-rouge">2887bff</code> Update coding style and add .clang-format</li>
    <li><code class="language-text highlighter-rouge">5cbda4f</code> Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope</li>
    <li><code class="language-text highlighter-rouge">b4a72a7</code> contrib/linearize: split output files based on new-timestamp-year or max-file-size</li>
    <li><code class="language-text highlighter-rouge">e982b57</code> Use explicit fflush() instead of setvbuf()</li>
    <li><code class="language-text highlighter-rouge">234bfbf</code> contrib: Add init scripts and docs for Upstart and OpenRC</li>
    <li><code class="language-text highlighter-rouge">01c2807</code> Add warning about the merkle-tree algorithm duplicate txid flaw</li>
    <li><code class="language-text highlighter-rouge">d6712db</code> Also create pid file in non-daemon mode</li>
    <li><code class="language-text highlighter-rouge">772ab0e</code> contrib: use batched JSON-RPC in linarize-hashes (optimization)</li>
    <li><code class="language-text highlighter-rouge">7ab4358</code> Update bash-completion for v0.10</li>
    <li><code class="language-text highlighter-rouge">6e6a36c</code> contrib: show pull # in prompt for github-merge script</li>
    <li><code class="language-text highlighter-rouge">5b9f842</code> Upgrade leveldb to 1.18, make chainstate databases compatible between ARM and x86 (issue #2293)</li>
    <li><code class="language-text highlighter-rouge">4e7c219</code> Catch UTXO set read errors and shutdown</li>
    <li><code class="language-text highlighter-rouge">867c600</code> Catch LevelDB errors during flush</li>
    <li><code class="language-text highlighter-rouge">06ca065</code> Fix CScriptID(const CScript&amp; in) in empty script case</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="credits">Credits</h1>

  <p>Thanks to everyone who contributed to this release:</p>

  <ul>
    <li>21E14</li>
    <li>Adam Weiss</li>
    <li>Aitor Pazos</li>
    <li>Alexander Jeng</li>
    <li>Alex Morcos</li>
    <li>Alon Muroch</li>
    <li>Andreas Schildbach</li>
    <li>Andrew Poelstra</li>
    <li>Andy Alness</li>
    <li>Ashley Holman</li>
    <li>Benedict Chan</li>
    <li>Ben Holden-Crowther</li>
    <li>Bryan Bishop</li>
    <li>BtcDrak</li>
    <li>Christian von Roques</li>
    <li>Clinton Christian</li>
    <li>Cory Fields</li>
    <li>Cozz Lovan</li>
    <li>daniel</li>
    <li>Daniel Kraft</li>
    <li>David Hill</li>
    <li>Derek701</li>
    <li>dexX7</li>
    <li>dllud</li>
    <li>Dominyk Tiller</li>
    <li>Doug</li>
    <li>elichai</li>
    <li>elkingtowa</li>
    <li>ENikS</li>
    <li>Eric Shaw</li>
    <li>Federico Bond</li>
    <li>Francis GASCHET</li>
    <li>Gavin Andresen</li>
    <li>Giuseppe Mazzotta</li>
    <li>Glenn Willen</li>
    <li>Gregory Maxwell</li>
    <li>gubatron</li>
    <li>HarryWu</li>
    <li>himynameismartin</li>
    <li>Huang Le</li>
    <li>Ian Carroll</li>
    <li>imharrywu</li>
    <li>Jameson Lopp</li>
    <li>Janusz Lenar</li>
    <li>JaSK</li>
    <li>Jeff Garzik</li>
    <li>JL2035</li>
    <li>Johnathan Corgan</li>
    <li>Jonas Schnelli</li>
    <li>jtimon</li>
    <li>Julian Haight</li>
    <li>Kamil Domanski</li>
    <li>kazcw</li>
    <li>kevin</li>
    <li>kiwigb</li>
    <li>Kosta Zertsekel</li>
    <li>LongShao007</li>
    <li>Luke Dashjr</li>
    <li>Mark Friedenbach</li>
    <li>Mathy Vanvoorden</li>
    <li>Matt Corallo</li>
    <li>Matthew Bogosian</li>
    <li>Micha</li>
    <li>Michael Ford</li>
    <li>Mike Hearn</li>
    <li>mrbandrews</li>
    <li>mruddy</li>
    <li>ntrgn</li>
    <li>Otto Allmendinger</li>
    <li>paveljanik</li>
    <li>Pavel Vasin</li>
    <li>Peter Todd</li>
    <li>phantomcircuit</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>pryds</li>
    <li>randy-waterhouse</li>
    <li>R E Broadley</li>
    <li>Rose Toomey</li>
    <li>Ross Nicoll</li>
    <li>Roy Badami</li>
    <li>Ruben Dario Ponticelli</li>
    <li>Rune K. Svendsen</li>
    <li>Ryan X. Charles</li>
    <li>Saivann</li>
    <li>sandakersmann</li>
    <li>SergioDemianLerner</li>
    <li>shshshsh</li>
    <li>sinetek</li>
    <li>Stuart Cardall</li>
    <li>Suhas Daftuar</li>
    <li>Tawanda Kembo</li>
    <li>Teran McKinney</li>
    <li>tm314159</li>
    <li>Tom Harding</li>
    <li>Trevin Hofmann</li>
    <li>Whit J</li>
    <li>Wladimir J. van der Laan</li>
    <li>Yoichi Hirai</li>
    <li>Zak Wilcox</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.9.3 released</title>
            <link>https://bitcoin.org/en/release/v0.9.3</link>
            <guid>https://bitcoin.org/en/release/v0.9.3</guid>
          
            <pubDate>Sat, 27 Sep 2014 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.9.3 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/0.9.3/</del></p>

  <p>This is a new minor version release, bringing only bug fixes and updated
translations. Upgrading to this release is recommended.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <p>If you are upgrading from version 0.7.2 or earlier, the first time you run
0.9.3 your blockchain files will be re-indexed, which will take anywhere from 
30 minutes to several hours, depending on the speed of your machine.</p>

  <h2 id="downgrading-warnings">Downgrading warnings</h2>

  <p>The ‘chainstate’ for this release is not always compatible with previous
releases, so if you run 0.9.x and then decide to switch back to a
0.8.x release you might get a blockchain validation error when starting the
old release (due to ‘pruned outputs’ being omitted from the index of
unspent transaction outputs).</p>

  <p>Running the old release with the -reindex option will rebuild the chainstate
data structures and correct the problem.</p>

  <p>Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan
the blockchain for missing spent coins, which will take a long time (tens
of minutes on a typical machine).</p>

</div>

<div class="toccontent-block boxexpand expanded">
  <h1 id="release-notes">0.9.3 Release notes</h1>

  <p>RPC:</p>

  <ul>
    <li>Avoid a segfault on getblock if it can’t read a block from disk</li>
    <li>Add paranoid return value checks in base58</li>
  </ul>

  <p>Protocol and network code:</p>

  <ul>
    <li>Don’t poll showmyip.com, it doesn’t exist anymore</li>
    <li>Add a way to limit deserialized string lengths and use it</li>
    <li>Add a new checkpoint at block 295,000</li>
    <li>Increase IsStandard() scriptSig length</li>
    <li>Avoid querying DNS seeds, if we have open connections</li>
    <li>Remove a useless millisleep in socket handler</li>
    <li>Stricter memory limits on CNode</li>
    <li>Better orphan transaction handling</li>
    <li>Add <code class="language-text highlighter-rouge">-maxorphantx=&lt;n&gt;</code> and <code class="language-text highlighter-rouge">-maxorphanblocks=&lt;n&gt;</code> options for control over the maximum orphan transactions and blocks</li>
  </ul>

  <p>Wallet:</p>

  <ul>
    <li>Check redeemScript size does not exceed 520 byte limit</li>
    <li>Ignore (and warn about) too-long redeemScripts while loading wallet</li>
  </ul>

  <p>GUI:</p>

  <ul>
    <li>fix ‘opens in testnet mode when presented with a BIP-72 link with no fallback’</li>
    <li>AvailableCoins: acquire cs_main mutex</li>
    <li>Fix unicode character display on MacOSX</li>
  </ul>

  <p>Miscellaneous:</p>

  <ul>
    <li>key.cpp: fail with a friendlier message on missing ssl EC support</li>
    <li>Remove bignum dependency for scripts</li>
    <li>Upgrade OpenSSL to 1.0.1i (see <a href="https://www.openssl.org/news/secadv_20140806.txt">https://www.openssl.org/news/secadv_20140806.txt</a> - just to be sure, no critical issues for Bitcoin Core)</li>
    <li>Upgrade miniupnpc to 1.9.20140701</li>
    <li>Fix boost detection in build system on some platforms</li>
  </ul>

  <h2 id="credits">Credits</h2>

  <p>Thanks to everyone who contributed to this release:</p>

  <ul>
    <li>Andrew Poelstra</li>
    <li>Cory Fields</li>
    <li>Gavin Andresen</li>
    <li>Jeff Garzik</li>
    <li>Johnathan Corgan</li>
    <li>Julian Haight</li>
    <li>Michael Ford</li>
    <li>Pavel Vasin</li>
    <li>Peter Todd</li>
    <li>phantomcircuit</li>
    <li>Pieter Wuille</li>
    <li>Rose Toomey</li>
    <li>Ruben Dario Ponticelli</li>
    <li>shshshsh</li>
    <li>Trevin Hofmann</li>
    <li>Warren Togami</li>
    <li>Wladimir J. van der Laan</li>
    <li>Zak Wilcox</li>
  </ul>

  <p>As well as everyone that helped translating on <a href="https://www.transifex.com/projects/p/bitcoin/">Transifex</a>.</p>

</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.9.2.1 released</title>
            <link>https://bitcoin.org/en/release/v0.9.2.1</link>
            <guid>https://bitcoin.org/en/release/v0.9.2.1</guid>
          
            <pubDate>Thu, 19 Jun 2014 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.9.2.1 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/0.9.2.1/</del></p>

  <p>This is a new minor version release, bringing mostly bug fixes and some minor
improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).
Upgrading to this release is recommended.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <p>If you are upgrading from version 0.7.2 or earlier, the first time you run
0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from 
30 minutes to several hours, depending on the speed of your machine.</p>

  <h2 id="downgrading-warnings">Downgrading warnings</h2>

  <p>The ‘chainstate’ for this release is not always compatible with previous
releases, so if you run 0.9.x and then decide to switch back to a
0.8.x release you might get a blockchain validation error when starting the
old release (due to ‘pruned outputs’ being omitted from the index of
unspent transaction outputs).</p>

  <p>Running the old release with the -reindex option will rebuild the chainstate
data structures and correct the problem.</p>

  <p>Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan
the blockchain for missing spent coins, which will take a long time (tens
of minutes on a typical machine).</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="important-changes">Important changes</h1>

  <h2 id="gitian-osx-build">Gitian OSX build</h2>

  <p>The deterministic build system that was already used for Windows and Linux
builds is now used for OSX as well. Although the resulting executables have
been tested quite a bit, there could be possible regressions. Be sure to report
these on the Github bug tracker mentioned above.</p>

  <h2 id="compatibility-of-linux-build">Compatibility of Linux build</h2>

  <p>For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.
This brings back compatibility with</p>

  <ul>
    <li>Debian 6+ / Tails</li>
    <li>Ubuntu 10.04</li>
    <li>CentOS 6.5</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes">0.9.2 - 0.9.2.1 Release notes</h1>

  <p>The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.</p>

  <p>RPC:</p>

  <ul>
    <li>Add <code class="language-text highlighter-rouge">getwalletinfo</code>, <code class="language-text highlighter-rouge">getblockchaininfo</code> and <code class="language-text highlighter-rouge">getnetworkinfo</code> calls (will replace hodge-podge <code class="language-text highlighter-rouge">getinfo</code> at some point)</li>
    <li>Add a <code class="language-text highlighter-rouge">relayfee</code> field to <code class="language-text highlighter-rouge">getnetworkinfo</code></li>
    <li>Fix RPC related shutdown hangs and leaks</li>
    <li>Always show syncnode in <code class="language-text highlighter-rouge">getpeerinfo</code></li>
    <li><code class="language-text highlighter-rouge">sendrawtransaction</code>: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool</li>
    <li><code class="language-text highlighter-rouge">getmininginfo</code> show right genproclimit</li>
  </ul>

  <p>Command-line options:</p>

  <ul>
    <li>Fix <code class="language-text highlighter-rouge">-printblocktree</code> output</li>
    <li>Show error message if ReadConfigFile fails</li>
  </ul>

  <p>Block-chain handling and storage:</p>

  <ul>
    <li>Fix for GetBlockValue() after block 13,440,000 (BIP42)</li>
    <li>Upgrade leveldb to 1.17</li>
  </ul>

  <p>Protocol and network code:</p>

  <ul>
    <li>Per-peer block download tracking and stalled download detection</li>
    <li>Add new DNS seed from bitnodes.io</li>
    <li>Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks</li>
    <li>Use pnode-&gt;nLastRecv as sync score (was the wrong way around)</li>
  </ul>

  <p>Wallet:</p>

  <ul>
    <li>Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)</li>
    <li>Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC</li>
    <li>Fix importwallet nTimeFirstKey (trigger necessary rescans)</li>
    <li>Log BerkeleyDB version at startup</li>
    <li>CWallet init fix</li>
  </ul>

  <p>Build system:</p>

  <ul>
    <li>Add OSX build descriptors to gitian</li>
    <li>Fix explicit –disable-qt-dbus</li>
    <li>Don’t require db_cxx.h when compiling with wallet disabled and GUI enabled</li>
    <li>Improve missing boost error reporting</li>
    <li>Upgrade miniupnpc version to 1.9</li>
    <li>gitian-linux: –enable-glibc-back-compat for binary compatibility with old distributions</li>
    <li>gitian: don’t export any symbols from executable</li>
    <li>gitian: build against Qt 4.6</li>
    <li>devtools: add script to check symbols from Linux gitian executables</li>
    <li>Remove build-time no-IPv6 setting</li>
  </ul>

  <p>GUI:</p>

  <ul>
    <li>Fix various coin control visual issues</li>
    <li>Show number of in/out connections in debug console</li>
    <li>Show weeks as well as years behind for long timespans behind</li>
    <li>Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.</li>
    <li>Show also value for options overridden on command line in options dialog</li>
    <li>Fill in label from address book also for URIs</li>
    <li>Fixes feel when resizing the last column on tables (issue #2862)</li>
    <li>Fix ESC in disablewallet mode</li>
    <li>Add expert section to wallet tab in optionsdialog</li>
    <li>Do proper boost::path conversion (fixes unicode in datadir)</li>
    <li>Only override -datadir if different from the default (fixes -datadir in config file)</li>
    <li>Show rescan progress at start-up</li>
    <li>Show importwallet progress</li>
    <li>Get required locks upfront in polling functions (avoids hanging on locks)</li>
    <li>Catch Windows shutdown events while client is running</li>
    <li>Optionally add third party links to transaction context menu</li>
    <li>Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)</li>
    <li>Fix “Start bitcoin on system login”</li>
  </ul>

  <p>Miscellaneous:</p>

  <ul>
    <li>Replace non-threadsafe C functions (gmtime, strerror and setlocale)</li>
    <li>Add missing cs_main and wallet locks</li>
    <li>Avoid exception at startup when system locale not recognized</li>
    <li>Changed bitrpc.py’s raw_input to getpass for passwords to conceal characters during command line input</li>
    <li>devtools: add a script to fetch and postprocess translations</li>
  </ul>

  <h2 id="credits">Credits</h2>

  <p>Thanks to everyone who contributed to this release:</p>

  <ul>
    <li>Addy Yeow</li>
    <li>Altoidnerd</li>
    <li>Andrea D’Amore</li>
    <li>Andreas Schildbach</li>
    <li>Bardi Harborow</li>
    <li>Brandon Dahler</li>
    <li>Bryan Bishop</li>
    <li>Chris Beams</li>
    <li>Christian von Roques</li>
    <li>Cory Fields</li>
    <li>Cozz Lovan</li>
    <li>daniel</li>
    <li>Daniel Newton</li>
    <li>David A. Harding</li>
    <li>ditto-b</li>
    <li>duanemoody</li>
    <li>Eric S. Bullington</li>
    <li>Fabian Raetz</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>gubatron</li>
    <li>Haakon Nilsen</li>
    <li>harry</li>
    <li>Hector Jusforgues</li>
    <li>Isidoro Ghezzi</li>
    <li>Jeff Garzik</li>
    <li>Johnathan Corgan</li>
    <li>jtimon</li>
    <li>Kamil Domanski</li>
    <li>langerhans</li>
    <li>Luke Dashjr</li>
    <li>Manuel Araoz</li>
    <li>Mark Friedenbach</li>
    <li>Matt Corallo</li>
    <li>Matthew Bogosian</li>
    <li>Meeh</li>
    <li>Michael Ford</li>
    <li>Michagogo</li>
    <li>Mikael Wikman</li>
    <li>Mike Hearn</li>
    <li>olalonde</li>
    <li>paveljanik</li>
    <li>peryaudo</li>
    <li>Philip Kaufmann</li>
    <li>philsong</li>
    <li>Pieter Wuille</li>
    <li>R E Broadley</li>
    <li>richierichrawr</li>
    <li>Rune K. Svendsen</li>
    <li>rxl</li>
    <li>shshshsh</li>
    <li>Simon de la Rouviere</li>
    <li>Stuart Cardall</li>
    <li>super3</li>
    <li>Telepatheic</li>
    <li>Thomas Zander</li>
    <li>Torstein Husebø</li>
    <li>Warren Togami</li>
    <li>Wladimir J. van der Laan</li>
    <li>Yoichi Hirai</li>
  </ul>

</div>

]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.9.2 released</title>
            <link>https://bitcoin.org/en/release/v0.9.2</link>
            <guid>https://bitcoin.org/en/release/v0.9.2</guid>
          
            <pubDate>Mon, 16 Jun 2014 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.9.2 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/0.9.2/</del></p>

  <p>This is a new minor version release, bringing mostly bug fixes and some minor
improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).
Upgrading to this release is recommended.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="upgrading-and-downgrading">Upgrading and downgrading</h1>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

  <p>If you are upgrading from version 0.7.2 or earlier, the first time you run
0.9.2 your blockchain files will be re-indexed, which will take anywhere from 
30 minutes to several hours, depending on the speed of your machine.</p>

  <h2 id="downgrading-warnings">Downgrading warnings</h2>

  <p>The ‘chainstate’ for this release is not always compatible with previous
releases, so if you run 0.9.x and then decide to switch back to a
0.8.x release you might get a blockchain validation error when starting the
old release (due to ‘pruned outputs’ being omitted from the index of
unspent transaction outputs).</p>

  <p>Running the old release with the -reindex option will rebuild the chainstate
data structures and correct the problem.</p>

  <p>Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan
the blockchain for missing spent coins, which will take a long time (tens
of minutes on a typical machine).</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="important-changes">Important changes</h1>

  <h2 id="gitian-osx-build">Gitian OSX build</h2>

  <p>The deterministic build system that was already used for Windows and Linux
builds is now used for OSX as well. Although the resulting executables have
been tested quite a bit, there could be possible regressions. Be sure to report
these on the Github bug tracker mentioned above.</p>

  <h2 id="compatibility-of-linux-build">Compatibility of Linux build</h2>

  <p>For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.
This brings back compatibility with</p>

  <ul>
    <li>Debian 6+ / Tails</li>
    <li>Ubuntu 10.04</li>
    <li>CentOS 6.5</li>
  </ul>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes">0.9.2 Release notes</h1>

  <p>The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.</p>

  <p>RPC:</p>

  <ul>
    <li>Add <code class="language-text highlighter-rouge">getwalletinfo</code>, <code class="language-text highlighter-rouge">getblockchaininfo</code> and <code class="language-text highlighter-rouge">getnetworkinfo</code> calls (will replace hodge-podge <code class="language-text highlighter-rouge">getinfo</code> at some point)</li>
    <li>Add a <code class="language-text highlighter-rouge">relayfee</code> field to <code class="language-text highlighter-rouge">getnetworkinfo</code></li>
    <li>Fix RPC related shutdown hangs and leaks</li>
    <li>Always show syncnode in <code class="language-text highlighter-rouge">getpeerinfo</code></li>
    <li><code class="language-text highlighter-rouge">sendrawtransaction</code>: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool</li>
    <li><code class="language-text highlighter-rouge">getmininginfo</code> show right genproclimit</li>
  </ul>

  <p>Command-line options:</p>

  <ul>
    <li>Fix <code class="language-text highlighter-rouge">-printblocktree</code> output</li>
    <li>Show error message if ReadConfigFile fails</li>
  </ul>

  <p>Block-chain handling and storage:</p>

  <ul>
    <li>Fix for GetBlockValue() after block 13,440,000 (BIP42)</li>
    <li>Upgrade leveldb to 1.17</li>
  </ul>

  <p>Protocol and network code:</p>

  <ul>
    <li>Per-peer block download tracking and stalled download detection</li>
    <li>Add new DNS seed from bitnodes.io</li>
    <li>Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks</li>
    <li>Use pnode-&gt;nLastRecv as sync score (was the wrong way around)</li>
  </ul>

  <p>Wallet:</p>

  <ul>
    <li>Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)</li>
    <li>Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC</li>
    <li>Fix importwallet nTimeFirstKey (trigger necessary rescans)</li>
    <li>Log BerkeleyDB version at startup</li>
    <li>CWallet init fix</li>
  </ul>

  <p>Build system:</p>

  <ul>
    <li>Add OSX build descriptors to gitian</li>
    <li>Fix explicit –disable-qt-dbus</li>
    <li>Don’t require db_cxx.h when compiling with wallet disabled and GUI enabled</li>
    <li>Improve missing boost error reporting</li>
    <li>Upgrade miniupnpc version to 1.9</li>
    <li>gitian-linux: –enable-glibc-back-compat for binary compatibility with old distributions</li>
    <li>gitian: don’t export any symbols from executable</li>
    <li>gitian: build against Qt 4.6</li>
    <li>devtools: add script to check symbols from Linux gitian executables</li>
    <li>Remove build-time no-IPv6 setting</li>
  </ul>

  <p>GUI:</p>

  <ul>
    <li>Fix various coin control visual issues</li>
    <li>Show number of in/out connections in debug console</li>
    <li>Show weeks as well as years behind for long timespans behind</li>
    <li>Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.</li>
    <li>Show also value for options overridden on command line in options dialog</li>
    <li>Fill in label from address book also for URIs</li>
    <li>Fixes feel when resizing the last column on tables (issue #2862)</li>
    <li>Fix ESC in disablewallet mode</li>
    <li>Add expert section to wallet tab in optionsdialog</li>
    <li>Do proper boost::path conversion (fixes unicode in datadir)</li>
    <li>Only override -datadir if different from the default (fixes -datadir in config file)</li>
    <li>Show rescan progress at start-up</li>
    <li>Show importwallet progress</li>
    <li>Get required locks upfront in polling functions (avoids hanging on locks)</li>
    <li>Catch Windows shutdown events while client is running</li>
    <li>Optionally add third party links to transaction context menu</li>
    <li>Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)</li>
    <li>Fix “Start bitcoin on system login”</li>
  </ul>

  <p>Miscellaneous:</p>

  <ul>
    <li>Replace non-threadsafe C functions (gmtime, strerror and setlocale)</li>
    <li>Add missing cs_main and wallet locks</li>
    <li>Avoid exception at startup when system locale not recognized</li>
    <li>Changed bitrpc.py’s raw_input to getpass for passwords to conceal characters during command line input</li>
    <li>devtools: add a script to fetch and postprocess translations</li>
  </ul>

  <h2 id="credits">Credits</h2>

  <p>Thanks to everyone who contributed to this release:</p>

  <ul>
    <li>Addy Yeow</li>
    <li>Altoidnerd</li>
    <li>Andrea D’Amore</li>
    <li>Andreas Schildbach</li>
    <li>Bardi Harborow</li>
    <li>Brandon Dahler</li>
    <li>Bryan Bishop</li>
    <li>Chris Beams</li>
    <li>Christian von Roques</li>
    <li>Cory Fields</li>
    <li>Cozz Lovan</li>
    <li>daniel</li>
    <li>Daniel Newton</li>
    <li>David A. Harding</li>
    <li>ditto-b</li>
    <li>duanemoody</li>
    <li>Eric S. Bullington</li>
    <li>Fabian Raetz</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>gubatron</li>
    <li>Haakon Nilsen</li>
    <li>harry</li>
    <li>Hector Jusforgues</li>
    <li>Isidoro Ghezzi</li>
    <li>Jeff Garzik</li>
    <li>Johnathan Corgan</li>
    <li>jtimon</li>
    <li>Kamil Domanski</li>
    <li>langerhans</li>
    <li>Luke Dashjr</li>
    <li>Manuel Araoz</li>
    <li>Mark Friedenbach</li>
    <li>Matt Corallo</li>
    <li>Matthew Bogosian</li>
    <li>Meeh</li>
    <li>Michael Ford</li>
    <li>Michagogo</li>
    <li>Mikael Wikman</li>
    <li>Mike Hearn</li>
    <li>olalonde</li>
    <li>paveljanik</li>
    <li>peryaudo</li>
    <li>Philip Kaufmann</li>
    <li>philsong</li>
    <li>Pieter Wuille</li>
    <li>R E Broadley</li>
    <li>richierichrawr</li>
    <li>Rune K. Svendsen</li>
    <li>rxl</li>
    <li>shshshsh</li>
    <li>Simon de la Rouviere</li>
    <li>Stuart Cardall</li>
    <li>super3</li>
    <li>Telepatheic</li>
    <li>Thomas Zander</li>
    <li>Torstein Husebø</li>
    <li>Warren Togami</li>
    <li>Wladimir J. van der Laan</li>
    <li>Yoichi Hirai</li>
  </ul>

</div>

]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.9.1 released</title>
            <link>https://bitcoin.org/en/release/v0.9.1</link>
            <guid>https://bitcoin.org/en/release/v0.9.1</guid>
          
            <pubDate>Tue, 08 Apr 2014 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin Core version 0.9.1 is <em>not available for security reasons</em>:</p>

<p><del>https://bitcoin.org/bin/0.9.1/</del></p>

<p>This is a security update. It is recommended to upgrade to this release
as soon as possible.</p>

<p>It is especially important to upgrade if you currently have version
0.9.0 installed and are using the graphical interface OR you are using
bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and
have configured allowip to allow rpc connections from potentially
hostile hosts.</p>

<p>Please report bugs using the issue tracker at github:</p>

<p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).</p>

<p>If you are upgrading from version 0.7.2 or earlier, the first time you run
0.9.1 your blockchain files will be re-indexed, which will take anywhere from 
30 minutes to several hours, depending on the speed of your machine.</p>

<h2 id="091-release-notes">0.9.1 Release notes</h2>

<p>No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.</p>

<ul>
  <li>
    <p>Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can
affect the Bitcoin Core software:</p>

    <ul>
      <li>
        <p>CVE-2014-0160 (“heartbleed”)
A missing bounds check in the handling of the TLS heartbeat extension can
be used to reveal up to 64k of memory to a connected client or server.</p>
      </li>
      <li>
        <p>CVE-2014-0076
The Montgomery ladder implementation in OpenSSL does not ensure that
certain swap operations have a constant-time behavior, which makes it
easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache
side-channel attack.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Add statically built executables to Linux build</p>
  </li>
</ul>

<h2 id="credits">Credits</h2>

<p>Credits go to the OpenSSL team for fixing the vulnerabilities quickly.</p>

]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin Core version 0.9.0 released</title>
            <link>https://bitcoin.org/en/release/v0.9.0</link>
            <guid>https://bitcoin.org/en/release/v0.9.0</guid>
          
            <pubDate>Wed, 19 Mar 2014 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin Core version 0.9.0 is <em>not available for security reasons</em>:</p>

  <p><del>https://bitcoin.org/bin/0.9.0/</del></p>

  <p>This is a new major version release, bringing both new features and
bug fixes.</p>

  <p>Please report bugs using the issue tracker at github:</p>

  <p><a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), uninstall all
earlier versions of Bitcoin, then run the installer (on Windows) or just copy
over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

  <p>If you are upgrading from version 0.7.2 or earlier, the first time you run
0.9.0 your blockchain files will be re-indexed, which will take anywhere from 
30 minutes to several hours, depending on the speed of your machine.</p>

  <p>On Windows, do not forget to uninstall all earlier versions of the Bitcoin
client first, especially if you are switching to the 64-bit version.</p>

  <h2 id="windows-64-bit-installer">Windows 64-bit installer</h2>

  <p>New in 0.9.0 is the Windows 64-bit version of the client. There have been
frequent reports of users running out of virtual memory on 32-bit systems
during the initial sync. Because of this it is recommended to install the
64-bit version if your system supports it.</p>

  <p>NOTE: Release candidate 2 Windows binaries are not code-signed; use PGP
and the SHA256SUMS.asc file to make sure your binaries are correct.
In the final 0.9.0 release, Windows setup.exe binaries will be code-signed.</p>

  <h2 id="osx-105--32-bit-no-longer-supported">OSX 10.5 / 32-bit no longer supported</h2>

  <p>0.9.0 drops support for older Macs. The minimum requirements are now:</p>

  <ul>
    <li>A 64-bit-capable CPU (see <a href="http://support.apple.com/kb/ht3696">http://support.apple.com/kb/ht3696</a>);</li>
    <li>Mac OS 10.6 or later (see <a href="https://support.apple.com/kb/ht1633">https://support.apple.com/kb/ht1633</a>).</li>
  </ul>

  <h2 id="downgrading-warnings">Downgrading warnings</h2>

  <p>The ‘chainstate’ for this release is not always compatible with previous
releases, so if you run 0.9 and then decide to switch back to a
0.8.x release you might get a blockchain validation error when starting the
old release (due to ‘pruned outputs’ being omitted from the index of
unspent transaction outputs).</p>

  <p>Running the old release with the -reindex option will rebuild the chainstate
data structures and correct the problem.</p>

  <p>Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan
the blockchain for missing spent coins, which will take a long time (tens
of minutes on a typical machine).</p>

  <h2 id="rebranding-to-bitcoin-core">Rebranding to Bitcoin Core</h2>

  <p>To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we
have renamed the reference client to Bitcoin Core.</p>

  <h2 id="opreturn-and-data-in-the-block-chain">OP_RETURN and data in the block chain</h2>
  <p>On OP_RETURN:  There was been some confusion and misunderstanding in
the community, regarding the OP_RETURN feature in 0.9 and data in the
blockchain.  This change is not an endorsement of storing data in the
blockchain.  The OP_RETURN change creates a provably-prunable output,
to avoid data storage schemes – some of which were already deployed –
that were storing arbitrary data such as images as forever-unspendable
TX outputs, bloating bitcoin’s UTXO database.</p>

  <p>Storing arbitrary data in the blockchain is still a bad idea; it is less
costly and far more efficient to store non-currency data elsewhere.</p>

  <h2 id="autotools-build-system">Autotools build system</h2>

  <p>For 0.9.0 we switched to an autotools-based build system instead of individual
(q)makefiles.</p>

  <p>Using the standard “./autogen.sh; ./configure; make” to build Bitcoin-Qt and
bitcoind makes it easier for experienced open source developers to contribute 
to the project.</p>

  <p>Be sure to check doc/build-*.md for your platform before building from source.</p>

  <h2 id="bitcoin-cli">Bitcoin-cli</h2>

  <p>Another change in the 0.9 release is moving away from the bitcoind executable
functioning both as a server and as a RPC client. The RPC client functionality
(“tell the running bitcoin daemon to do THIS”) was split into a separate
executable, ‘bitcoin-cli’. The RPC client code will eventually be removed from
bitcoind, but will be kept for backwards compatibility for a release or two.</p>

  <h2 id="walletpassphrase-rpc"><code class="language-text highlighter-rouge">walletpassphrase</code> RPC</h2>

  <p>The behavior of the <code class="language-text highlighter-rouge">walletpassphrase</code> RPC when the wallet is already unlocked
has changed between 0.8 and 0.9.</p>

  <p>The 0.8 behavior of <code class="language-text highlighter-rouge">walletpassphrase</code> is to fail when the wallet is already unlocked:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; walletpassphrase 1000
walletunlocktime = now + 1000
&gt; walletpassphrase 10
Error: Wallet is already unlocked (old unlock time stays)
</code></pre></div>  </div>

  <p>The new behavior of <code class="language-text highlighter-rouge">walletpassphrase</code> is to set a new unlock time overriding
the old one:</p>

  <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; walletpassphrase 1000
walletunlocktime = now + 1000
&gt; walletpassphrase 10
walletunlocktime = now + 10 (overriding the old unlock time)
</code></pre></div>  </div>

  <h2 id="transaction-malleability-related-fixes">Transaction malleability-related fixes</h2>

  <p>This release contains a few fixes for transaction ID (TXID) malleability 
issues:</p>

  <ul>
    <li>-nospendzeroconfchange command-line option, to avoid spending
zero-confirmation change</li>
    <li>IsStandard() transaction rules tightened to prevent relaying and mining of
mutated transactions</li>
    <li>Additional information in listtransactions/gettransaction output to
report wallet transactions that conflict with each other because
they spend the same outputs.</li>
    <li>Bug fixes to the getbalance/listaccounts RPC commands, which would report
incorrect balances for double-spent (or mutated) transactions.</li>
    <li>New option: -zapwallettxes to rebuild the wallet’s transaction information</li>
  </ul>

  <h2 id="transaction-fees">Transaction Fees</h2>

  <p>This release drops the default fee required to relay transactions across the
network and for miners to consider the transaction in their blocks to
0.01mBTC per kilobyte.</p>

  <p>Note that getting a transaction relayed across the network does NOT guarantee
that the transaction will be accepted by a miner; by default, miners fill
their blocks with 50 kilobytes of high-priority transactions, and then with
700 kilobytes of the highest-fee-per-kilobyte transactions.</p>

  <p>The minimum relay/mining fee-per-kilobyte may be changed with the
minrelaytxfee option. Note that previous releases incorrectly used
the mintxfee setting to determine which low-priority transactions should
be considered for inclusion in blocks.</p>

  <p>The wallet code still uses a default fee for low-priority transactions of
0.1mBTC per kilobyte. During periods of heavy transaction volume, even this
fee may not be enough to get transactions confirmed quickly; the mintxfee
option may be used to override the default.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes">0.9.0 Release notes</h1>

  <p>RPC:</p>

  <ul>
    <li>New notion of ‘conflicted’ transactions, reported as confirmations: -1</li>
    <li><code class="language-text highlighter-rouge">listreceivedbyaddress</code> now provides tx ids</li>
    <li>Add raw transaction hex to <code class="language-text highlighter-rouge">gettransaction</code> output</li>
    <li>Updated help and tests for <code class="language-text highlighter-rouge">getreceivedby(account|address)</code></li>
    <li>In <code class="language-text highlighter-rouge">getblock</code>, accept 2nd <code class="language-text highlighter-rouge">verbose</code> parameter, similar to getrawtransaction,
but defaulting to 1 for backward compatibility</li>
    <li>Add <code class="language-text highlighter-rouge">verifychain</code>, to verify chain database at runtime</li>
    <li>Add <code class="language-text highlighter-rouge">dumpwallet</code> and <code class="language-text highlighter-rouge">importwallet</code> RPCs</li>
    <li><code class="language-text highlighter-rouge">keypoolrefill</code> gains optional size parameter</li>
    <li>Add <code class="language-text highlighter-rouge">getbestblockhash</code>, to return tip of best chain</li>
    <li>Add <code class="language-text highlighter-rouge">chainwork</code> (the total work done by all blocks since the genesis block)
to <code class="language-text highlighter-rouge">getblock</code> output</li>
    <li>Make RPC password resistant to timing attacks</li>
    <li>Clarify help messages and add examples</li>
    <li>Add <code class="language-text highlighter-rouge">getrawchangeaddress</code> call for raw transaction change destinations</li>
    <li>Reject insanely high fees by default in <code class="language-text highlighter-rouge">sendrawtransaction</code></li>
    <li>Add RPC call <code class="language-text highlighter-rouge">decodescript</code> to decode a hex-encoded transaction script</li>
    <li>Make <code class="language-text highlighter-rouge">validateaddress</code> provide redeemScript</li>
    <li>Add <code class="language-text highlighter-rouge">getnetworkhashps</code> to get the calculated network hashrate</li>
    <li>New RPC <code class="language-text highlighter-rouge">ping</code> command to request ping, new <code class="language-text highlighter-rouge">pingtime</code> and <code class="language-text highlighter-rouge">pingwait</code> fields
in <code class="language-text highlighter-rouge">getpeerinfo</code> output</li>
    <li>Adding new <code class="language-text highlighter-rouge">addrlocal</code> field to <code class="language-text highlighter-rouge">getpeerinfo</code> output</li>
    <li>Add verbose boolean to <code class="language-text highlighter-rouge">getrawmempool</code></li>
    <li>Add rpc command <code class="language-text highlighter-rouge">getunconfirmedbalance</code> to obtain total unconfirmed balance</li>
    <li>Explicitly ensure that wallet is unlocked in <code class="language-text highlighter-rouge">importprivkey</code></li>
    <li>Add check for valid keys in <code class="language-text highlighter-rouge">importprivkey</code></li>
  </ul>

  <p>Command-line options:</p>

  <ul>
    <li>New option: -nospendzeroconfchange to never spend unconfirmed change outputs</li>
    <li>New option: -zapwallettxes to rebuild the wallet’s transaction information</li>
    <li>Rename option <code class="language-text highlighter-rouge">-tor</code> to <code class="language-text highlighter-rouge">-onion</code> to better reflect what it does</li>
    <li>Add <code class="language-text highlighter-rouge">-disablewallet</code> mode to let bitcoind run entirely without wallet (when
built with wallet)</li>
    <li>Update default <code class="language-text highlighter-rouge">-rpcsslciphers</code> to include TLSv1.2</li>
    <li>make <code class="language-text highlighter-rouge">-logtimestamps</code> default on and rework help-message</li>
    <li>RPC client option: <code class="language-text highlighter-rouge">-rpcwait</code>, to wait for server start</li>
    <li>Remove <code class="language-text highlighter-rouge">-logtodebugger</code></li>
    <li>Allow <code class="language-text highlighter-rouge">-noserver</code> with bitcoind</li>
  </ul>

  <p>Block-chain handling and storage:</p>

  <ul>
    <li>Update leveldb to 1.15</li>
    <li>Check for correct genesis (prevent cases where a datadir from the wrong
network is accidentally loaded)</li>
    <li>Allow txindex to be removed and add a reindex dialog</li>
    <li>Log aborted block database rebuilds</li>
    <li>Store orphan blocks in serialized form, to save memory</li>
    <li>Limit the number of orphan blocks in memory to 750</li>
    <li>Fix non-standard disconnected transactions causing mempool orphans</li>
    <li>Add a new checkpoint at block 279,000</li>
  </ul>

  <p>Wallet:</p>

  <ul>
    <li>Bug fixes and new regression tests to correctly compute
the balance of wallets containing double-spent (or mutated) transactions</li>
    <li>Store key creation time. Calculate whole-wallet birthday.</li>
    <li>Optimize rescan to skip blocks prior to birthday</li>
    <li>Let user select wallet file with -wallet=foo.dat</li>
    <li>Consider generated coins mature at 101 instead of 120 blocks</li>
    <li>Improve wallet load time</li>
    <li>Don’t count txins for priority to encourage sweeping</li>
    <li>Don’t create empty transactions when reading a corrupted wallet</li>
    <li>Fix rescan to start from beginning after importprivkey</li>
    <li>Only create signatures with low S values</li>
  </ul>

  <p>Mining:</p>

  <ul>
    <li>Increase default -blockmaxsize/prioritysize to 750K/50K</li>
    <li><code class="language-text highlighter-rouge">getblocktemplate</code> does not require a key to create a block template</li>
    <li>Mining code fee policy now matches relay fee policy</li>
  </ul>

  <p>Protocol and network:</p>

  <ul>
    <li>Drop the fee required to relay a transaction to 0.01mBTC per kilobyte</li>
    <li>Send tx relay flag with version</li>
    <li>New <code class="language-text highlighter-rouge">reject</code> P2P message (BIP 0061, see
<a href="https://gist.github.com/gavinandresen/7079034">https://gist.github.com/gavinandresen/7079034</a> for draft)</li>
    <li>Dump addresses every 15 minutes instead of 10 seconds</li>
    <li>Relay OP_RETURN data TxOut as standard transaction type</li>
    <li>Remove CENT-output free transaction rule when relaying</li>
    <li>Lower maximum size for free transaction creation</li>
    <li>Send multiple inv messages if mempool.size &gt; MAX_INV_SZ</li>
    <li>Split MIN_PROTO_VERSION into INIT_PROTO_VERSION and MIN_PEER_PROTO_VERSION</li>
    <li>Do not treat fFromMe transaction differently when broadcasting</li>
    <li>Process received messages one at a time without sleeping between messages</li>
    <li>Improve logging of failed connections</li>
    <li>Bump protocol version to 70002</li>
    <li>Add some additional logging to give extra network insight</li>
    <li>Added new DNS seed from bitcoinstats.com</li>
  </ul>

  <p>Validation:</p>

  <ul>
    <li>Log reason for non-standard transaction rejection</li>
    <li>Prune provably-unspendable outputs, and adapt consistency check for it.</li>
    <li>Detect any sufficiently long fork and add a warning</li>
    <li>Call the -alertnotify script when we see a long or invalid fork</li>
    <li>Fix multi-block reorg transaction resurrection</li>
    <li>Reject non-canonically-encoded serialization sizes</li>
    <li>Reject dust amounts during validation</li>
    <li>Accept nLockTime transactions that finalize in the next block</li>
  </ul>

  <p>Build system:</p>

  <ul>
    <li>Switch to autotools-based build system</li>
    <li>Build without wallet by passing <code class="language-text highlighter-rouge">--disable-wallet</code> to configure, this 
removes the BerkeleyDB dependency</li>
    <li>Upgrade gitian dependencies (libpng, libz, libupnpc, boost, openssl) to more
recent versions</li>
    <li>Windows 64-bit build support</li>
    <li>Solaris compatibility fixes</li>
    <li>Check integrity of gitian input source tarballs</li>
    <li>Enable full GCC Stack-smashing protection for all OSes</li>
  </ul>

  <p>GUI:</p>

  <ul>
    <li>Switch to Qt 5.2.0 for Windows build</li>
    <li>Add payment request (BIP 0070) support</li>
    <li>Improve options dialog</li>
    <li>Show transaction fee in new send confirmation dialog</li>
    <li>Add total balance in overview page</li>
    <li>Allow user to choose data directory on first start, when data directory is
missing, or when the -choosedatadir option is passed</li>
    <li>Save and restore window positions</li>
    <li>Add vout index to transaction id in transactions details dialog</li>
    <li>Add network traffic graph in debug window</li>
    <li>Add open URI dialog</li>
    <li>Add Coin Control Features</li>
    <li>Improve receive coins workflow: make the ‘Receive’ tab into a form to request
payments, and move historical address list functionality to File menu.</li>
    <li>Rebrand to <code class="language-text highlighter-rouge">Bitcoin Core</code></li>
    <li>Move initialization/shutdown to a thread. This prevents “Not responding”
messages during startup. Also show a window during shutdown.</li>
    <li>Don’t regenerate autostart link on every client startup</li>
    <li>Show and store message of normal bitcoin:URI</li>
    <li>Fix richtext detection hang issue on very old Qt versions</li>
    <li>OS X: Make use of the 10.8+ user notification center to display Growl-like 
notifications</li>
    <li>OS X: Added NSHighResolutionCapable flag to Info.plist for better font
rendering on Retina displays.</li>
    <li>OS X: Fix bitcoin-qt startup crash when clicking dock icon</li>
    <li>Linux: Fix Gnome bitcoin: URI handler</li>
  </ul>

  <p>Miscellaneous:</p>

  <ul>
    <li>Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth</li>
    <li>Add <code class="language-text highlighter-rouge">-regtest</code> mode, similar to testnet but private with instant block
generation with <code class="language-text highlighter-rouge">setgenerate</code> RPC.</li>
    <li>Add <code class="language-text highlighter-rouge">linearize.py</code> script to contrib, for creating bootstrap.dat</li>
    <li>Add separate bitcoin-cli client</li>
  </ul>

  <h2 id="credits">Credits</h2>

  <p>Thanks to everyone who contributed to this release:</p>

  <ul>
    <li>Andrey</li>
    <li>Ashley Holman</li>
    <li>b6393ce9-d324-4fe1-996b-acf82dbc3d53</li>
    <li>bitsofproof</li>
    <li>Brandon Dahler</li>
    <li>Calvin Tam</li>
    <li>Christian Decker</li>
    <li>Christian von Roques</li>
    <li>Christopher Latham</li>
    <li>Chuck</li>
    <li>coblee</li>
    <li>constantined</li>
    <li>Cory Fields</li>
    <li>Cozz Lovan</li>
    <li>daniel</li>
    <li>Daniel Larimer</li>
    <li>David Hill</li>
    <li>Dmitry Smirnov</li>
    <li>Drak</li>
    <li>Eric Lombrozo</li>
    <li>fanquake</li>
    <li>fcicq</li>
    <li>Florin</li>
    <li>frewil</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>gubatron</li>
    <li>Guillermo Céspedes Tabárez</li>
    <li>Haakon Nilsen</li>
    <li>HaltingState</li>
    <li>Han Lin Yap</li>
    <li>harry</li>
    <li>Ian Kelling</li>
    <li>Jeff Garzik</li>
    <li>Johnathan Corgan</li>
    <li>Jonas Schnelli</li>
    <li>Josh Lehan</li>
    <li>Josh Triplett</li>
    <li>Julian Langschaedel</li>
    <li>Kangmo</li>
    <li>Lake Denman</li>
    <li>Luke Dashjr</li>
    <li>Mark Friedenbach</li>
    <li>Matt Corallo</li>
    <li>Michael Bauer</li>
    <li>Michael Ford</li>
    <li>Michagogo</li>
    <li>Midnight Magic</li>
    <li>Mike Hearn</li>
    <li>Nils Schneider</li>
    <li>Noel Tiernan</li>
    <li>Olivier Langlois</li>
    <li>patrick s</li>
    <li>Patrick Strateman</li>
    <li>paveljanik</li>
    <li>Peter Todd</li>
    <li>phantomcircuit</li>
    <li>phelixbtc</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>Rav3nPL</li>
    <li>R E Broadley</li>
    <li>regergregregerrge</li>
    <li>Robert Backhaus</li>
    <li>Roman Mindalev</li>
    <li>Rune K. Svendsen</li>
    <li>Ryan Niebur</li>
    <li>Scott Ellis</li>
    <li>Scott Willeke</li>
    <li>Sergey Kazenyuk</li>
    <li>Shawn Wilkinson</li>
    <li>Sined</li>
    <li>sje</li>
    <li>Subo1978</li>
    <li>super3</li>
    <li>Tamas Blummer</li>
    <li>theuni</li>
    <li>Thomas Holenstein</li>
    <li>Timon Rapp</li>
    <li>Timothy Stranex</li>
    <li>Tom Geller</li>
    <li>Torstein Husebø</li>
    <li>Vaclav Vobornik</li>
    <li>vhf / victor felder</li>
    <li>Vinnie Falco</li>
    <li>Warren Togami</li>
    <li>Wil Bown</li>
    <li>Wladimir J. van der Laan</li>
  </ul>
</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.6 released</title>
            <link>https://bitcoin.org/en/release/v0.8.6</link>
            <guid>https://bitcoin.org/en/release/v0.8.6</guid>
          
            <pubDate>Mon, 09 Dec 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.8.6 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/</a></p>

<p>This is a maintenance release to fix a critical bug;
we urge all users to upgrade.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.6 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.</p>

<h1 id="086-release-notes">0.8.6 Release notes</h1>

<ul>
  <li>
    <p>Default block size increase for miners.
(see <a href="https://gist.github.com/gavinandresen/7670433#086-accept-into-block">https://gist.github.com/gavinandresen/7670433#086-accept-into-block</a>)</p>
  </li>
  <li>
    <p>Remove the all-outputs-must-be-greater-than-CENT-to-qualify-as-free rule for relaying
(see <a href="https://gist.github.com/gavinandresen/7670433#086-relaying">https://gist.github.com/gavinandresen/7670433#086-relaying</a>)</p>
  </li>
  <li>
    <p>Lower maximum size for free transaction creation
(see <a href="https://gist.github.com/gavinandresen/7670433#086-wallet">https://gist.github.com/gavinandresen/7670433#086-wallet</a>)</p>
  </li>
  <li>OSX block chain database corruption fixes
    <ul>
      <li>Update leveldb to 1.13</li>
      <li>Use fcntl with <code class="language-text highlighter-rouge">F_FULLSYNC</code> instead of fsync on OSX</li>
      <li>Use native Darwin memory barriers</li>
      <li>Replace use of mmap in leveldb for improved reliability (only on OSX)</li>
    </ul>
  </li>
  <li>
    <p>Fix nodes forwarding transactions with empty vins and getting banned</p>
  </li>
  <li>
    <p>Network code performance and robustness improvements</p>
  </li>
  <li>
    <p>Additional debug.log logging for diagnosis of network problems, log timestamps by default</p>
  </li>
  <li>
    <p>Fix Bitcoin-Qt startup crash when clicking dock icon on OSX</p>
  </li>
  <li>
    <p>Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()</p>
  </li>
  <li>
    <p>Fix rare GUI crash on send</p>
  </li>
  <li>Various small GUI, documentation and build fixes</li>
</ul>

<h2 id="warning">Warning</h2>

<ul>
  <li>There have been frequent reports of users running out of virtual memory on 32-bit systems
during the initial sync.
Hence it is recommended to use a 64-bit executable if possible.
A 64-bit executable for Windows is planned for 0.9.</li>
</ul>

]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.5 released</title>
            <link>https://bitcoin.org/en/release/v0.8.5</link>
            <guid>https://bitcoin.org/en/release/v0.8.5</guid>
          
            <pubDate>Fri, 13 Sep 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.8.5 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/</a></p>

<p>This is a maintenance release to fix a critical bug;
we urge all users to upgrade.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.5 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.</p>

<h1 id="085-release-notes">0.8.5 Release notes</h1>

<h2 id="bugs-fixed">Bugs fixed</h2>

<p>Transactions with version numbers larger than 0x7fffffff were
incorrectly being relayed and included in blocks.</p>

<p>Blocks containing transactions with version numbers larger
than 0x7fffffff caused the code that checks for LevelDB database
inconsistencies at startup to erroneously report database
corruption and suggest that you reindex your database.</p>

<p>This release also contains a non-critical fix to the code that
enforces BIP 34 (block height in the coinbase transaction).</p>

<p>–</p>

<p>Thanks to Gregory Maxwell and Pieter Wuille for quickly
identifying and fixing the transaction version number bug.</p>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.4 released</title>
            <link>https://bitcoin.org/en/release/v0.8.4</link>
            <guid>https://bitcoin.org/en/release/v0.8.4</guid>
          
            <pubDate>Tue, 03 Sep 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.8.4 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/</a></p>

<p>This is a maintenance release to fix a critical bug and three
security issues; we urge all users to upgrade.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.4 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.</p>

<h1 id="084-release-notes">0.8.4 Release notes</h1>

<h2 id="security-issues">Security issues</h2>

<p>An attacker could send a series of messages that resulted in
an integer division-by-zero error in the Bloom Filter handling
code, causing the Bitcoin-Qt or bitcoind process to crash.
Bloom filters were introduced with version 0.8, so versions 0.8.0
through 0.8.3 are vulnerable to this critical denial-of-service attack.</p>

<p>A constant-time algorithm is now used to check RPC password
guess attempts; fixes <a href="https://github.com/bitcoin/bitcoin/issues/2838">https://github.com/bitcoin/bitcoin/issues/2838</a>
(CVE-2013-4165)</p>

<p>Implement a better fix for the fill-memory-with-orphan-transactions
attack that was fixed in 0.8.3. See
<a href="https://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/">https://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/</a>
for a description of the weaknesses of the previous fix.
(CVE-2013-4627)</p>

<h2 id="bugs-fixed">Bugs fixed</h2>

<p>Fix multi-block reorg transaction resurrection.</p>

<p>Fix non-standard disconnected transactions causing mempool orphans.
This bug could cause nodes running with the -debug flag to crash.</p>

<p>OSX: use <code class="language-text highlighter-rouge">FD_FULLSYNC</code> with LevelDB, which will (hopefully!)
prevent the database corruption issues many people have
experienced on OSX.</p>

<p>Linux: clicking on bitcoin: links was broken if you were using
a Gnome-based desktop.</p>

<p>Fix a hang-at-shutdown bug that only affects users that compile
their own version of Bitcoin against Boost versions 1.50-1.52.</p>

<h2 id="other-changes">Other changes</h2>

<p>Checkpoint at block 250,000 to speed up initial block downloads
and make the progress indicator when downloading more accurate.</p>

<h2 id="thanks-to-everybody-who-contributed-to-the-084-releases">Thanks to everybody who contributed to the 0.8.4 releases!</h2>

<ul>
  <li>Pieter Wuille</li>
  <li>Warren Togami</li>
  <li>Patrick Strateman</li>
  <li>pakt</li>
  <li>Gregory Maxwell</li>
  <li>Sergio Demian Lerner</li>
  <li>grayleonard</li>
  <li>Cory Fields</li>
  <li>Matt Corallo</li>
  <li>Gavin Andresen</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.3 released</title>
            <link>https://bitcoin.org/en/release/v0.8.3</link>
            <guid>https://bitcoin.org/en/release/v0.8.3</guid>
          
            <pubDate>Tue, 25 Jun 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin-Qt version 0.8.3 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/</a></p>

  <p>This is a maintenance release to fix a denial-of-service attack that
can cause nodes to crash.</p>

  <p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

  <p>If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.3 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes">0.8.3 Release notes</h1>

  <p>Truncate over-size messages to prevent a memory exhaustion attack.</p>

  <p>Fix a regression that causes excessive re-writing of the <code class="language-text highlighter-rouge">peers.dat</code> file.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes-1">0.8.2 Release notes</h1>

  <h2 id="fee-policy-changes">Fee Policy changes</h2>

  <p>The default fee for low-priority transactions is lowered from 0.0005 BTC 
(for each 1,000 bytes in the transaction; an average transaction is
about 500 bytes) to 0.0001 BTC.</p>

  <p>Payments (transaction outputs) of 0.543 times the minimum relay fee
(0.00005430 BTC) are now considered ‘non-standard’, because storing them
costs the network more than they are worth and spending them will usually
cost their owner more in transaction fees than they are worth.</p>

  <p>Non-standard transactions are not relayed across the network, are not included
in blocks by most miners, and will not show up in your wallet until they are
included in a block.</p>

  <p>The default fee policy can be overridden using the -mintxfee and -minrelaytxfee
command-line options, but note that we intend to replace the hard-coded fees
with code that automatically calculates and suggests appropriate fees in the
0.9 release and note that if you set a fee policy significantly different from
the rest of the network your transactions may never confirm.</p>

  <h2 id="bitcoin-qt-changes">Bitcoin-Qt changes</h2>

  <ul>
    <li>New icon and splash screen</li>
    <li>Improve reporting of synchronization process</li>
    <li>Remove hardcoded fee recommendations</li>
    <li>Improve metadata of executable on MacOSX and Windows</li>
    <li>Move export button to individual tabs instead of toolbar</li>
    <li>Add “send coins” command to context menu in address book</li>
    <li>Add “copy txid” command to copy transaction IDs from transaction overview</li>
    <li>Save &amp; restore window size and position when showing &amp; hiding window</li>
    <li>New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy),
Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements
to current translations</li>
  </ul>

  <p>MacOSX:</p>
  <ul>
    <li>OSX support for click-to-pay (bitcoin:) links</li>
    <li>Fix GUI disappearing problem on MacOSX (issue #1522)</li>
  </ul>

  <p>Linux/Unix:</p>
  <ul>
    <li>Copy addresses to middle-mouse-button clipboard</li>
  </ul>

  <h2 id="command-line-options">Command-line options</h2>

  <ul>
    <li>-walletnotify will call a command on receiving transactions that affect the wallet.</li>
    <li>-alertnotify will call a command on receiving an alert from the network.</li>
    <li>-par now takes a negative number, to leave a certain amount of cores free.</li>
  </ul>

  <h2 id="json-rpc-api-changes">JSON-RPC API changes</h2>

  <ul>
    <li>fixed a getblocktemplate bug that caused excessive CPU creating blocks.</li>
    <li>listunspent now lists account and address infromation.</li>
    <li>getinfo now also returns the time adjustment estimated from your peers.</li>
    <li>getpeerinfo now returns bytessent, bytesrecv and syncnode.</li>
    <li>gettxoutsetinfo returns statistics about the unspent transaction output database.</li>
    <li>gettxout returns information about a specific unspent transaction output.</li>
  </ul>

  <h2 id="networking-changes">Networking changes</h2>

  <ul>
    <li>Significant changes to the networking code, reducing latency and memory consumption.</li>
    <li>Avoid initial block download stalling.</li>
    <li>Remove IRC seeding support.</li>
    <li>Performance tweaks.</li>
    <li>Added testnet DNS seeds.</li>
  </ul>

  <h2 id="wallet-compatibilityrescuing">Wallet compatibility/rescuing</h2>

  <ul>
    <li>Cases where wallets cannot be opened in another version/installation should be reduced.</li>
    <li>-salvagewallet now works for encrypted wallets.</li>
  </ul>

  <h2 id="known-bugs">Known Bugs</h2>

  <ul>
    <li>Entering the <code class="language-text highlighter-rouge">getblocktemplate</code> or <code class="language-text highlighter-rouge">getwork</code> RPC commands into the Bitcoin-Qt debug
console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line
option to workaround.</li>
  </ul>

  <h2 id="thanks-to-everybody-who-contributed-to-the-082-and-083-releases">Thanks to everybody who contributed to the 0.8.2 and 0.8.3 releases!</h2>

  <ul>
    <li>APerson241</li>
    <li>Andrew Poelstra</li>
    <li>Calvin Owens</li>
    <li>Chuck LeDuc Díaz</li>
    <li>Colin Dean</li>
    <li>David Griffith</li>
    <li>David Serrano</li>
    <li>Eric Lombrozo</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>Jeff Garzik</li>
    <li>Jonas Schnelli</li>
    <li>Larry Gilbert</li>
    <li>Luke Dashjr</li>
    <li>Matt Corallo</li>
    <li>Michael Ford</li>
    <li>Mike Hearn</li>
    <li>Patrick Brown</li>
    <li>Peter Todd</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>Richard Schwab</li>
    <li>Roman Mindalev</li>
    <li>Scott Howard</li>
    <li>Tariq Bashir</li>
    <li>Warren Togami</li>
    <li>Wladimir J. van der Laan</li>
    <li>freewil</li>
    <li>gladoscc</li>
    <li>kjj2</li>
    <li>mb300sd</li>
    <li>super3</li>
  </ul>
</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.2 released</title>
            <link>https://bitcoin.org/en/release/v0.8.2</link>
            <guid>https://bitcoin.org/en/release/v0.8.2</guid>
          
            <pubDate>Wed, 29 May 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.8.2 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/</a></p>

<p>This is a maintenance release that fixes many bugs and includes
a few small new features.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.2 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.</p>

<h1 id="082-release-notes">0.8.2 Release notes</h1>

<h2 id="fee-policy-changes">Fee Policy changes</h2>

<p>The default fee for low-priority transactions is lowered from 0.0005 BTC 
(for each 1,000 bytes in the transaction; an average transaction is
about 500 bytes) to 0.0001 BTC.</p>

<p>Payments (transaction outputs) of 0.543 times the minimum relay fee
(0.00005430 BTC) are now considered ‘non-standard’, because storing them
costs the network more than they are worth and spending them will usually
cost their owner more in transaction fees than they are worth.</p>

<p>Non-standard transactions are not relayed across the network, are not included
in blocks by most miners, and will not show up in your wallet until they are
included in a block.</p>

<p>The default fee policy can be overridden using the -mintxfee and -minrelaytxfee
command-line options, but note that we intend to replace the hard-coded fees
with code that automatically calculates and suggests appropriate fees in the
0.9 release and note that if you set a fee policy significantly different from
the rest of the network your transactions may never confirm.</p>

<h2 id="bitcoin-qt-changes">Bitcoin-Qt changes</h2>

<ul>
  <li>New icon and splash screen</li>
  <li>Improve reporting of synchronization process</li>
  <li>Remove hardcoded fee recommendations</li>
  <li>Improve metadata of executable on MacOSX and Windows</li>
  <li>Move export button to individual tabs instead of toolbar</li>
  <li>Add “send coins” command to context menu in address book</li>
  <li>Add “copy txid” command to copy transaction IDs from transaction overview</li>
  <li>Save &amp; restore window size and position when showing &amp; hiding window</li>
  <li>New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy),
Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements
to current translations</li>
</ul>

<p>MacOSX:</p>
<ul>
  <li>OSX support for click-to-pay (bitcoin:) links</li>
  <li>Fix GUI disappearing problem on MacOSX (issue #1522)</li>
</ul>

<p>Linux/Unix:</p>
<ul>
  <li>Copy addresses to middle-mouse-button clipboard</li>
</ul>

<h2 id="command-line-options">Command-line options</h2>

<ul>
  <li>-walletnotify will call a command on receiving transactions that affect the wallet.</li>
  <li>-alertnotify will call a command on receiving an alert from the network.</li>
  <li>-par now takes a negative number, to leave a certain amount of cores free.</li>
</ul>

<h2 id="json-rpc-api-changes">JSON-RPC API changes</h2>

<ul>
  <li>fixed a getblocktemplate bug that caused excessive CPU creating blocks.</li>
  <li>listunspent now lists account and address infromation.</li>
  <li>getinfo now also returns the time adjustment estimated from your peers.</li>
  <li>getpeerinfo now returns bytessent, bytesrecv and syncnode.</li>
  <li>gettxoutsetinfo returns statistics about the unspent transaction output database.</li>
  <li>gettxout returns information about a specific unspent transaction output.</li>
</ul>

<h2 id="networking-changes">Networking changes</h2>

<ul>
  <li>Significant changes to the networking code, reducing latency and memory consumption.</li>
  <li>Avoid initial block download stalling.</li>
  <li>Remove IRC seeding support.</li>
  <li>Performance tweaks.</li>
  <li>Added testnet DNS seeds.</li>
</ul>

<h2 id="wallet-compatibilityrescuing">Wallet compatibility/rescuing</h2>

<ul>
  <li>Cases where wallets cannot be opened in another version/installation should be reduced.</li>
  <li>-salvagewallet now works for encrypted wallets.</li>
</ul>

<h2 id="known-bugs">Known Bugs</h2>

<ul>
  <li>Entering the <code class="language-text highlighter-rouge">getblocktemplate</code> or <code class="language-text highlighter-rouge">getwork</code> RPC commands into the Bitcoin-Qt debug
console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line
option to workaround.</li>
</ul>

<h2 id="thanks-to-everybody-who-contributed-to-the-082-release">Thanks to everybody who contributed to the 0.8.2 release!</h2>

<ul>
  <li>APerson241</li>
  <li>Andrew Poelstra</li>
  <li>Calvin Owens</li>
  <li>Chuck LeDuc Díaz</li>
  <li>Colin Dean</li>
  <li>David Griffith</li>
  <li>David Serrano</li>
  <li>Eric Lombrozo</li>
  <li>Gavin Andresen</li>
  <li>Gregory Maxwell</li>
  <li>Jeff Garzik</li>
  <li>Jonas Schnelli</li>
  <li>Larry Gilbert</li>
  <li>Luke Dashjr</li>
  <li>Matt Corallo</li>
  <li>Michael Ford</li>
  <li>Mike Hearn</li>
  <li>Patrick Brown</li>
  <li>Peter Todd</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>Richard Schwab</li>
  <li>Roman Mindalev</li>
  <li>Scott Howard</li>
  <li>Tariq Bashir</li>
  <li>Warren Togami</li>
  <li>Wladimir J. van der Laan</li>
  <li>freewil</li>
  <li>gladoscc</li>
  <li>kjj2</li>
  <li>mb300sd</li>
  <li>super3</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.1 released</title>
            <link>https://bitcoin.org/en/release/v0.8.1</link>
            <guid>https://bitcoin.org/en/release/v0.8.1</guid>
          
            <pubDate>Mon, 18 Mar 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<div class="post-content">

  <p>Bitcoin-Qt version 0.8.1 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/</a></p>

  <p>This is a maintenance release that adds a new network rule to avoid
a chain-forking incompatibility with versions 0.7.2 and earlier.</p>

  <p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

  <h2 id="how-to-upgrade">How to Upgrade</h2>

  <p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

  <p>If you are upgrading from version 0.7.2 or earlier, the first time you
run 0.8.1 your blockchain files will be re-indexed, which will take
anywhere from 30 minutes to several hours, depending on the speed of
your machine.</p>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes">0.8.1 Release notes</h1>

  <p>The 0.8.1 release has just two changes from the 0.8.0 release:</p>

  <ol>
    <li>
      <p>A new block-acceptance rule that will be enforced from 21 March 2013 until
15 May 2013 to prevent accepting blocks that fail to validate on pre-0.8 peers.</p>
    </li>
    <li>
      <p>A new compiled-in checkpoint at block number 225,430 – the first block
of the 11 March 2013 chain fork.</p>
    </li>
  </ol>

</div>

<div class="toccontent-block boxexpand expanded">

  <h1 id="release-notes-1">0.8.0 Release notes</h1>

  <h2 id="incompatible-changes">Incompatible Changes</h2>

  <p>This release no longer maintains a full index of historical transaction ids
by default, so looking up an arbitrary transaction using the getrawtransaction
RPC call will not work. If you need that functionality, you must run once
with -txindex=1 -reindex=1 to rebuild block-chain indices (see below for more
details).</p>

  <h2 id="improvements">Improvements</h2>

  <p>Mac and Windows binaries are signed with certificates owned by the Bitcoin
Foundation, to be compatible with the new security features in OSX 10.8 and
Windows 8.</p>

  <p>LevelDB, a fast, open-source, non-relational database from Google, is
now used to store transaction and block indices.  LevelDB works much better
on machines with slow I/O and is faster in general. Berkeley DB is now only
used for the wallet.dat file (public and private wallet keys and transactions
relevant to you).</p>

  <p>Pieter Wuille implemented many optimizations to the way transactions are
verified, so a running, synchronized node uses less working memory and does
much less I/O. He also implemented parallel signature checking, so if you
have a multi-CPU machine all CPUs will be used to verify transactions.</p>

  <h2 id="new-features">New Features</h2>

  <p>“Bloom filter” support in the network protocol for sending only relevant transactions to
lightweight clients.</p>

  <p>contrib/verifysfbinaries is a shell-script to verify that the binary downloads
at sourceforge have not been tampered with. If you are able, you can help make
everybody’s downloads more secure by running this occasionally to check PGP
signatures against download file checksums.</p>

  <p>contrib/spendfrom is a python-language command-line utility that demonstrates
how to use the “raw transactions” JSON-RPC api to send coins received from particular
addresses (also known as “coin control”).</p>

  <h2 id="newchanged-settings-command-line-or-bitcoinconf-file">New/changed settings (command-line or bitcoin.conf file)</h2>

  <p>dbcache : controls LevelDB memory usage.</p>

  <p>par : controls how many threads to use to validate transactions. Defaults to the number
of CPUs on your machine, use -par=1 to limit to a single CPU.</p>

  <p>txindex : maintains an extra index of old, spent transaction ids so they will be found
by the getrawtransaction JSON-RPC method.</p>

  <p>reindex : rebuild block and transaction indices from the downloaded block data.</p>

  <h2 id="new-json-rpc-api-features">New JSON-RPC API Features</h2>

  <p>lockunspent / listlockunspent allow locking transaction outputs for a period of time so
they will not be spent by other processes that might be accessing the same wallet.</p>

  <p>addnode / getaddednodeinfo methods, to connect to specific peers without restarting.</p>

  <p>importprivkey now takes an optional boolean parameter (default true) to control whether
or not to rescan the blockchain for transactions after importing a new private key.</p>

  <h2 id="important-bug-fixes">Important Bug Fixes</h2>

  <p>Privacy leak: the position of the “change” output in most transactions was not being
properly randomized, making network analysis of the transaction graph to identify
users’ wallets easier.</p>

  <p>Zero-confirmation transaction vulnerability: accepting zero-confirmation transactions
(transactions that have not yet been included in a block) from somebody you do not
trust is still not recommended, because there will always be ways for attackers to
double-spend zero-confirmation transactions. However, this release includes a bug
fix that makes it a little bit more difficult for attackers to double-spend a
certain type (“lockTime in the future”) of zero-confirmation transaction.</p>

  <h2 id="dependency-changes">Dependency Changes</h2>

  <p>Qt 4.8.3 (compiling against older versions of Qt 4 should continue to work)</p>

  <h2 id="thanks-to-everybody-who-contributed-to-the-080-release">Thanks to everybody who contributed to the 0.8.0 release:</h2>

  <ul>
    <li>Alexander Kjeldaas</li>
    <li>Andrey Alekseenko</li>
    <li>Arnav Singh</li>
    <li>Christian von Roques</li>
    <li>Eric Lombrozo</li>
    <li>Forrest Voight</li>
    <li>Gavin Andresen</li>
    <li>Gregory Maxwell</li>
    <li>Jeff Garzik</li>
    <li>Luke Dashjr</li>
    <li>Matt Corallo</li>
    <li>Mike Cassano</li>
    <li>Mike Hearn</li>
    <li>Peter Todd</li>
    <li>Philip Kaufmann</li>
    <li>Pieter Wuille</li>
    <li>Richard Schwab</li>
    <li>Robert Backhaus</li>
    <li>Rune K. Svendsen</li>
    <li>Sergio Demian Lerner</li>
    <li>Wladimir J. van der Laan</li>
    <li>burger2</li>
    <li>default</li>
    <li>fanquake</li>
    <li>grimd34th</li>
    <li>justmoon</li>
    <li>redshark1802</li>
    <li>tucenaber</li>
    <li>xanatos</li>
  </ul>
</div>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.8.0 released</title>
            <link>https://bitcoin.org/en/release/v0.8.0</link>
            <guid>https://bitcoin.org/en/release/v0.8.0</guid>
          
            <pubDate>Tue, 19 Feb 2013 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.8.0 are now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/</a></p>

<p>This is a major release designed to improve performance and handle the
increasing volume of transactions on the network.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>The first time you run after the upgrade a re-indexing process will be
started that will take anywhere from 30 minutes to several hours,
depending on the speed of your machine.</p>

<h2 id="incompatible-changes">Incompatible Changes</h2>

<p>This release no longer maintains a full index of historical transaction ids
by default, so looking up an arbitrary transaction using the getrawtransaction
RPC call will not work. If you need that functionality, you must run once
with -txindex=1 -reindex=1 to rebuild block-chain indices (see below for more
details).</p>

<h2 id="improvements">Improvements</h2>

<p>Mac and Windows binaries are signed with certificates owned by the Bitcoin
Foundation, to be compatible with the new security features in OSX 10.8 and
Windows 8.</p>

<p>LevelDB, a fast, open-source, non-relational database from Google, is
now used to store transaction and block indices.  LevelDB works much better
on machines with slow I/O and is faster in general. Berkeley DB is now only
used for the wallet.dat file (public and private wallet keys and transactions
relevant to you).</p>

<p>Pieter Wuille implemented many optimizations to the way transactions are
verified, so a running, synchronized node uses less working memory and does
much less I/O. He also implemented parallel signature checking, so if you
have a multi-CPU machine all CPUs will be used to verify transactions.</p>

<h2 id="new-features">New Features</h2>

<p>“Bloom filter” support in the network protocol for sending only relevant transactions to
lightweight clients.</p>

<p>contrib/verifysfbinaries is a shell-script to verify that the binary downloads
at sourceforge have not been tampered with. If you are able, you can help make
everybody’s downloads more secure by running this occasionally to check PGP
signatures against download file checksums.</p>

<p>contrib/spendfrom is a python-language command-line utility that demonstrates
how to use the “raw transactions” JSON-RPC api to send coins received from particular
addresses (also known as “coin control”).</p>

<h2 id="newchanged-settings-command-line-or-bitcoinconf-file">New/changed settings (command-line or bitcoin.conf file)</h2>

<p>dbcache : controls LevelDB memory usage.</p>

<p>par : controls how many threads to use to validate transactions. Defaults to the number
of CPUs on your machine, use -par=1 to limit to a single CPU.</p>

<p>txindex : maintains an extra index of old, spent transaction ids so they will be found
by the getrawtransaction JSON-RPC method.</p>

<p>reindex : rebuild block and transaction indices from the downloaded block data.</p>

<h2 id="new-json-rpc-api-features">New JSON-RPC API Features</h2>

<p>lockunspent / listlockunspent allow locking transaction outputs for a period of time so
they will not be spent by other processes that might be accessing the same wallet.</p>

<p>addnode / getaddednodeinfo methods, to connect to specific peers without restarting.</p>

<p>importprivkey now takes an optional boolean parameter (default true) to control whether
or not to rescan the blockchain for transactions after importing a new private key.</p>

<h2 id="important-bug-fixes">Important Bug Fixes</h2>

<p>Privacy leak: the position of the “change” output in most transactions was not being
properly randomized, making network analysis of the transaction graph to identify
users’ wallets easier.</p>

<p>Zero-confirmation transaction vulnerability: accepting zero-confirmation transactions
(transactions that have not yet been included in a block) from somebody you do not
trust is still not recommended, because there will always be ways for attackers to
double-spend zero-confirmation transactions. However, this release includes a bug
fix that makes it a little bit more difficult for attackers to double-spend a
certain type (“lockTime in the future”) of zero-confirmation transaction.</p>

<h2 id="dependency-changes">Dependency Changes</h2>

<p>Qt 4.8.3 (compiling against older versions of Qt 4 should continue to work)</p>

<h2 id="thanks-to-everybody-who-contributed-to-this-release">Thanks to everybody who contributed to this release:</h2>

<ul>
  <li>Alexander Kjeldaas</li>
  <li>Andrey Alekseenko</li>
  <li>Arnav Singh</li>
  <li>Christian von Roques</li>
  <li>Eric Lombrozo</li>
  <li>Forrest Voight</li>
  <li>Gavin Andresen</li>
  <li>Gregory Maxwell</li>
  <li>Jeff Garzik</li>
  <li>Luke Dashjr</li>
  <li>Matt Corallo</li>
  <li>Mike Cassano</li>
  <li>Mike Hearn</li>
  <li>Peter Todd</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>Richard Schwab</li>
  <li>Robert Backhaus</li>
  <li>Rune K. Svendsen</li>
  <li>Sergio Demian Lerner</li>
  <li>Wladimir J. van der Laan</li>
  <li>burger2</li>
  <li>default</li>
  <li>fanquake</li>
  <li>grimd34th</li>
  <li>justmoon</li>
  <li>redshark1802</li>
  <li>tucenaber</li>
  <li>xanatos</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.7.2 released</title>
            <link>https://bitcoin.org/en/release/v0.7.2</link>
            <guid>https://bitcoin.org/en/release/v0.7.2</guid>
          
            <pubDate>Fri, 14 Dec 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.7.2 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2</a></p>

<p>This is a bug-fix minor release.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you were running on Linux with a version that might have been compiled
with a different version of Berkeley DB (for example, if you were using an
Ubuntu PPA version), then run the old version again with the -detachdb
argument and shut it down; if you do not, then the new version will not
be able to read the database files and will exit with an error.</p>

<p>Explanation of -detachdb (and the new “stop true” RPC command):
The Berkeley DB database library stores data in both “.dat” and
“log” files, so the database is always in a consistent state,
even in case of power failure or other sudden shutdown. The
format of the “.dat” files is portable between different
versions of Berkeley DB, but the “log” files are not– even minor
version differences may have incompatible “log” files. The
-detachdb option moves any pending changes from the “log” files
to the “blkindex.dat” file for maximum compatibility, but makes
shutdown much slower. Note that the “wallet.dat” file is always
detached, and versions prior to 0.6.0 detached all databases
at shutdown.</p>

<h2 id="bug-fixes">Bug fixes</h2>

<ul>
  <li>
    <p>Prevent RPC <code class="language-text highlighter-rouge">move</code> from deadlocking. This was caused by trying to lock the
database twice.</p>
  </li>
  <li>
    <p>Fix use-after-free problems in initialization and shutdown, the latter of
which caused Bitcoin-Qt to crash on Windows when exiting.</p>
  </li>
  <li>
    <p>Correct library linking so building on Windows natively works.</p>
  </li>
  <li>
    <p>Avoid a race condition and out-of-bounds read in block creation/mining code.</p>
  </li>
  <li>
    <p>Improve platform compatibility quirks, including fix for 100% CPU utilization
on FreeBSD 9.</p>
  </li>
  <li>
    <p>A few minor corrections to error handling, and updated translations.</p>
  </li>
  <li>
    <p>OSX 10.5 supported again</p>
  </li>
</ul>

<hr />
<p>Thanks to everybody who contributed to this release:</p>

<ul>
  <li>Alex</li>
  <li>dansmith</li>
  <li>Gavin Andresen</li>
  <li>Gregory Maxwell</li>
  <li>Jeff Garzik</li>
  <li>Luke Dashjr</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>Wladimir J. van der Laan</li>
  <li>grimd34th</li>
</ul>

]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.7.1 released</title>
            <link>https://bitcoin.org/en/release/v0.7.1</link>
            <guid>https://bitcoin.org/en/release/v0.7.1</guid>
          
            <pubDate>Fri, 19 Oct 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.7.1 is now available from:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/</a></p>

<p>This is a bug-fix minor release.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<p>Project source code is hosted at github; you can get
source-only tarballs/zipballs directly from there:
  <a href="https://github.com/bitcoin/bitcoin/tarball/v0.7.1">https://github.com/bitcoin/bitcoin/tarball/v0.7.1</a>  # .tar.gz
  <a href="https://github.com/bitcoin/bitcoin/zipball/v0.7.1">https://github.com/bitcoin/bitcoin/zipball/v0.7.1</a>  # .zip</p>

<p>Ubuntu Linux users can use the “Personal Package Archive” (PPA)
maintained by Matt Corallo to automatically keep 
up-to-date.  Just type:
  sudo apt-add-repository ppa:bitcoin/bitcoin
  sudo apt-get update
in your terminal, then install the bitcoin-qt package:
  sudo apt-get install bitcoin-qt</p>

<h2 id="known-issues">KNOWN ISSUES</h2>

<p>Mac OSX 10.5 is no longer supported.</p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you were running on Linux with a version that might have been compiled
with a different version of Berkeley DB (for example, if you were using an
Ubuntu PPA version), then run the old version again with the -detachdb
argument and shut it down; if you do not, then the new version will not
be able to read the database files and will exit with an error.</p>

<p>Explanation of -detachdb (and the new “stop true” RPC command):
The Berkeley DB database library stores data in both “.dat” and
“log” files, so the database is always in a consistent state,
even in case of power failure or other sudden shutdown. The
format of the “.dat” files is portable between different
versions of Berkeley DB, but the “log” files are not– even minor
version differences may have incompatible “log” files. The
-detachdb option moves any pending changes from the “log” files
to the “blkindex.dat” file for maximum compatibility, but makes
shutdown much slower. Note that the “wallet.dat” file is always
detached, and versions prior to 0.6.0 detached all databases
at shutdown.</p>

<h2 id="new-features">New features</h2>

<ul>
  <li>
    <p>Added a boolean argument to the RPC <code class="language-text highlighter-rouge">stop</code> command, if true sets
-detachdb to create standalone database .dat files before shutting down.</p>
  </li>
  <li>
    <p>-salvagewallet command-line option, which moves any existing wallet.dat
to wallet.{timestamp}.dat and then attempts to salvage public/private
keys and master encryption keys (if the wallet is encrypted) into
a new wallet.dat. This should only be used if your wallet becomes
corrupted, and is not intended to replace regular wallet backups.</p>
  </li>
  <li>
    <p>Import $DataDir/bootstrap.dat automatically, if it exists.</p>
  </li>
</ul>

<h2 id="dependency-changes">Dependency changes</h2>

<ul>
  <li>
    <p>Qt 4.8.2 for Windows builds</p>
  </li>
  <li>
    <p>openssl 1.0.1c</p>
  </li>
</ul>

<h2 id="bug-fixes">Bug fixes</h2>

<ul>
  <li>
    <p>Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.</p>
  </li>
  <li>
    <p>When running -testnet, use RPC port 18332 by default.</p>
  </li>
  <li>
    <p>Better detection and handling of corrupt wallet.dat and blkindex.dat files.
Previous versions would crash with a DB_RUNRECOVERY exception, this
version detects most problems and tells you how to recover if it
cannot recover itself.</p>
  </li>
  <li>
    <p>Fixed an uninitialized variable bug that could cause transactions to
be reported out of order.</p>
  </li>
  <li>
    <p>Fixed a bug that could cause occasional crashes on exit.</p>
  </li>
  <li>
    <p>Warn the user that they need to create fresh wallet backups after they
encrypt their wallet.</p>
  </li>
</ul>

<hr />
<p>Thanks to everybody who contributed to this release:</p>

<ul>
  <li>Gavin Andresen</li>
  <li>Jeff Garzik</li>
  <li>Luke Dashjr</li>
  <li>Mark Friedenbach</li>
  <li>Matt Corallo</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>Rune K. Svendsen</li>
  <li>Virgil Dupras</li>
  <li>Wladimir J. van der Laan</li>
  <li>fanquake</li>
  <li>kjj2</li>
  <li>xanatos</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.7.0 released</title>
            <link>https://bitcoin.org/en/release/v0.7.0</link>
            <guid>https://bitcoin.org/en/release/v0.7.0</guid>
          
            <pubDate>Mon, 17 Sep 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.7.0 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/</a></p>

<p>We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt
upgrade to this release, except for users running Mac OSX 10.5.</p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<p>Project source code is hosted at github; you can get
source-only tarballs/zipballs directly from there:
  <a href="https://github.com/bitcoin/bitcoin/tarball/v0.7.0">https://github.com/bitcoin/bitcoin/tarball/v0.7.0</a>  # .tar.gz
  <a href="https://github.com/bitcoin/bitcoin/zipball/v0.7.0">https://github.com/bitcoin/bitcoin/zipball/v0.7.0</a>  # .zip</p>

<p>Ubuntu Linux users can use the “Personal Package Archive” (PPA)
maintained by Matt Corallo to automatically keep 
bitcoin up-to-date.  Just type
  sudo apt-add-repository ppa:bitcoin/bitcoin
  sudo apt-get update
in your terminal, then install the bitcoin-qt package:
  sudo apt-get install bitcoin-qt</p>

<h2 id="how-to-upgrade">How to Upgrade</h2>

<p>If you are running an older version, shut it down. Wait
until it has completely shut down (which might take a few minutes for older
versions), then run the installer (on Windows) or just copy over
/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).</p>

<p>If you were running on Linux with a version that might have been compiled
with a different version of Berkeley DB (for example, if you were using the
PPA and are switching to the binary release), then run the old version again
with the -detachdb argument and shut it down; if you do not, then the new
version will not be able to read the database files and will exit with an error.</p>

<h2 id="incompatible-changes">Incompatible Changes</h2>
<ul>
  <li>Replaced the <code class="language-text highlighter-rouge">getmemorypool</code> RPC command with <code class="language-text highlighter-rouge">getblocktemplate/submitblock</code>
and <code class="language-text highlighter-rouge">getrawmempool</code> commands.</li>
  <li>Remove deprecated RPC <code class="language-text highlighter-rouge">getblocknumber</code></li>
</ul>

<h2 id="bitcoin-improvement-proposals-implemented">Bitcoin Improvement Proposals implemented</h2>
<p>BIP 22 - <code class="language-text highlighter-rouge">getblocktemplate</code>, <code class="language-text highlighter-rouge">submitblock</code> RPCs
BIP 34 - block version 2, height in coinbase
BIP 35 - <code class="language-text highlighter-rouge">mempool</code> message, extended <code class="language-text highlighter-rouge">getdata</code> message behavior</p>

<h2 id="core-bitcoin-handling-and-blockchain-database">Core bitcoin handling and blockchain database</h2>
<ul>
  <li>Reduced CPU usage, by eliminating some redundant hash calculations</li>
  <li>Cache signature verifications, to eliminate redundant signature checks</li>
  <li>Transactions with zero-value outputs are considered non-standard</li>
  <li>Mining: when creating new blocks, sort ‘paid’ area by fee-per-kb</li>
  <li>Database: better validation of on-disk stored data</li>
  <li>Database: minor optimizations and reliability improvements</li>
  <li>-loadblock=FILE will import an external block file</li>
  <li>Additional DoS (denial-of-service) prevention measures</li>
  <li>New blockchain checkpoint at block 193,000</li>
</ul>

<h2 id="json-rpc-api">JSON-RPC API</h2>
<ul>
  <li>Internal HTTP server is now thread-per-connection, rather than
a single-threaded queue that would stall on network I/O.</li>
  <li>Internal HTTP server supports HTTP/1.1, pipelined requests and
connection keep-alive.</li>
  <li>Support JSON-RPC 2.0 batches, to encapsulate multiple JSON-RPC requests
within a single HTTP request.</li>
  <li>IPv6 support</li>
  <li>Added raw transaction API.  See https://gist.github.com/2839617</li>
  <li>Added <code class="language-text highlighter-rouge">getrawmempool</code>, to list contents of TX memory pool</li>
  <li>Added <code class="language-text highlighter-rouge">getpeerinfo</code>, to list data about each connected network peer</li>
  <li>Added <code class="language-text highlighter-rouge">listaddressgroupings</code> for better coin control</li>
  <li>Rework getblock call.</li>
  <li>Remove deprecated RPC <code class="language-text highlighter-rouge">getblocknumber</code></li>
  <li>Remove superceded RPC <code class="language-text highlighter-rouge">getmemorypool</code> (see BIP 22, above)</li>
  <li>listtransactions output now displays “smart” times for transactions,
and <code class="language-text highlighter-rouge">blocktime</code> and <code class="language-text highlighter-rouge">timereceived</code> fields were added</li>
</ul>

<h2 id="p2p-networking">P2P networking</h2>
<ul>
  <li>IPv6 support</li>
  <li>Tor hidden service support (see doc/Tor.txt)</li>
  <li>Attempts to fix “stuck blockchain download” problems</li>
  <li>Replace BDB database “addr.dat” with internally-managed “peers.dat”
file containing peer address data.</li>
  <li>Lower default send buffer from 10MB to 1MB</li>
  <li>proxy: SOCKS5 by default</li>
  <li>Support connecting by hostnames passed to proxy</li>
  <li>Add -seednode connections, and use this instead of DNS seeds when proxied</li>
  <li>Added -externalip and -discover</li>
  <li>Add -onlynet to connect only to a given network (IPv4, IPv6, or Tor)</li>
  <li>Separate listening sockets, <code class="language-text highlighter-rouge">-bind=&lt;addr&gt;</code></li>
</ul>

<h2 id="qt-gui">Qt GUI</h2>
<ul>
  <li>Add UI RPC console / debug window</li>
  <li>Re-Enable URI handling on Windows, add safety checks and tray-notifications</li>
  <li>Harmonize the use of ellipsis (“…”) to be used in menus, but not on buttons</li>
  <li>Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)</li>
  <li>Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI</li>
  <li>Merge sign/verify message into a single window with tabbed UI</li>
  <li>Ensure a changed bitcoin unit immediately updates all GUI elements that use units</li>
  <li>Update QR Code dialog</li>
  <li>Improve error reporting at startup</li>
  <li>Fine-grained UI updates for a much smoother UI during block downloads</li>
  <li>Remove autocorrection of 0/i in addresses in UI</li>
  <li>Reorganize tray icon menu into more logical order</li>
  <li>Persistently poll for balance change when number of blocks changed</li>
  <li>Much better translations</li>
  <li>Override progress bar design on platforms with segmented progress bars to assist with readability</li>
  <li>Added ‘immature balance’ display on the overview page</li>
  <li>(Windows only): enable ASLR and DEP for bitcoin-qt.exe</li>
  <li>(Windows only): add meta-data to bitcoin-qt.exe (e.g. description)</li>
</ul>

<h2 id="internal-codebase">Internal codebase</h2>
<ul>
  <li>Additional unit tests</li>
  <li>Compile warning fixes</li>
</ul>

<h2 id="miscellaneous">Miscellaneous</h2>
<ul>
  <li>Reopen debug.log upon SIGHUP</li>
  <li>Bash programmable completion for bitcoind(1)</li>
  <li>On supported OS’s, each thread is given a useful name</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.6.3 released</title>
            <link>https://bitcoin.org/en/release/v0.6.3</link>
            <guid>https://bitcoin.org/en/release/v0.6.3</guid>
          
            <pubDate>Mon, 25 Jun 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.6.3 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/</a></p>

<p>This is a bug-fix release, with no new features.</p>

<h1 id="change-summary">CHANGE SUMMARY</h1>

<p>Fixed a serious denial-of-service attack that could cause the
bitcoin process to become unresponsive. Thanks to Sergio Lerner
for finding and responsibly reporting the problem. (CVE-2012-3789)</p>

<p>Optimized the process of checking transaction signatures, to
speed up processing of new block messages and make propagating
blocks across the network faster.</p>

<p>Fixed an obscure bug that could cause the bitcoin process to get
stuck on an invalid block-chain, if the invalid chain was
hundreds of blocks long.</p>

<p>Bitcoin-Qt no longer automatically selects the first address
in the address book (Issue #1384).</p>

<p>Fixed minimize-to-dock behavior of Bitcon-Qt on the Mac.</p>

<p>Added a block checkpoint at block 185,333 to speed up initial
blockchain download.</p>

<h1 id="thanks-to-everybody-who-contributed-to-this-release">Thanks to everybody who contributed to this release:</h1>

<ul>
  <li>Chris Moore</li>
  <li>Christian von Roques</li>
  <li>Fordy</li>
  <li>Gavin Andresen</li>
  <li>Jeff Garzik</li>
  <li>Luke Dashjr</li>
  <li>Matt Corallo</li>
  <li>Michael Hendricks</li>
  <li>Peter Todd</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>R E Broadley</li>
  <li>Sergio Lerner</li>
  <li>Wladimir J. van der Laan</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.6.2 released</title>
            <link>https://bitcoin.org/en/release/v0.6.2</link>
            <guid>https://bitcoin.org/en/release/v0.6.2</guid>
          
            <pubDate>Tue, 08 May 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.6.2 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/</a></p>

<p>This is a bug-fix and code-cleanup release, with no major new features.</p>

<h1 id="notable-changes">NOTABLE CHANGES</h1>

<p>Much faster shutdowns. However, the blkindex.dat file is no longer
portable to different data directories by default. If you need a
portable blkindex.dat file then run with the new -detachdb=1 option
or the “Detach databases at shutdown” GUI preference.</p>

<p>Fixed <a href="https://github.com/bitcoin/bitcoin/issues/1065">https://github.com/bitcoin/bitcoin/issues/1065</a>, a bug that
could cause long-running nodes to crash.</p>

<p>Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux
binaries are dynamically linked to the version of OpenSSL on the system).</p>

<h1 id="change-summary">CHANGE SUMMARY</h1>

<p>Use <code class="language-text highlighter-rouge">git shortlog --no-merges v0.6.0..</code> for a summary of this release.</p>

<p>Source codebase changes:</p>
<ul>
  <li>Many source code cleanups and warnings fixes.  Close to building with -Wall</li>
  <li>Locking overhaul, and several minor locking fixes</li>
  <li>Several source code portability fixes, e.g. FreeBSD</li>
</ul>

<p>JSON-RPC interface changes:</p>
<ul>
  <li>addmultisigaddress enabled for mainnet (previously only enabled for testnet)</li>
</ul>

<p>Network protocol changes:</p>
<ul>
  <li>protocol version 60001</li>
  <li>added nonce value to “ping” message (BIP 31)</li>
  <li>added new “pong” message (BIP 31)</li>
</ul>

<p>Backend storage changes:</p>
<ul>
  <li>Less redundant database flushing, especially during initial block download</li>
  <li>Shutdown improvements (see above)</li>
</ul>

<p>Qt user interface:</p>
<ul>
  <li>minor URI handling improvements</li>
  <li>progressbar improvements</li>
  <li>error handling improvements (show message box rather than console exception,
etc.)</li>
  <li>by popular request, make 4th bar of connection icon green</li>
</ul>

<p>Thanks to everybody who contributed to this release:</p>

<ul>
  <li>Chris Moore</li>
  <li>Dwayne C. Litzenberger</li>
  <li>Gavin Andresen</li>
  <li>Jeff Garzik</li>
  <li>Luke Dashjr</li>
  <li>Matt Corallo</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>R E Broadley</li>
  <li>Timothy Redaelli</li>
  <li>Wladimir J. van der Laan</li>
  <li>cardpuncher</li>
  <li>freewil</li>
  <li>graingert</li>
  <li>sje397</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.6.1 released</title>
            <link>https://bitcoin.org/en/release/v0.6.1</link>
            <guid>https://bitcoin.org/en/release/v0.6.1</guid>
          
            <pubDate>Fri, 04 May 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.6.1 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.1/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.1/</a></p>

<p>This is a bug-fix and code-cleanup release, with no major new features.</p>

<h1 id="notable-changes">NOTABLE CHANGES</h1>

<p>Much faster shutdowns. However, the blkindex.dat file is no longer
portable to different data directories by default. If you need a
portable blkindex.dat file then run with the new -detachdb=1 option
or the “Detach databases at shutdown” GUI preference.</p>

<p>Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux
binaries are dynamically linked to the version of OpenSSL on the system).</p>

<h1 id="change-summary">CHANGE SUMMARY</h1>

<p>Use <code class="language-text highlighter-rouge">git shortlog --no-merges v0.6.0..</code> for a summary of this release.</p>

<p>Source codebase changes:</p>
<ul>
  <li>Many source code cleanups and warnings fixes.  Close to building with -Wall</li>
  <li>Locking overhaul, and several minor locking fixes</li>
  <li>Several source code portability fixes, e.g. FreeBSD</li>
</ul>

<p>JSON-RPC interface changes:</p>
<ul>
  <li>addmultisigaddress enabled for mainnet (previously only enabled for testnet)</li>
</ul>

<p>Network protocol changes:</p>
<ul>
  <li>protocol version 60001</li>
  <li>added nonce value to “ping” message (BIP 31)</li>
  <li>added new “pong” message (BIP 31)</li>
</ul>

<p>Backend storage changes:</p>
<ul>
  <li>Less redundant database flushing, especially during initial block download</li>
  <li>Shutdown improvements (see above)</li>
</ul>

<p>Qt user interface:</p>
<ul>
  <li>minor URI handling improvements</li>
  <li>progressbar improvements</li>
  <li>error handling improvements (show message box rather than console exception,
etc.)</li>
  <li>by popular request, make 4th bar of connection icon green</li>
</ul>

<p>Thanks to everybody who contributed to this release:</p>

<ul>
  <li>Chris Moore</li>
  <li>Dwayne C. Litzenberger</li>
  <li>Gavin Andresen</li>
  <li>Jeff Garzik</li>
  <li>Luke Dashjr</li>
  <li>Matt Corallo</li>
  <li>Philip Kaufmann</li>
  <li>Pieter Wuille</li>
  <li>R E Broadley</li>
  <li>Timothy Redaelli</li>
  <li>Wladimir J. van der Laan</li>
  <li>cardpuncher</li>
  <li>freewil</li>
  <li>graingert</li>
  <li>sje397</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.6.0 released</title>
            <link>https://bitcoin.org/en/release/v0.6.0</link>
            <guid>https://bitcoin.org/en/release/v0.6.0</guid>
          
            <pubDate>Fri, 30 Mar 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.6.0 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/</a></p>

<p>This release includes more than 20 language localizations.
More translations are welcome; join the
project at Transifex to help:
  <a href="https://www.transifex.net/projects/p/bitcoin/">https://www.transifex.net/projects/p/bitcoin/</a></p>

<p>Please report bugs using the issue tracker at github:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<p>Project source code is hosted at github; we are no longer
distributing .tar.gz files here, you can get them
directly from github:
 <a href="https://github.com/bitcoin/bitcoin/tarball/v0.6.0">https://github.com/bitcoin/bitcoin/tarball/v0.6.0</a>  # .tar.gz
 <a href="https://github.com/bitcoin/bitcoin/zipball/v0.6.0">https://github.com/bitcoin/bitcoin/zipball/v0.6.0</a>  # .zip</p>

<p>For Ubuntu users, there is a ppa maintained by Matt Corallo which
you can add to your system so that it will automatically keep
bitcoin up-to-date.  Just type
 sudo apt-add-repository ppa:bitcoin/bitcoin
in your terminal, then install the bitcoin-qt package.</p>

<h2 id="known-issues">KNOWN ISSUES</h2>

<p>Shutting down while synchronizing with the network
(downloading the blockchain) can take more than a minute,
because database writes are queued to speed up download
time.</p>

<h2 id="new-features-since-bitcoin-version-05">NEW FEATURES SINCE BITCOIN VERSION 0.5</h2>

<p>Initial network synchronization should be much faster
(one or two hours on a typical machine instead of ten or more
hours).</p>

<p>Backup Wallet menu option.</p>

<p>Bitcoin-Qt can display and save QR codes for sending
and receiving addresses.</p>

<p>New context menu on addresses to copy/edit/delete them.</p>

<p>New Sign Message dialog that allows you to prove that you
own a bitcoin address by creating a digital
signature.</p>

<p>New wallets created with this version will
use 33-byte ‘compressed’ public keys instead of
65-byte public keys, resulting in smaller
transactions and less traffic on the bitcoin
network. The shorter keys are already supported
by the network but wallet.dat files containing
short keys are not compatible with earlier
versions of Bitcoin-Qt/bitcoind.</p>

<p>New command-line argument <code class="language-text highlighter-rouge">-blocknotify=&lt;command&gt;</code>
that will spawn a shell process to run <code class="language-text highlighter-rouge">&lt;command&gt;</code>
when a new block is accepted.</p>

<p>New command-line argument -splash=0 to disable
Bitcoin-Qt’s initial splash screen</p>

<p>validateaddress JSON-RPC api command output includes
two new fields for addresses in the wallet:
 pubkey : hexadecimal public key
 iscompressed : true if pubkey is a short 33-byte key</p>

<p>New JSON-RPC api commands for dumping/importing
private keys from the wallet (dumprivkey, importprivkey).</p>

<p>New JSON-RPC api command for getting information about
blocks (getblock, getblockhash).</p>

<p>New JSON-RPC api command (getmininginfo) for getting
extra information related to mining. The getinfo
JSON-RPC command no longer includes mining-related
information (generate/genproclimit/hashespersec).</p>

<h2 id="notable-changes">NOTABLE CHANGES</h2>

<p>BIP30 implemented (security fix for an attack involving
duplicate “coinbase transactions”).</p>

<p>The -nolisten, -noupnp and -nodnsseed command-line
options were renamed to -listen, -upnp and -dnsseed,
with a default value of 1. The old names are still
supported for compatibility (so specifying -nolisten
is automatically interpreted as -listen=0; every
boolean argument can now be specified as either
-foo or -nofoo).</p>

<p>The -noirc command-line options was renamed to
-irc, with a default value of 0. Run -irc=1 to
get the old behavior.</p>

<p>Three fill-up-available-memory denial-of-service
attacks were fixed.</p>

<h2 id="not-yet-implemented-features">NOT YET IMPLEMENTED FEATURES</h2>

<p>Support for clicking on bitcoin: URIs and
opening/launching Bitcoin-Qt is available only on Linux,
and only if you configure your desktop to launch
Bitcoin-Qt. All platforms support dragging and dropping
bitcoin: URIs onto the Bitcoin-Qt window to start
payment.</p>

<h2 id="preliminary-support-for-multisignature-transactions">PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS</h2>

<p>This release has preliminary support for multisignature
transactions– transactions that require authorization
from more than one person or device before they
will be accepted by the bitcoin network.</p>

<p>Prior to this release, multisignature transactions
were considered ‘non-standard’ and were ignored;
with this release multisignature transactions are
considered standard and will start to be relayed
and accepted into blocks.</p>

<p>It is expected that future releases of Bitcoin-Qt
will support the creation of multisignature transactions,
once enough of the network has upgraded so relaying
and validating them is robust.</p>

<p>For this release, creation and testing of multisignature
transactions is limited to the bitcoin test network using
the “addmultisigaddress” JSON-RPC api call.</p>

<p>Short multisignature address support is included in this
release, as specified in BIP 13 and BIP 16.</p>

<p>Thanks to everybody who contributed to this release:</p>

<ul>
  <li>Alex B</li>
  <li>Alistair Buxton</li>
  <li>Chris Moore</li>
  <li>Clark Gaebel</li>
  <li>Daniel Folkinshteyn</li>
  <li>Dylan Noblesmith</li>
  <li>Forrest Voight</li>
  <li>Gavin Andresen</li>
  <li>Gregory Maxwell</li>
  <li>Janne Pulkkinen</li>
  <li>Joel Kaartinen</li>
  <li>Lars Rasmusson</li>
  <li>Luke Dashjr</li>
  <li>Matt Corallo</li>
  <li>Michael Ford</li>
  <li>Michael Hendricks</li>
  <li>Nick Bosma</li>
  <li>Nils Schneider</li>
  <li>Philip Kaufmann</li>
  <li>Pierre Pronchery</li>
  <li>Pieter Wuille</li>
  <li>Rune K Svendsen</li>
  <li>Wladimir J. van der Laan</li>
  <li>coderrr</li>
  <li>p2k</li>
  <li>sje397</li>
</ul>

<p>Special thanks to Sergio Lerner and Matt Corallo for bringing
potential denial-of-service attacks to our attention.</p>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.5.3.1 released</title>
            <link>https://bitcoin.org/en/release/v0.5.3.1</link>
            <guid>https://bitcoin.org/en/release/v0.5.3.1</guid>
          
            <pubDate>Fri, 16 Mar 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.5.3.1 for Windows is now available for download at:
<a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/</a></p>

<p>This is a bugfix-only release based on 0.5.1.</p>

<p>Please report bugs using the issue tracker at GitHub:
<a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="bug-fixes">BUG FIXES</h2>

<ul>
  <li>Fixed a potentially critical security vulnerability in Windows
versions of Bitcoin-Qt.</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.5.3 released</title>
            <link>https://bitcoin.org/en/release/v0.5.3</link>
            <guid>https://bitcoin.org/en/release/v0.5.3</guid>
          
            <pubDate>Wed, 14 Mar 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.5.3 is now available for download at:
<a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/</a></p>

<p>This is a bugfix-only release based on 0.5.1.
It also includes a few protocol updates.</p>

<p>Please report bugs using the issue tracker at GitHub:
<a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="protocol-updates">PROTOCOL UPDATES</h2>

<ul>
  <li>
    <p>BIP 30: Introduce a new network rule: “a block is not valid if it contains
a transaction whose hash already exists in the block chain, unless all that
transaction’s outputs were already spent before said block” beginning on
March 15, 2012, 00:00 UTC.</p>
  </li>
  <li>
    <p>On testnet, allow mining of min-difficulty blocks if 20 minutes have gone
by without mining a regular-difficulty block. This is to make testing
Bitcoin easier, and will not affect normal mode.</p>
  </li>
</ul>

<h2 id="bug-fixes">BUG FIXES</h2>

<ul>
  <li>
    <p>Limit the number of orphan transactions stored in memory, to prevent a
potential denial-of-service attack by flooding orphan transactions. Also
never store invalid transactions at all.</p>
  </li>
  <li>
    <p>Fix possible buffer overflow on systems with very long application data
paths. This is not exploitable.</p>
  </li>
  <li>
    <p>Resolved multiple bugs preventing long-term unlocking of encrypted wallets
(issue #922).</p>
  </li>
  <li>
    <p>Only send local IP in “version” messages if it is globally routable (ie,
not private), and try to get such an IP from UPnP if applicable.</p>
  </li>
  <li>
    <p>Reannounce UPnP port forwards every 20 minutes, to workaround routers
expiring old entries, and allow the -upnp option to override any stored
setting.</p>
  </li>
  <li>
    <p>Skip splash screen when -min is used, and fix Minimize to Tray function.</p>
  </li>
  <li>
    <p>Do not blank “label” in Bitcoin-Qt “Send” tab, if the user has already
entered something.</p>
  </li>
  <li>
    <p>Correct various labels and messages.</p>
  </li>
  <li>
    <p>Various memory leaks and potential null pointer deferences have been
fixed.</p>
  </li>
  <li>
    <p>Handle invalid Bitcoin URIs using “bitcoin://” instead of “bitcoin:”.</p>
  </li>
  <li>
    <p>Several shutdown issues have been fixed.</p>
  </li>
  <li>
    <p>Revert to “global progress indication”, as starting from zero every time
was considered too confusing for many users.</p>
  </li>
  <li>
    <p>Check that keys stored in the wallet are valid at startup, and if not,
report corruption.</p>
  </li>
  <li>
    <p>Enable accessible widgets on Windows, so that people with screen readers
such as NVDA can make sense of it.</p>
  </li>
  <li>
    <p>Various build fixes.</p>
  </li>
  <li>
    <p>If no password is specified to bitcoind, recommend a secure password.</p>
  </li>
  <li>
    <p>Automatically focus and scroll to new “Send coins” entries in Bitcoin-Qt.</p>
  </li>
  <li>
    <p>Show a message box for –help on Windows, for Bitcoin-Qt.</p>
  </li>
  <li>
    <p>Add missing “About Qt” menu option to show built-in Qt About dialog.</p>
  </li>
  <li>
    <p>Don’t show “-daemon” as an option for Bitcoin-Qt, since it isn’t
available.</p>
  </li>
  <li>
    <p>Update hard-coded fallback seed nodes, choosing recent ones with long
uptime and versions at least 0.4.0.</p>
  </li>
  <li>
    <p>Add checkpoint at block 168,000.</p>
  </li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.5.2 released</title>
            <link>https://bitcoin.org/en/release/v0.5.2</link>
            <guid>https://bitcoin.org/en/release/v0.5.2</guid>
          
            <pubDate>Mon, 09 Jan 2012 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.5.2 is now available for download at:
<a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/</a></p>

<p>This is a bugfix-only release.</p>

<p>Please report bugs using the issue tracker at GitHub:
<a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="bug-fixes">BUG FIXES</h2>

<ul>
  <li>
    <p>Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1
skipped checking ECDSA signatures during initial blockchain download; this was
not a security vulnerability).</p>
  </li>
  <li>
    <p>Cease locking memory used by non-sensitive information (this caused a huge
performance hit on some platforms, especially noticable during initial blockchain
download).</p>
  </li>
  <li>
    <p>Fixed some address-handling deadlocks (client freezes).</p>
  </li>
  <li>
    <p>No longer accept inbound connections over the internet when Bitcoin is being
used with Tor (identity leak).</p>
  </li>
  <li>
    <p>Re-enable SSL support for the JSON-RPC interface (it was unintentionally
disabled for the 0.5.0 and 0.5.1 release Linux binaries).</p>
  </li>
  <li>
    <p>Use the correct base transaction fee of 0.0005 BTC for accepting transactions
into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was
only meant to be relayed).</p>
  </li>
  <li>
    <p>Don’t show “IP” for transactions which are not necessarily IP transactions.</p>
  </li>
  <li>
    <p>Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).</p>
  </li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.5.1 released</title>
            <link>https://bitcoin.org/en/release/v0.5.1</link>
            <guid>https://bitcoin.org/en/release/v0.5.1</guid>
          
            <pubDate>Thu, 15 Dec 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.5.1 is now available for download at:
<a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/</a></p>

<p>This is a bugfix-only release.</p>

<p>This release includes 13 translations, including 5 new translations:
Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.
More translations are welcome; join the project at Transifex if you can help:
<a href="https://www.transifex.com/projects/p/bitcoin/">https://www.transifex.com/projects/p/bitcoin/</a></p>

<p>Please report bugs using the issue tracker at GitHub:
<a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<p>For Ubuntu users, there is a new ppa maintained by Matt Corallo which
you can add to your system so that it will automatically keep
bitcoin up-to-date.  Just type</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-add-repository ppa:bitcoin/bitcoin
</code></pre></div></div>

<p>in your terminal, then install the bitcoin-qt package.</p>

<h2 id="bug-fixes">BUG FIXES</h2>

<ul>
  <li>
    <p>Re-enable SSL support for the JSON-RPC interface (it was unintentionally
disabled for the 0.5.0 release binaries).</p>
  </li>
  <li>
    <p>The code that finds peers via “dns seeds” no longer stops bitcoin startup
if one of the dns seed machines is down.</p>
  </li>
  <li>
    <p>Tooltips on the transaction list view were rendering incorrectly (as black boxes
or with a transparent background).</p>
  </li>
  <li>
    <p>Prevent a denial-of-service attack involving flooding a bitcoin node with
orphan blocks.</p>
  </li>
  <li>
    <p>The wallet passphrase dialog now warns you if the caps lock key was pressed.</p>
  </li>
  <li>
    <p>Improved searching in addresses and labels in bitcoin-qt.</p>
  </li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin-Qt version 0.5.0 released</title>
            <link>https://bitcoin.org/en/release/v0.5.0</link>
            <guid>https://bitcoin.org/en/release/v0.5.0</guid>
          
            <pubDate>Mon, 21 Nov 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Bitcoin-Qt version 0.5.0 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/</a></p>

<p>The major change for this release is a completely new graphical
that uses the Qt user interface toolkit.</p>

<p>This release includes German, Spanish, Spanish-Castilian, Norwegian
and Dutch translations. More translations are welcome; join the
project at Transifex if you can help:
  <a href="https://www.transifex.com/projects/p/bitcoin/">https://www.transifex.com/projects/p/bitcoin/</a></p>

<p>Please report bugs using the issue tracker at GitHub:
  <a href="https://github.com/bitcoin/bitcoin/issues">https://github.com/bitcoin/bitcoin/issues</a></p>

<h2 id="major-bug-fix--cve-2011-4447">MAJOR BUG FIX  (CVE-2011-4447)</h2>

<p>The wallet encryption feature introduced in Bitcoin version 0.4.0
did not sufficiently secure the private keys. An attacker who
managed to get a copy of your encrypted wallet.dat file might be
able to recover some or all of the unencrypted keys and steal the
associated coins.</p>

<p>If you have a previously encrypted wallet.dat, the first time you
run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will
shut down, and you will be prompted to restart it to run with the new,
properly encrypted file.</p>

<p>If you had a previously encrypted wallet.dat that might have been
copied or stolen (for example, you backed it up to a public
location) you should send all of your bitcoins to yourself
using a new bitcoin address and stop using any previously
generated addresses.</p>

<p>Wallets encrypted with this version of Bitcoin are written properly.</p>

<p>Technical note: the encrypted wallet’s ‘keypool’ will be regenerated the
first time you request a new bitcoin address; to be certain that the
new private keys are properly backed up you should:</p>

<ol>
  <li>
    <p>Run Bitcoin and let it rewrite the <code class="language-text highlighter-rouge">wallet.dat</code> file</p>
  </li>
  <li>
    <p>Run it again, then ask it for a new bitcoin address.</p>

    <p>Bitcoin-Qt: Address Book, then New Address…</p>

    <p>bitcoind: run the <code class="language-text highlighter-rouge">walletpassphrase</code> RPC command to unlock the wallet,
 then run the <code class="language-text highlighter-rouge">getnewaddress</code> RPC command.</p>
  </li>
  <li>
    <p>If your encrypted wallet.dat may have been copied or stolen, send
 all of your bitcoins to the new bitcoin address.</p>
  </li>
  <li>
    <p>Shut down Bitcoin, then backup the wallet.dat file.
 IMPORTANT: be sure to request a new bitcoin address before
 backing up, so that the ‘keypool’ is regenerated and backed up.</p>
  </li>
</ol>

<p>“Security in depth” is always a good idea, so choosing a secure
location for the backup and/or encrypting the backup before
uploading it is recommended. And as in previous releases, if your
machine is infected by malware there are several ways an
attacker might steal your bitcoins.</p>

<p>Thanks to Alan Reiner (aka etotheipi) for finding and reporting
this bug.</p>

<h2 id="major-gui-changes">MAJOR GUI CHANGES</h2>

<ul>
  <li>
    <p>“Splash” graphics at startup that show address/wallet/blockchain loading
progress.</p>
  </li>
  <li>
    <p>“Synchronizing with network” progress bar to show block-chain download
progress.</p>
  </li>
  <li>
    <p>Icons at the bottom of the window that show how well connected you are
to the network, with tooltips to display details.</p>
  </li>
  <li>
    <p>Drag and drop support for bitcoin: URIs on web pages.</p>
  </li>
  <li>
    <p>Export transactions as a .csv file.</p>
  </li>
  <li>
    <p>Many other GUI improvements, large and small.</p>
  </li>
</ul>

<h2 id="rpc-changes">RPC CHANGES</h2>

<ul>
  <li>
    <p>getmemorypool : new RPC command, provides everything needed to construct
a block with a custom generation transaction and submit a solution</p>
  </li>
  <li>
    <p>listsinceblock : new RPC command, list transactions since given block</p>
  </li>
  <li>
    <p>signmessage/verifymessage : new RPC commands to sign a message with
one of your private keys or verify that a message signed by the private
key associated with a bitcoin address.</p>
  </li>
</ul>

<h2 id="general-changes">GENERAL CHANGES</h2>

<ul>
  <li>Faster initial block download.</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin version 0.4.0 released</title>
            <link>https://bitcoin.org/en/release/v0.4.0</link>
            <guid>https://bitcoin.org/en/release/v0.4.0</guid>
          
            <pubDate>Fri, 23 Sep 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p><a href="http://sourceforge.net/mailarchive/message.php?msg_id=28132490">Full announcement (including signatures)</a></p>

<p>Bitcoin version 0.4.0 is now available for download at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/</a></p>

<p>The main feature in this release is wallet private key encryption;
you can set a passphrase that must be entered before sending coins.
See below for more information; if you decide to encrypt your wallet,
<strong>WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION</strong>. If you
forget or lose your wallet passphrase, you lose your bitcoins.
Previous versions of bitcoin are unable to read encrypted wallets,
and will crash on startup if the wallet is encrypted.</p>

<p>Also note: bitcoin version 0.4 uses a newer version of Berkeley DB
(bdb version 4.8) than previous versions (bdb 4.7). If you upgrade
to version 0.4 and then revert back to an earlier version of bitcoin
the it may be unable to start because bdb 4.7 cannot read bdb 4.8
“log” files.</p>

<h2 id="notable-bug-fixes-from-version-0324">Notable bug fixes from version 0.3.24</h2>

<ul>
  <li>
    <p>Fix several bitcoin-becomes-unresponsive bugs due to multithreading
deadlocks.</p>
  </li>
  <li>
    <p>Optimize database writes for large (lots of inputs) transactions
(fixes a potential denial-of-service attack)</p>
  </li>
</ul>

<h2 id="wallet-encryption">Wallet Encryption</h2>
<p>Bitcoin supports native wallet encryption so that people who steal your
wallet file don’t automatically get access to all of your Bitcoins.
In order to enable this feature, chose “Encrypt Wallet” from the
Options menu.  You will be prompted to enter a passphrase, which
will be used as the key to encrypt your wallet and will be needed
every time you wish to send Bitcoins.  If you lose this passphrase,
you will lose access to spend all of the bitcoins in your wallet,
no one, not even the Bitcoin developers can recover your Bitcoins.
This means you are responsible for your own security, store your
passphrase in a secure location and do not forget it.</p>

<p>Remember that the encryption built into bitcoin only encrypts the
actual keys which are required to send your bitcoins, not the full
wallet.  This means that someone who steals your wallet file will
be able to see all the addresses which belong to you, as well as the
relevant transactions, you are only protected from someone spending
your coins.</p>

<p>It is recommended that you backup your wallet file before you
encrypt your wallet.  To do this, close the Bitcoin client and
copy the wallet.dat file from <code class="language-text highlighter-rouge">~/.bitcoin/</code> on Linux, <code class="language-text highlighter-rouge">/Users/(user
name)/Library/Application Support/Bitcoin/</code> on Mac OSX, and <code class="language-text highlighter-rouge">%APPDATA%/Bitcoin/</code>
on Windows (that is <code class="language-text highlighter-rouge">/Users/(user name)/AppData/Roaming/Bitcoin</code> on
Windows Vista and 7 and <code class="language-text highlighter-rouge">/Documents and Settings/(user name)/Application
Data/Bitcoin</code> on Windows XP).  Once you have copied that file to a
safe location, reopen the Bitcoin client and Encrypt your wallet.
If everything goes fine, delete the backup and enjoy your encrypted
wallet.  Note that once you encrypt your wallet, you will never be
able to go back to a version of the Bitcoin client older than 0.4.</p>

<p>Keep in mind that you are always responsible for your own security.
All it takes is a slightly more advanced wallet-stealing trojan which
installs a keylogger to steal your wallet passphrase as you enter it
in addition to your wallet file and you have lost all your Bitcoins.
Wallet encryption cannot keep you safe if you do not practice
good security, such as running up-to-date antivirus software, only
entering your wallet passphrase in the Bitcoin client and using the
same passphrase only as your wallet passphrase.</p>

<p>See the <code class="language-text highlighter-rouge">doc/README</code> file in the bitcoin source for technical details
of wallet encryption.</p>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin version 0.3.24 released</title>
            <link>https://bitcoin.org/en/release/v0.3.24</link>
            <guid>https://bitcoin.org/en/release/v0.3.24</guid>
          
            <pubDate>Fri, 08 Jul 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p><a href="http://sourceforge.net/mailarchive/message.php?msg_id=27771039">Full announcement (including signatures)</a></p>

<p>Bitcoin v0.3.24 is now available for download at
<a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/</a></p>

<p>This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed – most notably block download problems were getting severe.  Wallet encryption is ready for testing at <a href="https://github.com/bitcoin/bitcoin/pull/352">https://github.com/bitcoin/bitcoin/pull/352</a> for the git-savvy, and hopefully will follow shortly in the next release, v0.4.</p>

<p>Notable fixes in v0.3.24, and the main reasons for this release:</p>

<ul>
  <li>Block downloads were failing or taking unreasonable amounts of time to complete, because the increased size of the block chain was bumping up against some earlier buffer-size DoS limits.</li>
  <li>Fix crash caused by loss/lack of network connection.</li>
</ul>

<p>Notable changes in v0.3.24:</p>

<ul>
  <li>DNS seeding enabled by default.</li>
  <li>UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of “-upnp” to help the network!).</li>
  <li>Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.</li>
  <li>Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4’s wallet encryption.</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin version 0.3.23 released</title>
            <link>https://bitcoin.org/en/release/v0.3.23</link>
            <guid>https://bitcoin.org/en/release/v0.3.23</guid>
          
            <pubDate>Tue, 14 Jun 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to
<a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/</a></p>

<p>This is another quick bugfix release, trying to deal with the influx of new bitcoin users.</p>

<p>Priority for next version:  wallet encryption</p>

<p>Main items of note:</p>

<p>P2P connect-to-node logic changed to reduce timeout a bit.  The network saw a huge influx of new users, who do not permit incoming connections.  This change is a short-term hack, to more quickly hunt for useful P2P connections.  Better “leaf node” logic is in the works, but this should let us limp along until then.  One may use -upnp to properly forward ports, and help the network.
Transaction fee reduced to 0.0005 for new transactions (see note below)
Client will relay transactions with fees as low as 0.0001 BTC (see note below)</p>

<p><strong>NOTE:</strong>  There has been some fee confusion recently.  Free transactions are supported and relayed as they always have been, according to special anti-spam rules.  See <a href="https://en.bitcoin.it/wiki/Transaction_fees">https://en.bitcoin.it/wiki/Transaction_fees</a> for details.</p>

<p>There were no changes between -rc1 and -final.</p>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin version 0.3.22 released</title>
            <link>https://bitcoin.org/en/release/v0.3.22</link>
            <guid>https://bitcoin.org/en/release/v0.3.22</guid>
          
            <pubDate>Sun, 05 Jun 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Download URL: <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/</a></p>

<p>This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.</p>

<p>Notable changes:</p>

<ul>
  <li>Client will accept and relay TX’s with 0.0005 BTC fee schedule (users still pay 0.01 BTC per kb, until next version)</li>
  <li>Non-standard transactions accepted on testnet</li>
  <li>Source code tree reorganized (prep for autotools build)</li>
  <li>Remove “Generate Coins” option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.</li>
  <li>IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99</li>
  <li>DNS names now may be used with -addnode, -connect (requires -dns to enable)</li>
</ul>

<p>RPC changes:</p>

<ul>
  <li><code class="language-text highlighter-rouge">listtransactions</code> adds <code class="language-text highlighter-rouge">from</code> param, for range queries</li>
  <li><code class="language-text highlighter-rouge">move</code> may take account balances negative</li>
  <li><code class="language-text highlighter-rouge">settxfee</code> added, to manually set TX fee</li>
</ul>

<p>Recommendations:  If you have trouble connecting to the network, try one or more of these techniques:</p>

<ul>
  <li>-dnsseed</li>
  <li>-upnp, or forward port 8333 on your router</li>
</ul>
]]></description>
          
        </item>
	
        <item>
            <title>Bitcoin version 0.3.21 released</title>
            <link>https://bitcoin.org/en/release/v0.3.21</link>
            <guid>https://bitcoin.org/en/release/v0.3.21</guid>
          
            <pubDate>Wed, 27 Apr 2011 00:00:00 GMT</pubDate>
          
          
            <description><![CDATA[<p>Binaries for Bitcoin version 0.3.21 are available at:
  <a href="http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/">http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/</a></p>

<p>Changes and new features from the 0.3.20 release include:</p>

<ul>
  <li>Universal Plug and Play support.  Enable automatic opening of a port
for incoming connections by running bitcoin or bitcoind with the</li>
  <li>-upnp=1 command line switch or using the Options dialog box.</li>
  <li>Support for full-precision bitcoin amounts.  You can now send, and
bitcoin will display, bitcoin amounts smaller than 0.01.  However,
sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so
you can send 1.0001 bitcoins without a fee, but you will be asked to
pay a fee if you try to send 0.0001).</li>
  <li>A new method of finding bitcoin nodes to connect with, via DNS A
records. Use the -dnsseed option to enable.</li>
</ul>

<p>For developers, changes to bitcoin’s remote-procedure-call API:</p>

<ul>
  <li>New rpc command “sendmany” to send bitcoins to more than one address
in a single transaction.</li>
  <li>Several bug fixes, including a serious intermittent bug that would
sometimes cause bitcoind to stop accepting rpc requests.</li>
  <li>-logtimestamps option, to add a timestamp to each line in debug.log.</li>
  <li>Immature blocks (newly generated, under 120 confirmations) are now
shown in listtransactions.</li>
</ul>
]]></description>
          
        </item>
	
</channel>
</rss>
